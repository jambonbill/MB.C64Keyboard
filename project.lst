gplink-0.13.3 alpha
Copyright (c) 1998-2005 gputils project
Listing File Generated: 1-18-2007  20:44:27
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;; BEGIN inserted by fixasm.pl
                                           ;; MPASM workarounds:
                                           BANKED  EQU 1
                                           ;; END inserted by fixasm.pl
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.5.0 #1020 (May  8 2005)
                                           ; This file generated Thu Jan 18 20:44:27 2007
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f452
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _MIOS_BOX_CFG0
                                           	extern _MIOS_BOX_CFG1
                                           	extern _MIOS_BOX_STAT
                                           	extern _MIOS_PARAMETER1
                                           	extern _MIOS_PARAMETER2
                                           	extern _MIOS_PARAMETER3
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _LVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _STKPTRbits
                                           	extern _sm_button_column
                                           	extern _sm_button_row
                                           	extern _sm_button_value
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _LVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _MIOS_MIDI_TxBufferPut
                                           	extern _MIOS_SRIO_NumberSet
                                           	extern _MIOS_SRIO_TS_SensitivitySet
                                           	extern _MIOS_SRIO_UpdateFrqSet
                                           	extern _MIOS_LCD_CursorSet
                                           	extern _MIOS_LCD_PrintBCD1
                                           	extern _MIOS_LCD_PrintBCD2
                                           	extern _MIOS_LCD_PrintChar
                                           	extern _MIOS_LCD_PrintCString
                                           	extern _SM_Init
                                           	extern _SM_PrepareCol
                                           	extern _SM_GetRow
                                           	extern _SM_ButtonHandler
                                           	extern _MIOS_MPROC_EVENT_TABLE
                                           	extern _MIOS_ENC_PIN_TABLE
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _SM_NotifyToggle
                                           	global _app_flags
                                           	global _GET_NCHR
                                           	global _ALL_NOTE_OFF
                                           	global _KEY_NOTE
                                           	global _Init
                                           	global _Tick
                                           	global _Timer
                                           	global _DISPLAY_Init
                                           	global _DISPLAY_Tick
                                           	global _MPROC_NotifyReceivedEvnt
                                           	global _MPROC_NotifyFoundEvent
                                           	global _MPROC_NotifyTimeout
                                           	global _MPROC_NotifyReceivedByte
                                           	global _SR_Service_Prepare
                                           	global _SR_Service_Finish
                                           	global _DIN_NotifyToggle
                                           	global _ENC_NotifyChange
                                           	global _AIN_NotifyChange
                                           	global _note_map
                                           	global _note_name
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR1L	equ	0xfe9 ;; normaly 0xfe1, changed by fixasm.pl
                                           FSR2L	equ	0xfd9
                                           POSTDEC1	equ	0xfed ;; normaly 0xfe5, changed by fixasm.pl
                                           PREINC1	equ	0xfec ;; normaly 0xfe4, changed by fixasm.pl
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x010
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           
                                           udata_main_0	udata
                                           _app_flags	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__SM_NotifyToggle	code
                                           _SM_NotifyToggle:
                                           ;	.line	186; main.c	void SM_NotifyToggle(unsigned char pin, unsigned char value) __wparam
00330e   cfd9     movff	0xfd9, 0xfed       	MOVFF	FSR2L, POSTDEC1
003310   ffed
003312   cfe9     movff	0xfe9, 0xfd9       	MOVFF	FSR1L, FSR2L
003314   ffd9
003316   c010     movff	0x10, 0xfed        	MOVFF	r0x00, POSTDEC1
003318   ffed
00331a   c011     movff	0x11, 0xfed        	MOVFF	r0x01, POSTDEC1
00331c   ffed
00331e   c012     movff	0x12, 0xfed        	MOVFF	r0x02, POSTDEC1
003320   ffed
003322   c013     movff	0x13, 0xfed        	MOVFF	r0x03, POSTDEC1
003324   ffed
003326   c014     movff	0x14, 0xfed        	MOVFF	r0x04, POSTDEC1
003328   ffed
00332a   c015     movff	0x15, 0xfed        	MOVFF	r0x05, POSTDEC1
00332c   ffed
00332e   c016     movff	0x16, 0xfed        	MOVFF	r0x06, POSTDEC1
003330   ffed
003332   c017     movff	0x17, 0xfed        	MOVFF	r0x07, POSTDEC1
003334   ffed
003336   c018     movff	0x18, 0xfed        	MOVFF	r0x08, POSTDEC1
003338   ffed
00333a   c019     movff	0x19, 0xfed        	MOVFF	r0x09, POSTDEC1
00333c   ffed
00333e   6e10     movwf	0x10, 0            	MOVWF	r0x00
003340   0e02     movlw	0x2                	MOVLW	0x02
003342   cfdb     movff	0xfdb, 0x11        	MOVFF	PLUSW2, r0x01
003344   f011
                                           ;	.line	188; main.c	MIOS_LCD_CursorSet(0x00);	//DEBUG
003346   0e00     movlw	0                  	MOVLW	0x00
003348   ec88     call	0x2d10, 0           	CALL	_MIOS_LCD_CursorSet
00334a   f016
                                           ;	.line	189; main.c	MIOS_LCD_PrintBCD2(pin);	//DEBUG
00334c   5010     movf	0x10, 0, 0          	MOVF	r0x00, W
00334e   ec90     call	0x2d20, 0           	CALL	_MIOS_LCD_PrintBCD2
003350   f016
                                           ;	.line	193; main.c	MIOS_LCD_PrintCString("/ASCII:");
003352   0e00     movlw	0                  	MOVLW	UPPER(__str_3)
003354   6eed     movwf	0xed, 0            	MOVWF	POSTDEC1
003356   0e37     movlw	0x37               	MOVLW	HIGH(__str_3)
003358   6eed     movwf	0xed, 0            	MOVWF	POSTDEC1
00335a   0e92     movlw	0x92               	MOVLW	LOW(__str_3)
00335c   ec85     call	0x390a, 0           	CALL	_MIOS_LCD_PrintCString
00335e   f01c
003360   0e02     movlw	0x2                	MOVLW	0x02
003362   26e9     addwf	0xe9, 0x1, 0       	ADDWF	FSR1L, F
                                           ; ;multiply lit val:0X02 by variable r0x00 and store in r0x00
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
                                           ;	.line	194; main.c	MIOS_LCD_PrintChar(note_map[pin][1]);	//DEBUG
003364   6a12     clrf	0x12, 0             	CLRF	r0x02
003366   90d8     bcf	0xd8, 0, 0           	BCF	STATUS, 0
003368   3610     rlcf	0x10, 0x1, 0        	RLCF	r0x00, F
00336a   3612     rlcf	0x12, 0x1, 0        	RLCF	r0x02, F
00336c   0ed4     movlw	0xd4               	MOVLW	LOW(_note_map)
00336e   2410     addwf	0x10, 0, 0         	ADDWF	r0x00, W
003370   6e13     movwf	0x13, 0            	MOVWF	r0x03
003372   0e36     movlw	0x36               	MOVLW	HIGH(_note_map)
003374   2012     addwfc	0x12, 0, 0        	ADDWFC	r0x02, W
003376   6e14     movwf	0x14, 0            	MOVWF	r0x04
003378   6a15     clrf	0x15, 0             	CLRF	r0x05
00337a   0e00     movlw	0                  	MOVLW	UPPER(_note_map)
00337c   2215     addwfc	0x15, 0x1, 0      	ADDWFC	r0x05, F
00337e   2a13     incf	0x13, 0x1, 0        	INCF	r0x03, F
003380   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003382   2a14     incf	0x14, 0x1, 0        	INCF	r0x04, F
003384   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003386   2a15     incf	0x15, 0x1, 0        	INCF	r0x05, F
003388   c013     movff	0x13, 0xff6        	MOVFF	r0x03, TBLPTRL
00338a   fff6
00338c   c014     movff	0x14, 0xff7        	MOVFF	r0x04, TBLPTRH
00338e   fff7
003390   c015     movff	0x15, 0xff8        	MOVFF	r0x05, TBLPTRU
003392   fff8
003394   0009     tblrd	*+                 	TBLRD*+	
003396   cff5     movff	0xff5, 0x13        	MOVFF	TABLAT, r0x03
003398   f013
00339a   5013     movf	0x13, 0, 0          	MOVF	r0x03, W
00339c   ec94     call	0x2d28, 0           	CALL	_MIOS_LCD_PrintChar
00339e   f016
                                           ;	.line	196; main.c	MIOS_LCD_PrintCString("/MIDI:");
0033a0   0e00     movlw	0                  	MOVLW	UPPER(__str_4)
0033a2   6eed     movwf	0xed, 0            	MOVWF	POSTDEC1
0033a4   0e37     movlw	0x37               	MOVLW	HIGH(__str_4)
0033a6   6eed     movwf	0xed, 0            	MOVWF	POSTDEC1
0033a8   0e9a     movlw	0x9a               	MOVLW	LOW(__str_4)
0033aa   ec85     call	0x390a, 0           	CALL	_MIOS_LCD_PrintCString
0033ac   f01c
0033ae   0e02     movlw	0x2                	MOVLW	0x02
0033b0   26e9     addwf	0xe9, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	197; main.c	MIOS_LCD_PrintBCD2(note_map[pin][0]);	//DEBUG
0033b2   0ed4     movlw	0xd4               	MOVLW	LOW(_note_map)
0033b4   2410     addwf	0x10, 0, 0         	ADDWF	r0x00, W
0033b6   6e13     movwf	0x13, 0            	MOVWF	r0x03
0033b8   0e36     movlw	0x36               	MOVLW	HIGH(_note_map)
0033ba   2012     addwfc	0x12, 0, 0        	ADDWFC	r0x02, W
0033bc   6e16     movwf	0x16, 0            	MOVWF	r0x06
0033be   6a17     clrf	0x17, 0             	CLRF	r0x07
0033c0   0e00     movlw	0                  	MOVLW	UPPER(_note_map)
0033c2   2217     addwfc	0x17, 0x1, 0      	ADDWFC	r0x07, F
0033c4   c013     movff	0x13, 0xff6        	MOVFF	r0x03, TBLPTRL
0033c6   fff6
0033c8   c016     movff	0x16, 0xff7        	MOVFF	r0x06, TBLPTRH
0033ca   fff7
0033cc   c017     movff	0x17, 0xff8        	MOVFF	r0x07, TBLPTRU
0033ce   fff8
0033d0   0009     tblrd	*+                 	TBLRD*+	
0033d2   cff5     movff	0xff5, 0x13        	MOVFF	TABLAT, r0x03
0033d4   f013
0033d6   5013     movf	0x13, 0, 0          	MOVF	r0x03, W
0033d8   ec90     call	0x2d20, 0           	CALL	_MIOS_LCD_PrintBCD2
0033da   f016
                                           ;	.line	200; main.c	GET_NCHR(note_map[pin][0]);
0033dc   0ed4     movlw	0xd4               	MOVLW	LOW(_note_map)
0033de   2410     addwf	0x10, 0, 0         	ADDWF	r0x00, W
0033e0   6e13     movwf	0x13, 0            	MOVWF	r0x03
0033e2   0e36     movlw	0x36               	MOVLW	HIGH(_note_map)
0033e4   2012     addwfc	0x12, 0, 0        	ADDWFC	r0x02, W
0033e6   6e18     movwf	0x18, 0            	MOVWF	r0x08
0033e8   6a19     clrf	0x19, 0             	CLRF	r0x09
0033ea   0e00     movlw	0                  	MOVLW	UPPER(_note_map)
0033ec   2219     addwfc	0x19, 0x1, 0      	ADDWFC	r0x09, F
0033ee   c013     movff	0x13, 0xff6        	MOVFF	r0x03, TBLPTRL
0033f0   fff6
0033f2   c018     movff	0x18, 0xff7        	MOVFF	r0x08, TBLPTRH
0033f4   fff7
0033f6   c019     movff	0x19, 0xff8        	MOVFF	r0x09, TBLPTRU
0033f8   fff8
0033fa   0009     tblrd	*+                 	TBLRD*+	
0033fc   cff5     movff	0xff5, 0x13        	MOVFF	TABLAT, r0x03
0033fe   f013
003400   5013     movf	0x13, 0, 0          	MOVF	r0x03, W
003402   6eed     movwf	0xed, 0            	MOVWF	POSTDEC1
003404   ecd6     call	0x37ac, 0           	CALL	_GET_NCHR
003406   f01b
003408   2ae9     incf	0xe9, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	203; main.c	MIOS_LCD_CursorSet(0x40 + 0);
00340a   0e40     movlw	0x40               	MOVLW	0x40
00340c   ec88     call	0x2d10, 0           	CALL	_MIOS_LCD_CursorSet
00340e   f016
                                           ;	.line	204; main.c	MIOS_LCD_PrintCString("Col");
003410   0e00     movlw	0                  	MOVLW	UPPER(__str_5)
003412   6eed     movwf	0xed, 0            	MOVWF	POSTDEC1
003414   0e37     movlw	0x37               	MOVLW	HIGH(__str_5)
003416   6eed     movwf	0xed, 0            	MOVWF	POSTDEC1
003418   0ea2     movlw	0xa2               	MOVLW	LOW(__str_5)
00341a   ec85     call	0x390a, 0           	CALL	_MIOS_LCD_PrintCString
00341c   f01c
00341e   0e02     movlw	0x2                	MOVLW	0x02
003420   26e9     addwf	0xe9, 0x1, 0       	ADDWF	FSR1L, F
003422   0100     movlb	0                  	BANKSEL	_sm_button_column
                                           ;	.line	205; main.c	MIOS_LCD_PrintBCD2(sm_button_column);
003424   5180     movf	0x80, 0, 0x1        	MOVF	_sm_button_column, W, B
003426   ec90     call	0x2d20, 0           	CALL	_MIOS_LCD_PrintBCD2
003428   f016
                                           ;	.line	206; main.c	MIOS_LCD_PrintCString("/Row");
00342a   0e00     movlw	0                  	MOVLW	UPPER(__str_6)
00342c   6eed     movwf	0xed, 0            	MOVWF	POSTDEC1
00342e   0e37     movlw	0x37               	MOVLW	HIGH(__str_6)
003430   6eed     movwf	0xed, 0            	MOVWF	POSTDEC1
003432   0ea6     movlw	0xa6               	MOVLW	LOW(__str_6)
003434   ec85     call	0x390a, 0           	CALL	_MIOS_LCD_PrintCString
003436   f01c
003438   0e02     movlw	0x2                	MOVLW	0x02
00343a   26e9     addwf	0xe9, 0x1, 0       	ADDWF	FSR1L, F
00343c   0100     movlb	0                  	BANKSEL	_sm_button_row
                                           ;	.line	207; main.c	MIOS_LCD_PrintBCD2(sm_button_row);
00343e   5181     movf	0x81, 0, 0x1        	MOVF	_sm_button_row, W, B
003440   ec90     call	0x2d20, 0           	CALL	_MIOS_LCD_PrintBCD2
003442   f016
                                           ;	.line	211; main.c	MIOS_MIDI_TxBufferPut(144 + 0);//MIDI CHANNEL 1
003444   0e90     movlw	0x90               	MOVLW	0x90
003446   ec24     call	0x2c48, 0           	CALL	_MIOS_MIDI_TxBufferPut
003448   f016
                                           ;	.line	212; main.c	MIOS_MIDI_TxBufferPut(note_map[pin][0]+24);// Transpose :  +24
00344a   0ed4     movlw	0xd4               	MOVLW	LOW(_note_map)
00344c   2610     addwf	0x10, 0x1, 0       	ADDWF	r0x00, F
00344e   0e36     movlw	0x36               	MOVLW	HIGH(_note_map)
003450   2212     addwfc	0x12, 0x1, 0      	ADDWFC	r0x02, F
003452   0e00     movlw	0                  	MOVLW	UPPER(_note_map)
003454   6a13     clrf	0x13, 0             	CLRF	r0x03
003456   2213     addwfc	0x13, 0x1, 0      	ADDWFC	r0x03, F
003458   c010     movff	0x10, 0xff6        	MOVFF	r0x00, TBLPTRL
00345a   fff6
00345c   c012     movff	0x12, 0xff7        	MOVFF	r0x02, TBLPTRH
00345e   fff7
003460   c013     movff	0x13, 0xff8        	MOVFF	r0x03, TBLPTRU
003462   fff8
003464   0009     tblrd	*+                 	TBLRD*+	
003466   cff5     movff	0xff5, 0x10        	MOVFF	TABLAT, r0x00
003468   f010
00346a   0e18     movlw	0x18               	MOVLW	0x18
00346c   2610     addwf	0x10, 0x1, 0       	ADDWF	r0x00, F
00346e   5010     movf	0x10, 0, 0          	MOVF	r0x00, W
003470   ec24     call	0x2c48, 0           	CALL	_MIOS_MIDI_TxBufferPut
003472   f016
                                           ;	.line	213; main.c	MIOS_MIDI_TxBufferPut(value ? 0x00 : 0x7f);
003474   5011     movf	0x11, 0, 0          	MOVF	r0x01, W
003476   e002     bz	0x347c                	BZ	_00199_DS_
003478   6a10     clrf	0x10, 0             	CLRF	r0x00
00347a   d002     bra	0x3480               	BRA	_00200_DS_
                                           _00199_DS_:
00347c   0e7f     movlw	0x7f               	MOVLW	0x7f
00347e   6e10     movwf	0x10, 0            	MOVWF	r0x00
                                           _00200_DS_:
003480   5010     movf	0x10, 0, 0          	MOVF	r0x00, W
003482   ec24     call	0x2c48, 0           	CALL	_MIOS_MIDI_TxBufferPut
003484   f016
                                           ;	.line	216; main.c	return;
003486   cfec     movff	0xfec, 0x19        	MOVFF	PREINC1, r0x09
003488   f019
00348a   cfec     movff	0xfec, 0x18        	MOVFF	PREINC1, r0x08
00348c   f018
00348e   cfec     movff	0xfec, 0x17        	MOVFF	PREINC1, r0x07
003490   f017
003492   cfec     movff	0xfec, 0x16        	MOVFF	PREINC1, r0x06
003494   f016
003496   cfec     movff	0xfec, 0x15        	MOVFF	PREINC1, r0x05
003498   f015
00349a   cfec     movff	0xfec, 0x14        	MOVFF	PREINC1, r0x04
00349c   f014
00349e   cfec     movff	0xfec, 0x13        	MOVFF	PREINC1, r0x03
0034a0   f013
0034a2   cfec     movff	0xfec, 0x12        	MOVFF	PREINC1, r0x02
0034a4   f012
0034a6   cfec     movff	0xfec, 0x11        	MOVFF	PREINC1, r0x01
0034a8   f011
0034aa   cfec     movff	0xfec, 0x10        	MOVFF	PREINC1, r0x00
0034ac   f010
0034ae   cfec     movff	0xfec, 0xfd9       	MOVFF	PREINC1, FSR2L
0034b0   ffd9
0034b2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__AIN_NotifyChange	code
                                           _AIN_NotifyChange:
                                           ;	.line	173; main.c	void AIN_NotifyChange(unsigned char pin, unsigned int pin_value) __wparam
003aa6   cfd9     movff	0xfd9, 0xfed       	MOVFF	FSR2L, POSTDEC1
003aa8   ffed
003aaa   cfe9     movff	0xfe9, 0xfd9       	MOVFF	FSR1L, FSR2L
003aac   ffd9
                                           ;	.line	175; main.c	}
003aae   cfec     movff	0xfec, 0xfd9       	MOVFF	PREINC1, FSR2L
003ab0   ffd9
003ab2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ENC_NotifyChange	code
                                           _ENC_NotifyChange:
                                           ;	.line	163; main.c	void ENC_NotifyChange(unsigned char encoder, char incrementer) __wparam
003ab4   cfd9     movff	0xfd9, 0xfed       	MOVFF	FSR2L, POSTDEC1
003ab6   ffed
003ab8   cfe9     movff	0xfe9, 0xfd9       	MOVFF	FSR1L, FSR2L
003aba   ffd9
                                           ;	.line	165; main.c	}
003abc   cfec     movff	0xfec, 0xfd9       	MOVFF	PREINC1, FSR2L
003abe   ffd9
003ac0   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__DIN_NotifyToggle	code
                                           _DIN_NotifyToggle:
                                           ;	.line	154; main.c	void DIN_NotifyToggle(unsigned char pin, unsigned char pin_value) __wparam
003ac2   cfd9     movff	0xfd9, 0xfed       	MOVFF	FSR2L, POSTDEC1
003ac4   ffed
003ac6   cfe9     movff	0xfe9, 0xfd9       	MOVFF	FSR1L, FSR2L
003ac8   ffd9
                                           ;	.line	156; main.c	}
003aca   cfec     movff	0xfec, 0xfd9       	MOVFF	PREINC1, FSR2L
003acc   ffd9
003ace   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SR_Service_Finish	code
                                           _SR_Service_Finish:
                                           ;	.line	147; main.c	SM_GetRow();
003ba6   ec7c     call	0x34f8, 0           	CALL	_SM_GetRow
003ba8   f01a
003baa   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SR_Service_Prepare	code
                                           _SR_Service_Prepare:
                                           ;	.line	137; main.c	SM_PrepareCol();
003bac   ec72     call	0x34e4, 0           	CALL	_SM_PrepareCol
003bae   f01a
003bb0   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__MPROC_NotifyReceivedByte	code
                                           _MPROC_NotifyReceivedByte:
                                           ;	.line	126; main.c	void MPROC_NotifyReceivedByte(unsigned char byte) __wparam
003ad0   cfd9     movff	0xfd9, 0xfed       	MOVFF	FSR2L, POSTDEC1
003ad2   ffed
003ad4   cfe9     movff	0xfe9, 0xfd9       	MOVFF	FSR1L, FSR2L
003ad6   ffd9
                                           ;	.line	128; main.c	}
003ad8   cfec     movff	0xfec, 0xfd9       	MOVFF	PREINC1, FSR2L
003ada   ffd9
003adc   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__MPROC_NotifyTimeout	code
                                           _MPROC_NotifyTimeout:
                                           ;	.line	121; main.c	}
003bc2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__MPROC_NotifyFoundEvent	code
                                           _MPROC_NotifyFoundEvent:
                                           ;	.line	111; main.c	void MPROC_NotifyFoundEvent(unsigned entry, unsigned char evnt0, unsigned char evnt1, unsigned char evnt2) __wparam
003ade   cfd9     movff	0xfd9, 0xfed       	MOVFF	FSR2L, POSTDEC1
003ae0   ffed
003ae2   cfe9     movff	0xfe9, 0xfd9       	MOVFF	FSR1L, FSR2L
003ae4   ffd9
                                           ;	.line	113; main.c	}
003ae6   cfec     movff	0xfec, 0xfd9       	MOVFF	PREINC1, FSR2L
003ae8   ffd9
003aea   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__MPROC_NotifyReceivedEvnt	code
                                           _MPROC_NotifyReceivedEvnt:
                                           ;	.line	103; main.c	void MPROC_NotifyReceivedEvnt(unsigned char evnt0, unsigned char evnt1, unsigned char evnt2) __wparam
003aec   cfd9     movff	0xfd9, 0xfed       	MOVFF	FSR2L, POSTDEC1
003aee   ffed
003af0   cfe9     movff	0xfe9, 0xfd9       	MOVFF	FSR1L, FSR2L
003af2   ffd9
                                           ;	.line	105; main.c	}
003af4   cfec     movff	0xfec, 0xfd9       	MOVFF	PREINC1, FSR2L
003af6   ffd9
003af8   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__DISPLAY_Tick	code
                                           _DISPLAY_Tick:
003afa   0100     movlb	0                  	BANKSEL	_app_flags
                                           ;	.line	90; main.c	if( !app_flags.DISPLAY_UPDATE_REQ )
003afc   b195     btfsc	0x95, 0, 0x1       	BTFSC	_app_flags, 0, B
003afe   d001     bra	0x3b02               	BRA	_00155_DS_
                                           ;	.line	91; main.c	return;
003b00   d002     bra	0x3b06               	BRA	_00156_DS_
                                           _00155_DS_:
003b02   0100     movlb	0                  	BANKSEL	_app_flags
                                           ;	.line	92; main.c	app_flags.DISPLAY_UPDATE_REQ = 0;
003b04   9195     bcf	0x95, 0, 0x1         	BCF	_app_flags, 0, B
                                           _00156_DS_:
003b06   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__DISPLAY_Init	code
                                           _DISPLAY_Init:
0038ec   0100     movlb	0                  	BANKSEL	_app_flags
                                           ;	.line	74; main.c	app_flags.DISPLAY_UPDATE_REQ = 1;
0038ee   8195     bsf	0x95, 0, 0x1         	BSF	_app_flags, 0, B
                                           ;	.line	75; main.c	MIOS_LCD_CursorSet(0x00);	//DEBUG
0038f0   0e00     movlw	0                  	MOVLW	0x00
0038f2   ec88     call	0x2d10, 0           	CALL	_MIOS_LCD_CursorSet
0038f4   f016
                                           ;	.line	76; main.c	MIOS_LCD_PrintCString("C64 KEYBOARD TEST");
0038f6   0e00     movlw	0                  	MOVLW	UPPER(__str_2)
0038f8   6eed     movwf	0xed, 0            	MOVWF	POSTDEC1
0038fa   0e37     movlw	0x37               	MOVLW	HIGH(__str_2)
0038fc   6eed     movwf	0xed, 0            	MOVWF	POSTDEC1
0038fe   0e80     movlw	0x80               	MOVLW	LOW(__str_2)
003900   ec85     call	0x390a, 0           	CALL	_MIOS_LCD_PrintCString
003902   f01c
003904   0e02     movlw	0x2                	MOVLW	0x02
003906   26e9     addwf	0xe9, 0x1, 0       	ADDWF	FSR1L, F
003908   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Timer	code
                                           _Timer:
                                           ;	.line	64; main.c	}
003bc4   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Tick	code
                                           _Tick:
                                           ;	.line	55; main.c	SM_ButtonHandler();
003bb2   ec92     call	0x3524, 0           	CALL	_SM_ButtonHandler
003bb4   f01a
003bb6   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Init	code
                                           _Init:
                                           ;	.line	40; main.c	MIOS_SRIO_NumberSet(16);           // use up to 16 shift registers
00395a   0e10     movlw	0x10               	MOVLW	0x10
00395c   ec78     call	0x2cf0, 0           	CALL	_MIOS_SRIO_NumberSet
00395e   f016
                                           ;	.line	41; main.c	MIOS_SRIO_UpdateFrqSet(1);         // set update frequency
003960   0e01     movlw	0x1                	MOVLW	0x01
003962   ec80     call	0x2d00, 0           	CALL	_MIOS_SRIO_UpdateFrqSet
003964   f016
                                           ;	.line	43; main.c	MIOS_SRIO_TS_SensitivitySet(0);    // disable touch sensors
003966   0e00     movlw	0                  	MOVLW	0x00
003968   ec7c     call	0x2cf8, 0           	CALL	_MIOS_SRIO_TS_SensitivitySet
00396a   f016
                                           ;	.line	45; main.c	SM_Init();
00396c   ec5a     call	0x34b4, 0           	CALL	_SM_Init
00396e   f01a
003970   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__KEY_NOTE	code
                                           _KEY_NOTE:
                                           ;	.line	59; midinotes.c	void KEY_NOTE(unsigned char value) // SEND A NOTE ON KEY PRESS
003b08   cfd9     movff	0xfd9, 0xfed       	MOVFF	FSR2L, POSTDEC1
003b0a   ffed
003b0c   cfe9     movff	0xfe9, 0xfd9       	MOVFF	FSR1L, FSR2L
003b0e   ffd9
                                           ;	.line	80; midinotes.c	return ; 
003b10   cfec     movff	0xfec, 0xfd9       	MOVFF	PREINC1, FSR2L
003b12   ffd9
003b14   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ALL_NOTE_OFF	code
                                           _ALL_NOTE_OFF:
                                           ;	.line	44; midinotes.c	void ALL_NOTE_OFF(){//KILL EVERY NOTES 
0038b6   c010     movff	0x10, 0xfed        	MOVFF	r0x00, POSTDEC1
0038b8   ffed
0038ba   c011     movff	0x11, 0xfed        	MOVFF	r0x01, POSTDEC1
0038bc   ffed
                                           ;	.line	47; midinotes.c	for(i=0;i<15;i++){
0038be   6a10     clrf	0x10, 0             	CLRF	r0x00
                                           _00126_DS_:
0038c0   0e0f     movlw	0xf                	MOVLW	0x0f
0038c2   5c10     subwf	0x10, 0, 0         	SUBWF	r0x00, W
0038c4   e20e     bc	0x38e2                	BC	_00130_DS_
                                           ;	.line	48; midinotes.c	MIOS_MIDI_TxBufferPut(176 + i);//Controller Chn i
0038c6   0eb0     movlw	0xb0               	MOVLW	0xb0
0038c8   2410     addwf	0x10, 0, 0         	ADDWF	r0x00, W
0038ca   6e11     movwf	0x11, 0            	MOVWF	r0x01
0038cc   5011     movf	0x11, 0, 0          	MOVF	r0x01, W
0038ce   ec24     call	0x2c48, 0           	CALL	_MIOS_MIDI_TxBufferPut
0038d0   f016
                                           ;	.line	49; midinotes.c	MIOS_MIDI_TxBufferPut(123);//ALL NOTE OFF // http://www.borg.com/~jglatt/tech/midispec/ctllist.htm
0038d2   0e7b     movlw	0x7b               	MOVLW	0x7b
0038d4   ec24     call	0x2c48, 0           	CALL	_MIOS_MIDI_TxBufferPut
0038d6   f016
                                           ;	.line	50; midinotes.c	MIOS_MIDI_TxBufferPut(0x00);
0038d8   0e00     movlw	0                  	MOVLW	0x00
0038da   ec24     call	0x2c48, 0           	CALL	_MIOS_MIDI_TxBufferPut
0038dc   f016
                                           ;	.line	47; midinotes.c	for(i=0;i<15;i++){
0038de   2a10     incf	0x10, 0x1, 0        	INCF	r0x00, F
0038e0   d7ef     bra	0x38c0               	BRA	_00126_DS_
                                           _00130_DS_:
                                           ;	.line	52; midinotes.c	return;
0038e2   cfec     movff	0xfec, 0x11        	MOVFF	PREINC1, r0x01
0038e4   f011
0038e6   cfec     movff	0xfec, 0x10        	MOVFF	PREINC1, r0x00
0038e8   f010
0038ea   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__GET_NCHR	code
                                           _GET_NCHR:
                                           ;	.line	9; midinotes.c	void GET_NCHR(unsigned char note){// DISPLAY LITTERAL NOTES !!!
0037ac   cfd9     movff	0xfd9, 0xfed       	MOVFF	FSR2L, POSTDEC1
0037ae   ffed
0037b0   cfe9     movff	0xfe9, 0xfd9       	MOVFF	FSR1L, FSR2L
0037b2   ffd9
0037b4   c010     movff	0x10, 0xfed        	MOVFF	r0x00, POSTDEC1
0037b6   ffed
0037b8   c011     movff	0x11, 0xfed        	MOVFF	r0x01, POSTDEC1
0037ba   ffed
0037bc   c012     movff	0x12, 0xfed        	MOVFF	r0x02, POSTDEC1
0037be   ffed
0037c0   c013     movff	0x13, 0xfed        	MOVFF	r0x03, POSTDEC1
0037c2   ffed
0037c4   0e02     movlw	0x2                	MOVLW	0x02
0037c6   cfdb     movff	0xfdb, 0x10        	MOVFF	PLUSW2, r0x00
0037c8   f010
                                           ;	.line	14; midinotes.c	if(note==0x80){
0037ca   5010     movf	0x10, 0, 0          	MOVF	r0x00, W
0037cc   0a80     xorlw	0x80               	XORLW	0x80
0037ce   e10d     bnz	0x37ea               	BNZ	_00106_DS_
                                           ;	.line	15; midinotes.c	MIOS_LCD_CursorSet(0x51);
0037d0   0e51     movlw	0x51               	MOVLW	0x51
0037d2   ec88     call	0x2d10, 0           	CALL	_MIOS_LCD_CursorSet
0037d4   f016
                                           ;	.line	16; midinotes.c	MIOS_LCD_PrintCString("NUL");//
0037d6   0e00     movlw	0                  	MOVLW	UPPER(__str_0)
0037d8   6eed     movwf	0xed, 0            	MOVWF	POSTDEC1
0037da   0e37     movlw	0x37               	MOVLW	HIGH(__str_0)
0037dc   6eed     movwf	0xed, 0            	MOVWF	POSTDEC1
0037de   0e78     movlw	0x78               	MOVLW	LOW(__str_0)
0037e0   ec85     call	0x390a, 0           	CALL	_MIOS_LCD_PrintCString
0037e2   f01c
0037e4   0e02     movlw	0x2                	MOVLW	0x02
0037e6   26e9     addwf	0xe9, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	17; midinotes.c	return;
0037e8   d03b     bra	0x3860               	BRA	_00112_DS_
                                           _00106_DS_:
                                           ;	.line	20; midinotes.c	if(note==0x81){
0037ea   5010     movf	0x10, 0, 0          	MOVF	r0x00, W
0037ec   0a81     xorlw	0x81               	XORLW	0x81
0037ee   e10d     bnz	0x380a               	BNZ	_00116_DS_
                                           ;	.line	21; midinotes.c	MIOS_LCD_CursorSet(0x51);
0037f0   0e51     movlw	0x51               	MOVLW	0x51
0037f2   ec88     call	0x2d10, 0           	CALL	_MIOS_LCD_CursorSet
0037f4   f016
                                           ;	.line	22; midinotes.c	MIOS_LCD_PrintCString("PAD");//
0037f6   0e00     movlw	0                  	MOVLW	UPPER(__str_1)
0037f8   6eed     movwf	0xed, 0            	MOVWF	POSTDEC1
0037fa   0e37     movlw	0x37               	MOVLW	HIGH(__str_1)
0037fc   6eed     movwf	0xed, 0            	MOVWF	POSTDEC1
0037fe   0e7c     movlw	0x7c               	MOVLW	LOW(__str_1)
003800   ec85     call	0x390a, 0           	CALL	_MIOS_LCD_PrintCString
003802   f01c
003804   0e02     movlw	0x2                	MOVLW	0x02
003806   26e9     addwf	0xe9, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	23; midinotes.c	return;
003808   d02b     bra	0x3860               	BRA	_00112_DS_
                                           _00116_DS_:
                                           ;	.line	26; midinotes.c	do{
00380a   6a11     clrf	0x11, 0             	CLRF	r0x01
00380c   6a12     clrf	0x12, 0             	CLRF	r0x02
                                           _00109_DS_:
                                           ;	.line	27; midinotes.c	oct++;
00380e   0e0c     movlw	0xc                	MOVLW	0x0c
003810   2612     addwf	0x12, 0x1, 0       	ADDWF	r0x02, F
003812   2a11     incf	0x11, 0x1, 0        	INCF	r0x01, F
                                           ;	.line	31; midinotes.c	while(n<=note);
003814   5012     movf	0x12, 0, 0          	MOVF	r0x02, W
003816   5c10     subwf	0x10, 0, 0         	SUBWF	r0x00, W
003818   e2fa     bc	0x380e                	BC	_00109_DS_
                                           ;	.line	32; midinotes.c	oct--;
00381a   0611     decf	0x11, 0x1, 0        	DECF	r0x01, F
                                           ;	.line	35; midinotes.c	MIOS_LCD_CursorSet(0x51);
00381c   0e51     movlw	0x51               	MOVLW	0x51
00381e   ec88     call	0x2d10, 0           	CALL	_MIOS_LCD_CursorSet
003820   f016
                                           ; ;multiply lit val:0X0c by variable r0x01 and store in r0x02
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
                                           ;	.line	36; midinotes.c	MIOS_LCD_PrintCString(note_name[note-12*oct]);//
003822   5011     movf	0x11, 0, 0          	MOVF	r0x01, W
003824   0d0c     mullw	0xc                	MULLW	0x0c
003826   cff3     movff	0xff3, 0x12        	MOVFF	PRODL, r0x02
003828   f012
00382a   5012     movf	0x12, 0, 0          	MOVF	r0x02, W
00382c   5e10     subwf	0x10, 0x1, 0       	SUBWF	r0x00, F
                                           ; ;multiply lit val:0X03 by variable r0x00 and store in r0x00
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
00382e   5010     movf	0x10, 0, 0          	MOVF	r0x00, W
003830   0d03     mullw	0x3                	MULLW	0x03
003832   cff3     movff	0xff3, 0x10        	MOVFF	PRODL, r0x00
003834   f010
003836   cff4     movff	0xff4, 0x12        	MOVFF	PRODH, r0x02
003838   f012
00383a   0e54     movlw	0x54               	MOVLW	LOW(_note_name)
00383c   2610     addwf	0x10, 0x1, 0       	ADDWF	r0x00, F
00383e   0e37     movlw	0x37               	MOVLW	HIGH(_note_name)
003840   2212     addwfc	0x12, 0x1, 0      	ADDWFC	r0x02, F
003842   0e00     movlw	0                  	MOVLW	UPPER(_note_name)
003844   6a13     clrf	0x13, 0             	CLRF	r0x03
003846   2213     addwfc	0x13, 0x1, 0      	ADDWFC	r0x03, F
003848   5013     movf	0x13, 0, 0          	MOVF	r0x03, W
00384a   6eed     movwf	0xed, 0            	MOVWF	POSTDEC1
00384c   5012     movf	0x12, 0, 0          	MOVF	r0x02, W
00384e   6eed     movwf	0xed, 0            	MOVWF	POSTDEC1
003850   5010     movf	0x10, 0, 0          	MOVF	r0x00, W
003852   ec85     call	0x390a, 0           	CALL	_MIOS_LCD_PrintCString
003854   f01c
003856   0e02     movlw	0x2                	MOVLW	0x02
003858   26e9     addwf	0xe9, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	37; midinotes.c	MIOS_LCD_PrintBCD1(oct);
00385a   5011     movf	0x11, 0, 0          	MOVF	r0x01, W
00385c   ec8e     call	0x2d1c, 0           	CALL	_MIOS_LCD_PrintBCD1
00385e   f016
                                           _00112_DS_:
                                           ;	.line	38; midinotes.c	return ; 
003860   cfec     movff	0xfec, 0x13        	MOVFF	PREINC1, r0x03
003862   f013
003864   cfec     movff	0xfec, 0x12        	MOVFF	PREINC1, r0x02
003866   f012
003868   cfec     movff	0xfec, 0x11        	MOVFF	PREINC1, r0x01
00386a   f011
00386c   cfec     movff	0xfec, 0x10        	MOVFF	PREINC1, r0x00
00386e   f010
003870   cfec     movff	0xfec, 0xfd9       	MOVFF	PREINC1, FSR2L
003872   ffd9
003874   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _note_map:
0036d4   3f80     incfsz	0x80, 0x1, 0x1    	DB	0x80, 0x3f, 0x80, 0x3f, 0x80, 0x7e, 0x80, 0x7f
0036d6   3f80     incfsz	0x80, 0x1, 0x1    
0036d8   7e80     btg	0x80, 0x7, 0         
0036da   7f80     btg	0x80, 0x7, 0x1       
0036dc   c080     movff	0x80, 0x180        	DB	0x80, 0xc0, 0x80, 0xc1, 0x80, 0xc2, 0x80, 0xc3
0036de   c180
0036e0   c280     movff	0x280, 0x380       
0036e2   c380
0036e4   2420     addwf	0x20, 0, 0         	DB	0x20, 0x24, 0x1f, 0x2a, 0x80, 0x5d, 0x10, 0x3f
0036e6   2a1f     incf	0x1f, 0x1, 0        
0036e8   5d80     subwf	0x80, 0, 0x1       
0036ea   3f10     incfsz	0x10, 0x1, 0x1    
0036ec   db80     rcall	0x3dee             	DB	0x80, 0xdb, 0x80, 0x3d, 0x21, 0x3f, 0x22, 0x3f
0036ee   3d80     incfsz	0x80, 0, 0x1      
0036f0   3f21     incfsz	0x21, 0x1, 0x1    
0036f2   3f22     incfsz	0x22, 0x1, 0x1    
0036f4   2b80     incf	0x80, 0x1, 0x1      	DB	0x80, 0x2b, 0x1c, 0x50, 0x0d, 0x4c, 0x0c, 0x3c
0036f6   501c     movf	0x1c, 0, 0          
0036f8   4c0d     dcfsnz	0xd, 0, 0         
0036fa   3c0c     incfsz	0xc, 0, 0         
0036fc   3e0e     incfsz	0xe, 0x1, 0       	DB	0x0e, 0x3e, 0x0f, 0x5b, 0x1d, 0x40, 0x1e, 0x2d
0036fe   5b0f     subwfb	0xf, 0x1, 0x1     
003700   401d     rrncf	0x1d, 0, 0         
003702   2d1e     decfsz	0x1e, 0, 0x1      
003704   3919     swapf	0x19, 0, 0x1       	DB	0x19, 0x39, 0x18, 0x49, 0x0a, 0x4a, 0x09, 0x4e
003706   4918     infsnz	0x18, 0, 0x1      
003708   4a0a     infsnz	0xa, 0x1, 0       
00370a   4e09     dcfsnz	0x9, 0x1, 0       
00370c   4d0b     dcfsnz	0xb, 0, 0x1       	DB	0x0b, 0x4d, 0x80, 0x4b, 0x1a, 0x4f, 0x1b, 0x30
00370e   4b80     infsnz	0x80, 0x1, 0x1    
003710   4f1a     dcfsnz	0x1a, 0x1, 0x1    
003712   301b     rrcf	0x1b, 0, 0          
003714   3716     rlcf	0x16, 0x1, 0x1      	DB	0x16, 0x37, 0x15, 0x59, 0x06, 0x47, 0x05, 0x56
003716   5915     subwfb	0x15, 0, 0x1      
003718   4706     rlncf	0x6, 0x1, 0x1      
00371a   5605     subfwb	0x5, 0x1, 0       
00371c   4207     rrncf	0x7, 0x1, 0        	DB	0x07, 0x42, 0x08, 0x48, 0x17, 0x55, 0x80, 0x38
00371e   4808     infsnz	0x8, 0, 0         
003720   5517     subfwb	0x17, 0, 0x1      
003722   3880     swapf	0x80, 0, 0         
003724   3512     rlcf	0x12, 0, 0x1        	DB	0x12, 0x35, 0x11, 0x52, 0x03, 0x44, 0x02, 0x58
003726   5211     movf	0x11, 0x1, 0        
003728   4403     rlncf	0x3, 0, 0          
00372a   5802     subwfb	0x2, 0, 0         
00372c   4304     rrncf	0x4, 0x1, 0x1      	DB	0x04, 0x43, 0x80, 0x46, 0x13, 0x54, 0x14, 0x36
00372e   4680     rlncf	0x80, 0x1, 0       
003730   5413     subfwb	0x13, 0, 0        
003732   3614     rlcf	0x14, 0x1, 0        
003734   330f     rrcf	0xf, 0x1, 0x1       	DB	0x0f, 0x33, 0x0e, 0x57, 0x80, 0x41, 0x80, 0xdb
003736   570e     subfwb	0xe, 0x1, 0x1     
003738   4180     rrncf	0x80, 0, 0x1       
00373a   db80     rcall	0x3e3c             
00373c   5a00     subwfb	0, 0x1, 0         	DB	0x00, 0x5a, 0x01, 0x53, 0x10, 0x45, 0x80, 0x34
00373e   5301     movf	0x1, 0x1, 0x1       
003740   4510     rlncf	0x10, 0, 0x1       
003742   3480     rlcf	0x80, 0, 0          
003744   3180     rrcf	0x80, 0, 0x1        	DB	0x80, 0x31, 0x80, 0xf8, 0x80, 0xff, 0x80, 0xe0
003746   f880     dw	0xf880  ;unknown opcode 
003748   ff80     dw	0xff80  ;unknown opcode 
00374a   e080     bz	0x364c                
00374c   2080     addwfc	0x80, 0, 0        	DB	0x80, 0x20, 0x80, 0xfc, 0x0c, 0x51, 0x0d, 0x32
00374e   fc80     dw	0xfc80  ;unknown opcode 
003750   510c     movf	0xc, 0, 0x1         
003752   320d     rrcf	0xd, 0x1, 0         
                                           ; ; Starting pCode block for Ival
                                           _note_name:
003754   2d43     decfsz	0x43, 0, 0x1      	DB	0x43, 0x2d, 0x00, 0x43, 0x23, 0x00, 0x44, 0x2d
003756   4300     rrncf	0, 0x1, 0x1        
003758   0023     dw	0x23  ;unknown opcode 
00375a   2d44     decfsz	0x44, 0, 0x1      
00375c   4400     rlncf	0, 0, 0            	DB	0x00, 0x44, 0x23, 0x00, 0x45, 0x2d, 0x00, 0x46
00375e   0023     dw	0x23  ;unknown opcode 
003760   2d45     decfsz	0x45, 0, 0x1      
003762   4600     rlncf	0, 0x1, 0          
003764   002d     dw	0x2d  ;unknown opcode 	DB	0x2d, 0x00, 0x46, 0x23, 0x00, 0x47, 0x2d, 0x00
003766   2346     addwfc	0x46, 0x1, 0x1    
003768   4700     rlncf	0, 0x1, 0x1        
00376a   002d     dw	0x2d  ;unknown opcode 
00376c   2347     addwfc	0x47, 0x1, 0x1    	DB	0x47, 0x23, 0x00, 0x41, 0x2d, 0x00, 0x41, 0x23
00376e   4100     rrncf	0, 0, 0x1          
003770   002d     dw	0x2d  ;unknown opcode 
003772   2341     addwfc	0x41, 0x1, 0x1    
003774   4200     rrncf	0, 0x1, 0          	DB	0x00, 0x42, 0x2d, 0x00
003776   002d     dw	0x2d  ;unknown opcode 
                                           ; ; Starting pCode block
                                           __str_0:
003778   554e     subfwb	0x4e, 0, 0x1      	DB	0x4e, 0x55, 0x4c, 0x00
00377a   004c     dw	0x4c  ;unknown opcode 
                                           ; ; Starting pCode block
                                           __str_1:
00377c   4150     rrncf	0x50, 0, 0x1       	DB	0x50, 0x41, 0x44, 0x00
00377e   0044     dw	0x44  ;unknown opcode 
                                           ; ; Starting pCode block
                                           __str_2:
003780   3643     rlcf	0x43, 0x1, 0        	DB	0x43, 0x36, 0x34, 0x20, 0x4b, 0x45, 0x59, 0x42
003782   2034     addwfc	0x34, 0, 0        
003784   454b     rlncf	0x4b, 0, 0x1       
003786   4259     rrncf	0x59, 0x1, 0       
003788   414f     rrncf	0x4f, 0, 0x1       	DB	0x4f, 0x41, 0x52, 0x44, 0x20, 0x54, 0x45, 0x53
00378a   4452     rlncf	0x52, 0, 0         
00378c   5420     subfwb	0x20, 0, 0        
00378e   5345     movf	0x45, 0x1, 0x1      
003790   0054     dw	0x54  ;unknown opcode 	DB	0x54, 0x00
                                           ; ; Starting pCode block
                                           __str_3:
003792   412f     rrncf	0x2f, 0, 0x1       	DB	0x2f, 0x41, 0x53, 0x43, 0x49, 0x49, 0x3a, 0x00
003794   4353     rrncf	0x53, 0x1, 0x1     
003796   4949     infsnz	0x49, 0, 0x1      
003798   003a     dw	0x3a  ;unknown opcode 
                                           ; ; Starting pCode block
                                           __str_4:
00379a   4d2f     dcfsnz	0x2f, 0, 0x1      	DB	0x2f, 0x4d, 0x49, 0x44, 0x49, 0x3a, 0x00
00379c   4449     rlncf	0x49, 0, 0         
00379e   3a49     swapf	0x49, 0x1, 0       
0037a0   0000     nop                      
                                           ; ; Starting pCode block
                                           __str_5:
0037a2   6f43     movwf	0x43, 0x1          	DB	0x43, 0x6f, 0x6c, 0x00
0037a4   006c     dw	0x6c  ;unknown opcode 
                                           ; ; Starting pCode block
                                           __str_6:
0037a6   522f     movf	0x2f, 0x1, 0        	DB	0x2f, 0x52, 0x6f, 0x77, 0x00
0037a8   776f     btg	0x6f, 0x3, 0x1       
0037aa   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  928 (0x03a0) bytes (0.71%)
                                           ;           	  464 (0x01d0) words
                                           ; udata size:	    1 (0x0001) bytes (0.08%)
                                           ; access size:	   10 (0x000a) bytes
                                           
                                           
                                           	end
                                           ;
                                           ; This is the MIOS wrapper for SDCC
                                           ;
                                           ; the upper boundary of the stacks are defined here 
                                           ; customize the values for your needs
                                           #ifndef STACK_HEAD
                                           #define STACK_HEAD 0x37f
                                           #endif
                                           
                                           #ifndef STACK_IRQ_HEAD
                                           #define STACK_IRQ_HEAD 0x33f
                                           #endif
                                           ;
                                           ; ==========================================================================
                                           ;
                                           ;  Copyright 1998-2006 Thorsten Klose (tk@midibox.org)
                                           ;  Licensed for personal non-commercial use only.
                                           ;  All other rights reserved.
                                           ; 
                                           ; ==========================================================================
                                           
                                           ;; ---[ MIOS header file ]---
                                           #include "mios.h"
                                           ;
                                           ; MIOS Definitions file
                                           ;
                                           ; ==========================================================================
                                           ;
                                           ;  Copyright 1998-2006 Thorsten Klose (tk@midibox.org)
                                           ;  Licensed for personal non-commercial use only.
                                           ;  All other rights reserved.
                                           ; 
                                           ; ==========================================================================
                                           
                                            
                                           ;; ==========================================================================
                                           ;;  Select the device here
                                           ;;     0: PIC18F452   (writable range: 0x0400-0x7fff)
                                           ;;     1: PIC18F4620  (writable range: 0x0400-0xffff)
                                           ;;     2: PIC18F4520  (writable range: 0x0400-0x7fff)
                                           ;; ==========================================================================
                                           
                                           #define PIC_DERIVATIVE_TYPE	0
                                           
                                           ;; ==========================================================================
                                           ;;  Assembler directives & device specific include file
                                           ;; ==========================================================================
                                           
                                           #if PIC_DERIVATIVE_TYPE == 0
                                           	LIST P=PIC18F452, R=DEC
                                           #include <p18f452.inc>
                                                   LIST
                                           ; P18F452.INC  Standard Header File, Version 1.4   Microchip Technology, Inc.
                                                   NOLIST
                                           #endif
                                           
                                           #if PIC_DERIVATIVE_TYPE == 1
                                           	LIST P=PIC18F4620, R=DEC
                                           #include <p18f4620.inc>
                                           #endif
                                           	
                                           #if PIC_DERIVATIVE_TYPE == 2
                                           	LIST P=PIC18F4520, R=DEC
                                           #include <p18f4520.inc>
                                           #endif
                                           
                                           ;; ==========================================================================
                                           ;;  General constants
                                           ;; ==========================================================================
                                           
                                           ;; used by MIOS_MIDI_Interface*
                                           MIOS_MIDI_INTERFACE_COMMON	EQU	0x00
                                           MIOS_MIDI_INTERFACE_TO_HOST	EQU	0x01
                                           
                                           ;; used by MIOS_MIDI_Merger*
                                           MIOS_MIDI_MERGER_DISABLED	EQU	0x00
                                           MIOS_MIDI_MERGER_ENABLED	EQU	0x01
                                           MIOS_MIDI_MERGER_MBLINK_EP	EQU	0x02
                                           MIOS_MIDI_MERGER_MBLINK_FP	EQU	0x03
                                           
                                           ;; used by MIOS_ENC_PIN_TABLE
                                           MIOS_ENC_MODE_NON_DETENTED	EQU	0x00
                                           MIOS_ENC_MODE_DETENTED		EQU	0x80
                                           MIOS_ENC_MODE_DETENTED2		EQU	0x81
                                           
                                           ;; used by MIOS_ENC_Speed*
                                           MIOS_ENC_SPEED_SLOW		EQU	0
                                           MIOS_ENC_SPEED_NORMAL		EQU	1
                                           MIOS_ENC_SPEED_FAST		EQU	2
                                           
                                           ;; used by MIOS_LCD_Type*
                                           MIOS_LCD_TYPE_CLCD		EQU	0x00
                                           MIOS_LCD_TYPE_GLCD0		EQU	0x01
                                           MIOS_LCD_TYPE_GLCD1		EQU	0x02
                                           MIOS_LCD_TYPE_GLCD2		EQU	0x03
                                           MIOS_LCD_TYPE_GLCD3		EQU	0x04
                                           MIOS_LCD_TYPE_GLCD4		EQU	0x05
                                           MIOS_LCD_TYPE_MLCD		EQU	0x06
                                           MIOS_LCD_TYPE_GLCD_CUSTOM	EQU	0x07
                                           
                                           ;; location of default 5x8 font for graphical displays
                                           MIOS_GLCD_FONT			EQU	0x7cfc
                                           
                                           ;; general config flags (never overwrite this flags directly!!!)
                                           MIOS_BOX_CFG0_LCD_TYPE0		EQU 0	; selects LCD type, bit 0
                                           MIOS_BOX_CFG0_LCD_TYPE1		EQU 1	; selects LCD type, bit 1
                                           MIOS_BOX_CFG0_LCD_TYPE2		EQU 2	; selects LCD type, bit 2
                                           MIOS_BOX_CFG0_USE_GLCD		EQU 3	; if 1, graphical LCD is connected
                                           MIOS_BOX_CFG0_MERGER		EQU 4	; if 1, MIDI merger is enabled
                                           MIOS_BOX_CFG0_MBLINK		EQU 5	; if 1, MIDIbox Link is enabled
                                           MIOS_BOX_CFG0_TO_HOST		EQU 6	; if 1, MIDI interface will run with 38400 baud instead of 31250
                                           MIOS_BOX_CFG0_20MHz		EQU 7	; if 1, it is assumed that box is running with 20 MHz, else with 40 MHz
                                           
                                           MIOS_BOX_CFG1_BS_A0		EQU 0	; A0 of BankStick (never change the bit position)
                                           MIOS_BOX_CFG1_BS_A1		EQU 1	; A1 of BankStick (never change the bit position)
                                           MIOS_BOX_CFG1_BS_A2		EQU 2	; A2 of BankStick (never change the bit position)
                                           MIOS_BOX_CFG1_BS_DIS_VERIFY	EQU 3	; if 1, writes to the BankStick will not be verified
                                           MIOS_BOX_CFG1_IIC_STRETCH_CLK	EQU 4	; if 1, IIC clock stretching enabled
                                           
                                           ;; general status flags (never overwrite this flags directly!!!)
                                           MIOS_BOX_STAT_BS_AVAILABLE	EQU 0	; if 1, BankStick is available
                                           MIOS_BOX_STAT_MBLINK_TUNNEL_PASS EQU 1  ; if 1, a MBLinked event will be tunnled
                                           MIOS_BOX_STAT_SUSPEND_ALL       EQU 2   ; if 1, all system and user tasks are suspended
                                           MIOS_BOX_STAT_SUSPEND_USER      EQU 3   ; if 1, all user tasks are suspended
                                           MIOS_BOX_STAT_AUTOREPEAT	EQU 4	; if 1, start the auto-repeat handler
                                           MIOS_BOX_STAT_MLCD_TRANSFER	EQU 5	; if 1, a transfer to the MLCD has been started
                                           MIOS_BOX_STAT_FERR		EQU 6	; if 1, a frame error happened during MIDI receive
                                           
                                           ;; ==========================================================================
                                           ;;  MIOS Special Function Registers
                                           ;; ==========================================================================
                                           
                                           MIOS_BOX_CFG0	EQU	0x000
                                           MIOS_BOX_CFG1	EQU	0x001
                                           MIOS_BOX_STAT	EQU	0x002
                                           MIOS_PARAMETER1	EQU	0x003
                                           MIOS_PARAMETER2	EQU	0x004
                                           MIOS_PARAMETER3	EQU	0x005
                                           
                                           ;; ==========================================================================
                                           ;;  temporary registers for main programs
                                           ;; ==========================================================================
                                           TMP1		EQU	0x006
                                           TMP2		EQU	0x007
                                           TMP3		EQU	0x008
                                           TMP4		EQU	0x009
                                           TMP5		EQU	0x00a
                                           
                                           ;; ==========================================================================
                                           ;;  temporary registers for IRQs
                                           ;; ==========================================================================
                                           IRQ_TMP1	EQU	0x00b
                                           IRQ_TMP2	EQU	0x00c
                                           IRQ_TMP3	EQU	0x00d
                                           IRQ_TMP4	EQU	0x00e
                                           IRQ_TMP5	EQU	0x00f
                                           
                                           ;; ==========================================================================
                                           ;;  free memory space for user application:
                                           ;; ==========================================================================
                                           	;; 0x010-0x37f
                                           
                                           ;; ==========================================================================
                                           ;;  MIOS System Registers -- not defined here -- 
                                           ;;  never use these memory locations!
                                           ;; ==========================================================================
                                           	;; 0x380-0x6ff
                                           
                                           ;; ==========================================================================
                                           ;;  MIOS System Registers for custom LCD driver
                                           ;; ==========================================================================
                                           MIOS_GLCD_BUFFER	EQU	0x570	; note: the buffer must be located at ...0-...7
                                           MIOS_LCD_OPTION1	EQU	0x578	; contains the first LCD option given by MIOS_LCD_TypeSet
                                           MIOS_LCD_OPTION2	EQU	0x579	; contains the second LCD option given by MIOS_LCD_TypeSet
                                           MIOS_LCD_CURSOR_POS	EQU	0x57a	; the current cursor pos of characters (GLCD: multiplied by width)
                                           MIOS_GLCD_GCURSOR_X	EQU	0x57b	; for GLCDs: the current X position of graphical cursor
                                           MIOS_GLCD_GCURSOR_Y	EQU	0x57c	; for GLCDs: the current Y position of graphical cursor
                                           MIOS_GLCD_FONT_WIDTH	EQU	0x57d	; for GLCDs: the fontwidth given by MIOS_GLCD_FontInit
                                           MIOS_GLCD_FONT_HEIGHT	EQU	0x57e	; for GLCDs: the fontheight given by MIOS_GLCD_FontInit
                                           MIOS_GLCD_FONT_X0	EQU	0x57f	; for GLCDs: the first byte within a char entry
                                           MIOS_GLCD_FONT_OFFSET	EQU	0x580	; for GLCDs: the byte offset between the characters
                                           MIOS_GLCD_FONT_PTRL	EQU	0x581	; for GLCDs: pointer to the character table, low-byte
                                           MIOS_GLCD_FONT_PTRH	EQU	0x582	; for GLCDs: pointer to the character table, high-byte
                                           MIOS_LCD_TIMEOUT0	EQU	0x583   ; can be used for timeout loops
                                           MIOS_LCD_TIMEOUT1	EQU	0x584   ; can be used for timeout loops
                                           MIOS_GLCD_TMP1		EQU	0x585   ; can be used as temporary buffer
                                           MIOS_GLCD_TMP2		EQU	0x586   ; can be used as temporary buffer
                                           MIOS_GLCD_TMP3		EQU	0x587   ; can be used as temporary buffer
                                           MIOS_GLCD_TMP4		EQU	0x588   ; can be used as temporary buffer
                                           MIOS_LCD_Y0_OFFSET	EQU	0x589   ; Y0 offset of LCD
                                           MIOS_LCD_Y1_OFFSET	EQU	0x58a   ; Y1 offset of LCD
                                           MIOS_LCD_Y2_OFFSET	EQU	0x58b   ; Y2 offset of LCD
                                           MIOS_LCD_Y3_OFFSET	EQU	0x58c   ; Y3 offset of LCD
                                           MIOS_LCD_CURSOR_POS_REAL EQU	0x58d	; unmapped cursor position which has been set with MIOS_LCD_CursorSet
                                           
                                           ;; ---[ vectors to MIOS functions (never change!) ]---
                                           #include "mios_vectors.inc"
                                           MIOS_MIDI_BeginStream                   EQU	0x2c00
                                           MIOS_MIDI_DeviceIDAutoSet               EQU	0x2c04
                                           MIOS_MIDI_DeviceIDGet                   EQU	0x2c08
                                           MIOS_MIDI_DeviceIDSet                   EQU	0x2c0c
                                           MIOS_MIDI_EndStream                     EQU	0x2c10
                                           MIOS_MIDI_Init                          EQU	0x2c14
                                           MIOS_MIDI_InterfaceAutoSet              EQU	0x2c18
                                           MIOS_MIDI_InterfaceGet                  EQU	0x2c1c
                                           MIOS_MIDI_InterfaceSet                  EQU	0x2c20
                                           MIOS_MIDI_MergerGet                     EQU	0x2c24
                                           MIOS_MIDI_MergerSet                     EQU	0x2c28
                                           MIOS_MIDI_RxBufferFree                  EQU	0x2c2c
                                           MIOS_MIDI_RxBufferGet                   EQU	0x2c30
                                           MIOS_MIDI_RxBufferPut                   EQU	0x2c34
                                           MIOS_MIDI_RxBufferUsed                  EQU	0x2c38
                                           MIOS_MIDI_TxBufferFlush                 EQU	0x2c3c
                                           MIOS_MIDI_TxBufferFree                  EQU	0x2c40
                                           MIOS_MIDI_TxBufferGet                   EQU	0x2c44
                                           MIOS_MIDI_TxBufferPut                   EQU	0x2c48
                                           MIOS_MIDI_TxBufferUsed                  EQU	0x2c4c
                                           MIOS_MPROC_MergerDisable                EQU	0x2c50
                                           MIOS_MPROC_MergerEnable                 EQU	0x2c54
                                           MIOS_MPROC_MergerGet                    EQU	0x2c58
                                           MIOS_AIN_DeadbandGet                    EQU	0x2c5c
                                           MIOS_AIN_DeadbandSet                    EQU	0x2c60
                                           MIOS_AIN_Muxed                          EQU	0x2c64
                                           MIOS_AIN_NumberGet                      EQU	0x2c68
                                           MIOS_AIN_NumberSet                      EQU	0x2c6c
                                           MIOS_AIN_Pin7bitGet                     EQU	0x2c70
                                           MIOS_AIN_PinGet                         EQU	0x2c74
                                           MIOS_AIN_PinLSBGet                      EQU	0x2c78
                                           MIOS_AIN_PinMSBGet                      EQU	0x2c7c
                                           MIOS_AIN_UnMuxed                        EQU	0x2c80
                                           MIOS_MF_PWM_DutyCycleDownGet            EQU	0x2c84
                                           MIOS_MF_PWM_DutyCycleDownSet            EQU	0x2c88
                                           MIOS_MF_PWM_DutyCycleUpGet              EQU	0x2c8c
                                           MIOS_MF_PWM_DutyCycleUpSet              EQU	0x2c90
                                           MIOS_MF_DeadbandGet                     EQU	0x2c94
                                           MIOS_MF_DeadbandSet                     EQU	0x2c98
                                           MIOS_MF_Disable                         EQU	0x2c9c
                                           MIOS_MF_Enable                          EQU	0x2ca0
                                           MIOS_MF_FaderMove                       EQU	0x2ca4
                                           MIOS_MF_SuspendDisable                  EQU	0x2ca8
                                           MIOS_MF_SuspendEnable                   EQU	0x2cac
                                           MIOS_MF_SuspendGet                      EQU	0x2cb0
                                           MIOS_DIN_PinGet                         EQU	0x2cb4
                                           MIOS_DIN_SRGet                          EQU	0x2cb8
                                           MIOS_DOUT_PinGet                        EQU	0x2cbc
                                           MIOS_DOUT_PinSet                        EQU	0x2cc0
                                           MIOS_DOUT_PinSet0                       EQU	0x2cc4
                                           MIOS_DOUT_PinSet1                       EQU	0x2cc8
                                           MIOS_DOUT_SRGet                         EQU	0x2ccc
                                           MIOS_DOUT_SRSet                         EQU	0x2cd0
                                           MIOS_ENC_Abs7bitAdd                     EQU	0x2cd4
                                           MIOS_ENC_Abs7bitGet                     EQU	0x2cd8
                                           MIOS_ENC_Abs7bitSet                     EQU	0x2cdc
                                           MIOS_ENC_NumberGet                      EQU	0x2ce0
                                           MIOS_ENC_SpeedGet                       EQU	0x2ce4
                                           MIOS_ENC_SpeedSet                       EQU	0x2ce8
                                           MIOS_SRIO_NumberGet                     EQU	0x2cec
                                           MIOS_SRIO_NumberSet                     EQU	0x2cf0
                                           MIOS_SRIO_TS_SensitivityGet             EQU	0x2cf4
                                           MIOS_SRIO_TS_SensitivitySet             EQU	0x2cf8
                                           MIOS_SRIO_UpdateFrqGet                  EQU	0x2cfc
                                           MIOS_SRIO_UpdateFrqSet                  EQU	0x2d00
                                           MIOS_LCD_Clear                          EQU	0x2d04
                                           MIOS_LCD_Cmd                            EQU	0x2d08
                                           MIOS_LCD_CursorGet                      EQU	0x2d0c
                                           MIOS_LCD_CursorSet                      EQU	0x2d10
                                           MIOS_LCD_Data                           EQU	0x2d14
                                           MIOS_LCD_Init                           EQU	0x2d18
                                           MIOS_LCD_PrintBCD1	                EQU	0x2d1c
                                           MIOS_LCD_PrintBCD2                      EQU	0x2d20
                                           MIOS_LCD_PrintBCD3                      EQU	0x2d24
                                           MIOS_LCD_PrintChar	                EQU	0x2d28
                                           MIOS_LCD_PrintHex1	                EQU	0x2d2c
                                           MIOS_LCD_PrintHex2                      EQU	0x2d30
                                           MIOS_LCD_PrintMessage                   EQU	0x2d34
                                           MIOS_LCD_PrintPreconfString             EQU	0x2d38
                                           MIOS_LCD_PrintString                    EQU	0x2d3c
                                           MIOS_LCD_TypeAutoSet                    EQU	0x2d40
                                           MIOS_LCD_TypeGet                        EQU	0x2d44
                                           MIOS_LCD_TypeSet                        EQU	0x2d48
                                           MIOS_LCD_YAddressGet                    EQU	0x2d4c
                                           MIOS_LCD_YAddressSet                    EQU	0x2d50
                                           MIOS_GLCD_FontInit                      EQU	0x2d54
                                           MIOS_GLCD_GCursorGet                    EQU	0x2d58
                                           MIOS_GLCD_GCursorSet                    EQU	0x2d5c
                                           MIOS_EEPROM_Read                        EQU	0x2d60
                                           MIOS_EEPROM_Write                       EQU	0x2d64
                                           MIOS_FLASH_Read                         EQU	0x2d68
                                           MIOS_FLASH_Write                        EQU	0x2d6c
                                           MIOS_BANKSTICK_Read                     EQU	0x2d70
                                           MIOS_BANKSTICK_Write                    EQU	0x2d74
                                           MIOS_TIMER_Init                         EQU	0x2d78
                                           MIOS_TIMER_Start                        EQU	0x2d7c
                                           MIOS_TIMER_Stop                         EQU	0x2d80
                                           MIOS_HLP_AddressFromTable               EQU	0x2d84
                                           MIOS_HLP_GetBitANDMask                  EQU	0x2d88
                                           MIOS_HLP_GetBitORMask                   EQU	0x2d8c
                                           MIOS_HLP_GetIndex_2bytes                EQU	0x2d90
                                           MIOS_HLP_GetIndex_4bytes                EQU	0x2d94
                                           MIOS_HLP_IndirectJump                   EQU	0x2d98
                                           MIOS_Delay                              EQU	0x2d9c
                                           MIOS_GPCounterGet                       EQU	0x2da0
                                           MIOS_Reset                              EQU	0x2da4
                                           MIOS_SystemResume                       EQU	0x2da8
                                           MIOS_SystemSuspend                      EQU	0x2dac
                                           MIOS_UserResume                         EQU	0x2db0
                                           MIOS_UserSuspend                        EQU	0x2db4
                                           MIOS_HLP_16bitAddSaturate		EQU	0x2db8
                                           MIOS_DIN_PinAutoRepeatEnable		EQU	0x2dbc
                                           MIOS_DIN_PinAutoRepeatDisable		EQU	0x2dc0
                                           MIOS_DIN_PinAutoRepeatGet		EQU	0x2dc4
                                           MIOS_CLCD_SpecialCharInit		EQU	0x2dc8
                                           MIOS_CLCD_SpecialCharsInit		EQU	0x2dcc
                                           MIOS_AIN_DynamicPrioSet			EQU	0x2dd0
                                           MIOS_AIN_DynamicPrioGet			EQU	0x2dd4
                                           MIOS_AIN_LastPinsGet			EQU	0x2dd8
                                           MIOS_BANKSTICK_CtrlSet			EQU	0x2ddc
                                           MIOS_BANKSTICK_CtrlGet			EQU	0x2de0
                                           MIOS_BANKSTICK_WritePage		EQU	0x2de4
                                           MIOS_HLP_Dec2BCD			EQU	0x2de8
                                           MIOS_LCD_PrintBCD4			EQU	0x2dec
                                           MIOS_LCD_PrintBCD5                      EQU	0x2df0
                                           MIOS_LCD_MessageStart			EQU	0x2df4
                                           MIOS_LCD_MessageStop			EQU	0x2df8
                                           MIOS_MF_PWM_PeriodGet                   EQU	0x2dfc
                                           MIOS_MF_PWM_PeriodSet                   EQU	0x2e00
                                           MIOS_IIC_Start				EQU	0x2e04
                                           MIOS_IIC_Stop				EQU	0x2e08
                                           MIOS_IIC_ByteSend			EQU	0x2e0c
                                           MIOS_IIC_ByteReceive			EQU	0x2e10
                                           MIOS_IIC_AckSend			EQU	0x2e14
                                           MIOS_IIC_NakSend			EQU	0x2e18
                                           MIOS_IIC_CtrlSet			EQU	0x2e1c
                                           MIOS_IIC_CtrlGet			EQU	0x2e20
                                           MIOS_SRIO_DebounceSet			EQU	0x2e24
                                           MIOS_SRIO_DebounceGet			EQU	0x2e28
                                           MIOS_MF_TouchDetectionReset		EQU	0x2e2c
                                           MIOS_BANKSTICK_ReadPage			EQU	0x2e30
                                           MIOS_EEPROM_ReadPage			EQU	0x2e34
                                           MIOS_EEPROM_WritePage			EQU	0x2e38
                                           MIOS_TIMER_ReInit			EQU	0x2e3c
                                           MIOS_RESERVED_144                       EQU	0x2e40
                                           MIOS_RESERVED_145                       EQU	0x2e44
                                           MIOS_RESERVED_146                       EQU	0x2e48
                                           MIOS_RESERVED_147                       EQU	0x2e4c
                                           MIOS_RESERVED_148                       EQU	0x2e50
                                           MIOS_RESERVED_149                       EQU	0x2e54
                                           MIOS_RESERVED_150                       EQU	0x2e58
                                           MIOS_RESERVED_151                       EQU	0x2e5c
                                           MIOS_RESERVED_152                       EQU	0x2e60
                                           MIOS_RESERVED_153                       EQU	0x2e64
                                           MIOS_RESERVED_154                       EQU	0x2e68
                                           MIOS_RESERVED_155                       EQU	0x2e6c
                                           MIOS_RESERVED_156                       EQU	0x2e70
                                           MIOS_RESERVED_157                       EQU	0x2e74
                                           MIOS_RESERVED_158                       EQU	0x2e78
                                           MIOS_RESERVED_159                       EQU	0x2e7c
                                           MIOS_RESERVED_160                       EQU	0x2e80
                                           MIOS_RESERVED_161                       EQU	0x2e84
                                           MIOS_RESERVED_162                       EQU	0x2e88
                                           MIOS_RESERVED_163                       EQU	0x2e8c
                                           MIOS_RESERVED_164                       EQU	0x2e90
                                           MIOS_RESERVED_165                       EQU	0x2e94
                                           MIOS_RESERVED_166                       EQU	0x2e98
                                           MIOS_RESERVED_167                       EQU	0x2e9c
                                           MIOS_RESERVED_168                       EQU	0x2ea0
                                           MIOS_RESERVED_169                       EQU	0x2ea4
                                           MIOS_RESERVED_170                       EQU	0x2ea8
                                           MIOS_RESERVED_171                       EQU	0x2eac
                                           MIOS_RESERVED_172                       EQU	0x2eb0
                                           MIOS_RESERVED_173                       EQU	0x2eb4
                                           MIOS_RESERVED_174                       EQU	0x2eb8
                                           MIOS_RESERVED_175                       EQU	0x2ebc
                                           MIOS_RESERVED_176                       EQU	0x2ec0
                                           MIOS_RESERVED_177                       EQU	0x2ec4
                                           MIOS_RESERVED_178                       EQU	0x2ec8
                                           MIOS_RESERVED_179                       EQU	0x2ecc
                                           MIOS_RESERVED_180                       EQU	0x2ed0
                                           MIOS_RESERVED_181                       EQU	0x2ed4
                                           MIOS_RESERVED_182                       EQU	0x2ed8
                                           MIOS_RESERVED_183                       EQU	0x2edc
                                           MIOS_RESERVED_184                       EQU	0x2ee0
                                           MIOS_RESERVED_185                       EQU	0x2ee4
                                           MIOS_RESERVED_186                       EQU	0x2ee8
                                           MIOS_RESERVED_187                       EQU	0x2eec
                                           MIOS_RESERVED_188                       EQU	0x2ef0
                                           MIOS_RESERVED_189                       EQU	0x2ef4
                                           MIOS_RESERVED_190                       EQU	0x2ef8
                                           MIOS_RESERVED_191                       EQU	0x2efc
                                           MIOS_RESERVED_192                       EQU	0x2f00
                                           MIOS_RESERVED_193                       EQU	0x2f04
                                           MIOS_RESERVED_194                       EQU	0x2f08
                                           MIOS_RESERVED_195                       EQU	0x2f0c
                                           MIOS_RESERVED_196                       EQU	0x2f10
                                           MIOS_RESERVED_197                       EQU	0x2f14
                                           MIOS_RESERVED_198                       EQU	0x2f18
                                           MIOS_RESERVED_199                       EQU	0x2f1c
                                           MIOS_RESERVED_200                       EQU	0x2f20
                                           MIOS_RESERVED_201                       EQU	0x2f24
                                           MIOS_RESERVED_202                       EQU	0x2f28
                                           MIOS_RESERVED_203                       EQU	0x2f2c
                                           MIOS_RESERVED_204                       EQU	0x2f30
                                           MIOS_RESERVED_205                       EQU	0x2f34
                                           MIOS_RESERVED_206                       EQU	0x2f38
                                           MIOS_RESERVED_207                       EQU	0x2f3c
                                           MIOS_RESERVED_208                       EQU	0x2f40
                                           MIOS_RESERVED_209                       EQU	0x2f44
                                           MIOS_RESERVED_210                       EQU	0x2f48
                                           MIOS_RESERVED_211                       EQU	0x2f4c
                                           MIOS_RESERVED_212                       EQU	0x2f50
                                           MIOS_RESERVED_213                       EQU	0x2f54
                                           MIOS_RESERVED_214                       EQU	0x2f58
                                           MIOS_RESERVED_215                       EQU	0x2f5c
                                           MIOS_RESERVED_216                       EQU	0x2f60
                                           MIOS_RESERVED_217                       EQU	0x2f64
                                           MIOS_RESERVED_218                       EQU	0x2f68
                                           MIOS_RESERVED_219                       EQU	0x2f6c
                                           MIOS_RESERVED_220                       EQU	0x2f70
                                           MIOS_RESERVED_221                       EQU	0x2f74
                                           MIOS_RESERVED_222                       EQU	0x2f78
                                           MIOS_RESERVED_223                       EQU	0x2f7c
                                           MIOS_RESERVED_224                       EQU	0x2f80
                                           MIOS_RESERVED_225                       EQU	0x2f84
                                           MIOS_RESERVED_226                       EQU	0x2f88
                                           MIOS_RESERVED_227                       EQU	0x2f8c
                                           MIOS_RESERVED_228                       EQU	0x2f90
                                           MIOS_RESERVED_229                       EQU	0x2f94
                                           MIOS_RESERVED_230                       EQU	0x2f98
                                           MIOS_RESERVED_231                       EQU	0x2f9c
                                           MIOS_RESERVED_232                       EQU	0x2fa0
                                           MIOS_RESERVED_233                       EQU	0x2fa4
                                           MIOS_RESERVED_234                       EQU	0x2fa8
                                           MIOS_RESERVED_235                       EQU	0x2fac
                                           MIOS_RESERVED_236                       EQU	0x2fb0
                                           MIOS_RESERVED_237                       EQU	0x2fb4
                                           MIOS_RESERVED_238                       EQU	0x2fb8
                                           MIOS_RESERVED_239                       EQU	0x2fbc
                                           MIOS_RESERVED_240                       EQU	0x2fc0
                                           MIOS_RESERVED_241                       EQU	0x2fc4
                                           MIOS_RESERVED_242                       EQU	0x2fc8
                                           MIOS_RESERVED_243                       EQU	0x2fcc
                                           MIOS_RESERVED_244                       EQU	0x2fd0
                                           MIOS_RESERVED_245                       EQU	0x2fd4
                                           MIOS_RESERVED_246                       EQU	0x2fd8
                                           MIOS_RESERVED_247                       EQU	0x2fdc
                                           MIOS_RESERVED_248                       EQU	0x2fe0
                                           MIOS_RESERVED_249                       EQU	0x2fe4
                                           MIOS_RESERVED_250                       EQU	0x2fe8
                                           MIOS_RESERVED_251                       EQU	0x2fec
                                           MIOS_RESERVED_252                       EQU	0x2ff0
                                           MIOS_RESERVED_253                       EQU	0x2ff4
                                           MIOS_RESERVED_254                       EQU	0x2ff8
                                           MIOS_RESERVED_255                       EQU	0x2ffc
                                           
                                           ;; ---[ user hooks (never change!) ]---
                                           #include "user_vectors.inc"
                                           ;
                                           ; User vectortable - contains user hooks to MIOS
                                           ;
                                           ; ==========================================================================
                                           ;
                                           ;  Copyright 1998-2006 Thorsten Klose (tk@midibox.org)
                                           ;  Licensed for personal non-commercial use only.
                                           ;  All other rights reserved.
                                           ; 
                                           ; ==========================================================================
                                           
                                           	;; never change the origin or the order of entries!
                                           	org	0x3000
                                           _User_Init
003000   efe4     goto	0x35c8              	goto	USER_Init
003002   f01a
                                           _USER_Tick
003004   efea     goto	0x35d4              	goto	USER_Tick
003006   f01a
                                           _USER_Timer
003008   eff0     goto	0x35e0              	goto	USER_Timer
00300a   f01a
                                           _USER_MPROC_DebugTrigger
00300c   efff     goto	0x35fe              	goto	USER_MPROC_DebugTrigger
00300e   f01a
                                           _USER_DISPLAY_Init
003010   ef00     goto	0x3600              	goto	USER_DISPLAY_Init
003012   f01b
                                           _USER_DISPLAY_Tick
003014   ef06     goto	0x360c              	goto	USER_DISPLAY_Tick
003016   f01b
                                           _USER_SR_Service_Prepare
003018   ef42     goto	0x3684              	goto	USER_SR_Service_Prepare
00301a   f01b
                                           _USER_SR_Service_Finish
00301c   ef51     goto	0x36a2              	goto	USER_SR_Service_Finish
00301e   f01b
                                           _USER_DIN_NotifyToggle
003020   ef32     goto	0x3664              	goto	USER_DIN_NotifyToggle
003022   f01b
                                           _USER_ENC_NotifyChange
003024   ef3a     goto	0x3674              	goto	USER_ENC_NotifyChange
003026   f01b
                                           _USER_AIN_NotifyChange
003028   ef60     goto	0x36c0              	goto	USER_AIN_NotifyChange
00302a   f01b
                                           _USER_MPROC_NotifyReceivedByte
00302c   ef2a     goto	0x3654              	goto	USER_MPROC_NotifyReceivedByte
00302e   f01b
                                           _USER_MPROC_NotifyTimeout
003030   ef24     goto	0x3648              	goto	USER_MPROC_NotifyTimeout
003032   f01b
                                           _USER_MPROC_NotifyReceivedEvent
003034   ef0c     goto	0x3618              	goto	USER_MPROC_NotifyReceivedEvent
003036   f01b
                                           _USER_MPROC_NotifyFoundEvent
003038   ef17     goto	0x362e              	goto	USER_MPROC_NotifyFoundEvent
00303a   f01b
                                           _USER_LCD_Init
00303c   ef80     goto	0x3300              	goto	USER_LCD_Init
00303e   f019
                                           _USER_LCD_Clear
003040   ef81     goto	0x3302              	goto	USER_LCD_Clear
003042   f019
                                           _USER_LCD_CursorSet
003044   ef82     goto	0x3304              	goto	USER_LCD_CursorSet
003046   f019
                                           _USER_LCD_PrintChar
003048   ef83     goto	0x3306              	goto	USER_LCD_PrintChar
00304a   f019
                                           _USER_MIDI_NotifyRx
00304c   ef31     goto	0x3662              	goto	USER_MIDI_NotifyRx
00304e   f01b
                                           _USER_MIDI_NotifyTx
003050   ef30     goto	0x3660              	goto	USER_MIDI_NotifyTx
003052   f01b
                                           _USER_LCD_Data
003054   ef84     goto	0x3308              	goto	USER_LCD_Data
003056   f019
                                           _USER_LCD_Cmd
003058   ef85     goto	0x330a              	goto	USER_LCD_Cmd
00305a   f019
                                           _USER_LCD_SpecialCharInit
00305c   ef86     goto	0x330c              	goto	USER_LCD_SpecialCharInit
00305e   f019
                                           USER_RESERVED_25
003060   0012     return	0                 	return
003062   0000     nop                      	nop
                                           USER_RESERVED_26
003064   0012     return	0                 	return
003066   0000     nop                      	nop
                                           USER_RESERVED_27
003068   0012     return	0                 	return
00306a   0000     nop                      	nop
                                           USER_RESERVED_28
00306c   0012     return	0                 	return
00306e   0000     nop                      	nop
                                           USER_RESERVED_29
003070   0012     return	0                 	return
003072   0000     nop                      	nop
                                           USER_RESERVED_30
003074   0012     return	0                 	return
003076   0000     nop                      	nop
                                           USER_RESERVED_31
003078   0012     return	0                 	return
00307a   0000     nop                      	nop
                                           USER_RESERVED_32
00307c   0012     return	0                 	return
00307e   0000     nop                      	nop
                                           
                                           ;; ==========================================================================
                                           ;;  General Application Settings
                                           ;; ==========================================================================
                                           
                                           ;; ---[ configuration table for MIDI processor and rotary encoders ]---
                                           #include "mios_tables.inc"
                                           ;
                                           ; Configuration Tables for MIOS Application
                                           ;
                                           ; ==========================================================================
                                           ;
                                           ;  Copyright 1998-2006 Thorsten Klose (tk@midibox.org)
                                           ;  Licensed for personal non-commercial use only.
                                           ;  All other rights reserved.
                                           ; 
                                           ; ==========================================================================
                                           
                                           	org	0x3080		; never change the origin!
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;; The MIDI Trigger table maps incoming MIDI events to control elements
                                           ;; (pots/faders, encoders, buttons, LEDs, ...)
                                           ;; 
                                           ;; After the MIOS MIDI processor (MPROC) has received a complete event, it
                                           ;; searches in this table for a matching entry and calls USER_MPROC_NotifyFoundEvent
                                           ;; with the table index in WREG and the MIDI event in MIOS_PARAMETER[123]
                                           ;; 
                                           ;; Note also that the MIDI processor stops scanning the table after
                                           ;; the first MT_EOT entry
                                           ;; 
                                           ;; Note2: never change the origin (memory location) of this table!
                                           ;; 
                                           ;; Optionally this table can also be used to define events, which should be
                                           ;; transmitted (Example: see example_ain64_din128_dout128), so that incoming
                                           ;; and outgoing events are located at one place
                                           ;; 
                                           ;; The table *must* contain 256 entries. Unused entries should be filled with
                                           ;; MT_EOT.
                                           ;; --------------------------------------------------------------------------
                                           
                                           	;; MIDI Trigger entry structure
                                           MT_ENTRY MACRO event_0, event_1
                                           	dw	(event_1 << 8) | event_0
                                           	ENDM
                                           
                                           MT_EOT	MACRO
003080   ffff     dw	0xffff  ;unknown opcode 	dw	0xffff
003082   ffff     dw	0xffff  ;unknown opcode 
003084   ffff     dw	0xffff  ;unknown opcode 
003086   ffff     dw	0xffff  ;unknown opcode 
003088   ffff     dw	0xffff  ;unknown opcode 
00308a   ffff     dw	0xffff  ;unknown opcode 
00308c   ffff     dw	0xffff  ;unknown opcode 
00308e   ffff     dw	0xffff  ;unknown opcode 
003090   ffff     dw	0xffff  ;unknown opcode 
003092   ffff     dw	0xffff  ;unknown opcode 
003094   ffff     dw	0xffff  ;unknown opcode 
003096   ffff     dw	0xffff  ;unknown opcode 
003098   ffff     dw	0xffff  ;unknown opcode 
00309a   ffff     dw	0xffff  ;unknown opcode 
00309c   ffff     dw	0xffff  ;unknown opcode 
00309e   ffff     dw	0xffff  ;unknown opcode 
0030a0   ffff     dw	0xffff  ;unknown opcode 
0030a2   ffff     dw	0xffff  ;unknown opcode 
0030a4   ffff     dw	0xffff  ;unknown opcode 
0030a6   ffff     dw	0xffff  ;unknown opcode 
0030a8   ffff     dw	0xffff  ;unknown opcode 
0030aa   ffff     dw	0xffff  ;unknown opcode 
0030ac   ffff     dw	0xffff  ;unknown opcode 
0030ae   ffff     dw	0xffff  ;unknown opcode 
0030b0   ffff     dw	0xffff  ;unknown opcode 
0030b2   ffff     dw	0xffff  ;unknown opcode 
0030b4   ffff     dw	0xffff  ;unknown opcode 
0030b6   ffff     dw	0xffff  ;unknown opcode 
0030b8   ffff     dw	0xffff  ;unknown opcode 
0030ba   ffff     dw	0xffff  ;unknown opcode 
0030bc   ffff     dw	0xffff  ;unknown opcode 
0030be   ffff     dw	0xffff  ;unknown opcode 
0030c0   ffff     dw	0xffff  ;unknown opcode 
0030c2   ffff     dw	0xffff  ;unknown opcode 
0030c4   ffff     dw	0xffff  ;unknown opcode 
0030c6   ffff     dw	0xffff  ;unknown opcode 
0030c8   ffff     dw	0xffff  ;unknown opcode 
0030ca   ffff     dw	0xffff  ;unknown opcode 
0030cc   ffff     dw	0xffff  ;unknown opcode 
0030ce   ffff     dw	0xffff  ;unknown opcode 
0030d0   ffff     dw	0xffff  ;unknown opcode 
0030d2   ffff     dw	0xffff  ;unknown opcode 
0030d4   ffff     dw	0xffff  ;unknown opcode 
0030d6   ffff     dw	0xffff  ;unknown opcode 
0030d8   ffff     dw	0xffff  ;unknown opcode 
0030da   ffff     dw	0xffff  ;unknown opcode 
0030dc   ffff     dw	0xffff  ;unknown opcode 
0030de   ffff     dw	0xffff  ;unknown opcode 
0030e0   ffff     dw	0xffff  ;unknown opcode 
0030e2   ffff     dw	0xffff  ;unknown opcode 
0030e4   ffff     dw	0xffff  ;unknown opcode 
0030e6   ffff     dw	0xffff  ;unknown opcode 
0030e8   ffff     dw	0xffff  ;unknown opcode 
0030ea   ffff     dw	0xffff  ;unknown opcode 
0030ec   ffff     dw	0xffff  ;unknown opcode 
0030ee   ffff     dw	0xffff  ;unknown opcode 
0030f0   ffff     dw	0xffff  ;unknown opcode 
0030f2   ffff     dw	0xffff  ;unknown opcode 
0030f4   ffff     dw	0xffff  ;unknown opcode 
0030f6   ffff     dw	0xffff  ;unknown opcode 
0030f8   ffff     dw	0xffff  ;unknown opcode 
0030fa   ffff     dw	0xffff  ;unknown opcode 
0030fc   ffff     dw	0xffff  ;unknown opcode 
0030fe   ffff     dw	0xffff  ;unknown opcode 
003100   ffff     dw	0xffff  ;unknown opcode 
003102   ffff     dw	0xffff  ;unknown opcode 
003104   ffff     dw	0xffff  ;unknown opcode 
003106   ffff     dw	0xffff  ;unknown opcode 
003108   ffff     dw	0xffff  ;unknown opcode 
00310a   ffff     dw	0xffff  ;unknown opcode 
00310c   ffff     dw	0xffff  ;unknown opcode 
00310e   ffff     dw	0xffff  ;unknown opcode 
003110   ffff     dw	0xffff  ;unknown opcode 
003112   ffff     dw	0xffff  ;unknown opcode 
003114   ffff     dw	0xffff  ;unknown opcode 
003116   ffff     dw	0xffff  ;unknown opcode 
003118   ffff     dw	0xffff  ;unknown opcode 
00311a   ffff     dw	0xffff  ;unknown opcode 
00311c   ffff     dw	0xffff  ;unknown opcode 
00311e   ffff     dw	0xffff  ;unknown opcode 
003120   ffff     dw	0xffff  ;unknown opcode 
003122   ffff     dw	0xffff  ;unknown opcode 
003124   ffff     dw	0xffff  ;unknown opcode 
003126   ffff     dw	0xffff  ;unknown opcode 
003128   ffff     dw	0xffff  ;unknown opcode 
00312a   ffff     dw	0xffff  ;unknown opcode 
00312c   ffff     dw	0xffff  ;unknown opcode 
00312e   ffff     dw	0xffff  ;unknown opcode 
003130   ffff     dw	0xffff  ;unknown opcode 
003132   ffff     dw	0xffff  ;unknown opcode 
003134   ffff     dw	0xffff  ;unknown opcode 
003136   ffff     dw	0xffff  ;unknown opcode 
003138   ffff     dw	0xffff  ;unknown opcode 
00313a   ffff     dw	0xffff  ;unknown opcode 
00313c   ffff     dw	0xffff  ;unknown opcode 
00313e   ffff     dw	0xffff  ;unknown opcode 
003140   ffff     dw	0xffff  ;unknown opcode 
003142   ffff     dw	0xffff  ;unknown opcode 
003144   ffff     dw	0xffff  ;unknown opcode 
003146   ffff     dw	0xffff  ;unknown opcode 
003148   ffff     dw	0xffff  ;unknown opcode 
00314a   ffff     dw	0xffff  ;unknown opcode 
00314c   ffff     dw	0xffff  ;unknown opcode 
00314e   ffff     dw	0xffff  ;unknown opcode 
003150   ffff     dw	0xffff  ;unknown opcode 
003152   ffff     dw	0xffff  ;unknown opcode 
003154   ffff     dw	0xffff  ;unknown opcode 
003156   ffff     dw	0xffff  ;unknown opcode 
003158   ffff     dw	0xffff  ;unknown opcode 
00315a   ffff     dw	0xffff  ;unknown opcode 
00315c   ffff     dw	0xffff  ;unknown opcode 
00315e   ffff     dw	0xffff  ;unknown opcode 
003160   ffff     dw	0xffff  ;unknown opcode 
003162   ffff     dw	0xffff  ;unknown opcode 
003164   ffff     dw	0xffff  ;unknown opcode 
003166   ffff     dw	0xffff  ;unknown opcode 
003168   ffff     dw	0xffff  ;unknown opcode 
00316a   ffff     dw	0xffff  ;unknown opcode 
00316c   ffff     dw	0xffff  ;unknown opcode 
00316e   ffff     dw	0xffff  ;unknown opcode 
003170   ffff     dw	0xffff  ;unknown opcode 
003172   ffff     dw	0xffff  ;unknown opcode 
003174   ffff     dw	0xffff  ;unknown opcode 
003176   ffff     dw	0xffff  ;unknown opcode 
003178   ffff     dw	0xffff  ;unknown opcode 
00317a   ffff     dw	0xffff  ;unknown opcode 
00317c   ffff     dw	0xffff  ;unknown opcode 
00317e   ffff     dw	0xffff  ;unknown opcode 
003180   ffff     dw	0xffff  ;unknown opcode 
003182   ffff     dw	0xffff  ;unknown opcode 
003184   ffff     dw	0xffff  ;unknown opcode 
003186   ffff     dw	0xffff  ;unknown opcode 
003188   ffff     dw	0xffff  ;unknown opcode 
00318a   ffff     dw	0xffff  ;unknown opcode 
00318c   ffff     dw	0xffff  ;unknown opcode 
00318e   ffff     dw	0xffff  ;unknown opcode 
003190   ffff     dw	0xffff  ;unknown opcode 
003192   ffff     dw	0xffff  ;unknown opcode 
003194   ffff     dw	0xffff  ;unknown opcode 
003196   ffff     dw	0xffff  ;unknown opcode 
003198   ffff     dw	0xffff  ;unknown opcode 
00319a   ffff     dw	0xffff  ;unknown opcode 
00319c   ffff     dw	0xffff  ;unknown opcode 
00319e   ffff     dw	0xffff  ;unknown opcode 
0031a0   ffff     dw	0xffff  ;unknown opcode 
0031a2   ffff     dw	0xffff  ;unknown opcode 
0031a4   ffff     dw	0xffff  ;unknown opcode 
0031a6   ffff     dw	0xffff  ;unknown opcode 
0031a8   ffff     dw	0xffff  ;unknown opcode 
0031aa   ffff     dw	0xffff  ;unknown opcode 
0031ac   ffff     dw	0xffff  ;unknown opcode 
0031ae   ffff     dw	0xffff  ;unknown opcode 
0031b0   ffff     dw	0xffff  ;unknown opcode 
0031b2   ffff     dw	0xffff  ;unknown opcode 
0031b4   ffff     dw	0xffff  ;unknown opcode 
0031b6   ffff     dw	0xffff  ;unknown opcode 
0031b8   ffff     dw	0xffff  ;unknown opcode 
0031ba   ffff     dw	0xffff  ;unknown opcode 
0031bc   ffff     dw	0xffff  ;unknown opcode 
0031be   ffff     dw	0xffff  ;unknown opcode 
0031c0   ffff     dw	0xffff  ;unknown opcode 
0031c2   ffff     dw	0xffff  ;unknown opcode 
0031c4   ffff     dw	0xffff  ;unknown opcode 
0031c6   ffff     dw	0xffff  ;unknown opcode 
0031c8   ffff     dw	0xffff  ;unknown opcode 
0031ca   ffff     dw	0xffff  ;unknown opcode 
0031cc   ffff     dw	0xffff  ;unknown opcode 
0031ce   ffff     dw	0xffff  ;unknown opcode 
0031d0   ffff     dw	0xffff  ;unknown opcode 
0031d2   ffff     dw	0xffff  ;unknown opcode 
0031d4   ffff     dw	0xffff  ;unknown opcode 
0031d6   ffff     dw	0xffff  ;unknown opcode 
0031d8   ffff     dw	0xffff  ;unknown opcode 
0031da   ffff     dw	0xffff  ;unknown opcode 
0031dc   ffff     dw	0xffff  ;unknown opcode 
0031de   ffff     dw	0xffff  ;unknown opcode 
0031e0   ffff     dw	0xffff  ;unknown opcode 
0031e2   ffff     dw	0xffff  ;unknown opcode 
0031e4   ffff     dw	0xffff  ;unknown opcode 
0031e6   ffff     dw	0xffff  ;unknown opcode 
0031e8   ffff     dw	0xffff  ;unknown opcode 
0031ea   ffff     dw	0xffff  ;unknown opcode 
0031ec   ffff     dw	0xffff  ;unknown opcode 
0031ee   ffff     dw	0xffff  ;unknown opcode 
0031f0   ffff     dw	0xffff  ;unknown opcode 
0031f2   ffff     dw	0xffff  ;unknown opcode 
0031f4   ffff     dw	0xffff  ;unknown opcode 
0031f6   ffff     dw	0xffff  ;unknown opcode 
0031f8   ffff     dw	0xffff  ;unknown opcode 
0031fa   ffff     dw	0xffff  ;unknown opcode 
0031fc   ffff     dw	0xffff  ;unknown opcode 
0031fe   ffff     dw	0xffff  ;unknown opcode 
003200   ffff     dw	0xffff  ;unknown opcode 
003202   ffff     dw	0xffff  ;unknown opcode 
003204   ffff     dw	0xffff  ;unknown opcode 
003206   ffff     dw	0xffff  ;unknown opcode 
003208   ffff     dw	0xffff  ;unknown opcode 
00320a   ffff     dw	0xffff  ;unknown opcode 
00320c   ffff     dw	0xffff  ;unknown opcode 
00320e   ffff     dw	0xffff  ;unknown opcode 
003210   ffff     dw	0xffff  ;unknown opcode 
003212   ffff     dw	0xffff  ;unknown opcode 
003214   ffff     dw	0xffff  ;unknown opcode 
003216   ffff     dw	0xffff  ;unknown opcode 
003218   ffff     dw	0xffff  ;unknown opcode 
00321a   ffff     dw	0xffff  ;unknown opcode 
00321c   ffff     dw	0xffff  ;unknown opcode 
00321e   ffff     dw	0xffff  ;unknown opcode 
003220   ffff     dw	0xffff  ;unknown opcode 
003222   ffff     dw	0xffff  ;unknown opcode 
003224   ffff     dw	0xffff  ;unknown opcode 
003226   ffff     dw	0xffff  ;unknown opcode 
003228   ffff     dw	0xffff  ;unknown opcode 
00322a   ffff     dw	0xffff  ;unknown opcode 
00322c   ffff     dw	0xffff  ;unknown opcode 
00322e   ffff     dw	0xffff  ;unknown opcode 
003230   ffff     dw	0xffff  ;unknown opcode 
003232   ffff     dw	0xffff  ;unknown opcode 
003234   ffff     dw	0xffff  ;unknown opcode 
003236   ffff     dw	0xffff  ;unknown opcode 
003238   ffff     dw	0xffff  ;unknown opcode 
00323a   ffff     dw	0xffff  ;unknown opcode 
00323c   ffff     dw	0xffff  ;unknown opcode 
00323e   ffff     dw	0xffff  ;unknown opcode 
003240   ffff     dw	0xffff  ;unknown opcode 
003242   ffff     dw	0xffff  ;unknown opcode 
003244   ffff     dw	0xffff  ;unknown opcode 
003246   ffff     dw	0xffff  ;unknown opcode 
003248   ffff     dw	0xffff  ;unknown opcode 
00324a   ffff     dw	0xffff  ;unknown opcode 
00324c   ffff     dw	0xffff  ;unknown opcode 
00324e   ffff     dw	0xffff  ;unknown opcode 
003250   ffff     dw	0xffff  ;unknown opcode 
003252   ffff     dw	0xffff  ;unknown opcode 
003254   ffff     dw	0xffff  ;unknown opcode 
003256   ffff     dw	0xffff  ;unknown opcode 
003258   ffff     dw	0xffff  ;unknown opcode 
00325a   ffff     dw	0xffff  ;unknown opcode 
00325c   ffff     dw	0xffff  ;unknown opcode 
00325e   ffff     dw	0xffff  ;unknown opcode 
003260   ffff     dw	0xffff  ;unknown opcode 
003262   ffff     dw	0xffff  ;unknown opcode 
003264   ffff     dw	0xffff  ;unknown opcode 
003266   ffff     dw	0xffff  ;unknown opcode 
003268   ffff     dw	0xffff  ;unknown opcode 
00326a   ffff     dw	0xffff  ;unknown opcode 
00326c   ffff     dw	0xffff  ;unknown opcode 
00326e   ffff     dw	0xffff  ;unknown opcode 
003270   ffff     dw	0xffff  ;unknown opcode 
003272   ffff     dw	0xffff  ;unknown opcode 
003274   ffff     dw	0xffff  ;unknown opcode 
003276   ffff     dw	0xffff  ;unknown opcode 
003278   ffff     dw	0xffff  ;unknown opcode 
00327a   ffff     dw	0xffff  ;unknown opcode 
00327c   ffff     dw	0xffff  ;unknown opcode 
00327e   ffff     dw	0xffff  ;unknown opcode 
                                           	ENDM
                                           
                                           
                                           	global	_MIOS_MPROC_EVENT_TABLE
                                           
                                           _MIOS_MPROC_EVENT_TABLE
                                           MIOS_MPROC_EVENT_TABLE
                                           	;; entry 0x00-0x0f
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           
                                           	;; entry 0x10-0x1f	
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           
                                           	;; entry 0x20-0x2f
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	
                                           	;; entry 0x30-0x3f
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	
                                           	;; entry 0x40-0x4f
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	
                                           	;; entry 0x50-0x5f
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           		
                                           	;; entry 0x60-0x6f
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           
                                           	;; entry 0x70-0x7f
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           
                                           	;; entry 0x80-0x8f
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           
                                           	;; entry 0x90-0x9f
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           
                                           	;; entry 0xa0-0xaf
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           
                                           	;; entry 0xb1-0xbf
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           
                                           	;; entry 0xc0-0xcf
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           
                                           	;; entry 0xd0-0xdf
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           
                                           	;; entry 0xe0-0xef
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           
                                           	;; entry 0xf0-0xff
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           	MT_EOT
                                           
                                           
                                           
                                           ; ==========================================================================
                                           
                                           	org	0x3280		; never change the origin!
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;; In this table DIN pins have to be assigned to rotary encoders for the
                                           ;; MIOS_ENC driver 
                                           ;; 
                                           ;; up to 64 entries are provided
                                           ;; 
                                           ;; The table must be terminated with an ENC_EOT entry. Unused entries should
                                           ;; be filled with ENC_EOT
                                           ;; 
                                           ;; ENC_ENTRY provides following parameters
                                           ;;    o first parameter: number of shift register - 1, 2, 3, ... 16
                                           ;;    o second parameter: number of pin; since two pins are necessary
                                           ;;      for each encoder, an even number is expected: 0, 2, 4 or 6
                                           ;;    o the third parameter contains the encoder mode:
                                           ;;      either MIOS_ENC_MODE_NON_DETENTED
                                           ;;          or MIOS_ENC_MODE_DETENTED
                                           ;;
                                           ;; Configuration Examples:
                                           ;;    ENC_ENTRY  1,  0,  MIOS_ENC_MODE_NON_DETENTED    ; non-detented encoder at pin 0 and 1 of SR 1
                                           ;;    ENC_ENTRY  1,  2,  MIOS_ENC_MODE_DETENTED        ; detented encoder at pin 2 and 3 of SR 1
                                           ;;    ENC_ENTRY  9,  6,  MIOS_ENC_MODE_NON_DETENTED    ; non-detented encoder at pin 6 and 7 of SR 9
                                           ;; --------------------------------------------------------------------------
                                           
                                           	;; encoder entry structure
                                           ENC_ENTRY MACRO sr, din_0, mode
                                           	dw	(mode << 8) | (din_0 + 8*(sr-1))
                                           	ENDM	
                                           ENC_EOT	MACRO
003280   ffff     dw	0xffff  ;unknown opcode 	dw	0xffff
003282   ffff     dw	0xffff  ;unknown opcode 
003284   ffff     dw	0xffff  ;unknown opcode 
003286   ffff     dw	0xffff  ;unknown opcode 
003288   ffff     dw	0xffff  ;unknown opcode 
00328a   ffff     dw	0xffff  ;unknown opcode 
00328c   ffff     dw	0xffff  ;unknown opcode 
00328e   ffff     dw	0xffff  ;unknown opcode 
003290   ffff     dw	0xffff  ;unknown opcode 
003292   ffff     dw	0xffff  ;unknown opcode 
003294   ffff     dw	0xffff  ;unknown opcode 
003296   ffff     dw	0xffff  ;unknown opcode 
003298   ffff     dw	0xffff  ;unknown opcode 
00329a   ffff     dw	0xffff  ;unknown opcode 
00329c   ffff     dw	0xffff  ;unknown opcode 
00329e   ffff     dw	0xffff  ;unknown opcode 
0032a0   ffff     dw	0xffff  ;unknown opcode 
0032a2   ffff     dw	0xffff  ;unknown opcode 
0032a4   ffff     dw	0xffff  ;unknown opcode 
0032a6   ffff     dw	0xffff  ;unknown opcode 
0032a8   ffff     dw	0xffff  ;unknown opcode 
0032aa   ffff     dw	0xffff  ;unknown opcode 
0032ac   ffff     dw	0xffff  ;unknown opcode 
0032ae   ffff     dw	0xffff  ;unknown opcode 
0032b0   ffff     dw	0xffff  ;unknown opcode 
0032b2   ffff     dw	0xffff  ;unknown opcode 
0032b4   ffff     dw	0xffff  ;unknown opcode 
0032b6   ffff     dw	0xffff  ;unknown opcode 
0032b8   ffff     dw	0xffff  ;unknown opcode 
0032ba   ffff     dw	0xffff  ;unknown opcode 
0032bc   ffff     dw	0xffff  ;unknown opcode 
0032be   ffff     dw	0xffff  ;unknown opcode 
0032c0   ffff     dw	0xffff  ;unknown opcode 
0032c2   ffff     dw	0xffff  ;unknown opcode 
0032c4   ffff     dw	0xffff  ;unknown opcode 
0032c6   ffff     dw	0xffff  ;unknown opcode 
0032c8   ffff     dw	0xffff  ;unknown opcode 
0032ca   ffff     dw	0xffff  ;unknown opcode 
0032cc   ffff     dw	0xffff  ;unknown opcode 
0032ce   ffff     dw	0xffff  ;unknown opcode 
0032d0   ffff     dw	0xffff  ;unknown opcode 
0032d2   ffff     dw	0xffff  ;unknown opcode 
0032d4   ffff     dw	0xffff  ;unknown opcode 
0032d6   ffff     dw	0xffff  ;unknown opcode 
0032d8   ffff     dw	0xffff  ;unknown opcode 
0032da   ffff     dw	0xffff  ;unknown opcode 
0032dc   ffff     dw	0xffff  ;unknown opcode 
0032de   ffff     dw	0xffff  ;unknown opcode 
0032e0   ffff     dw	0xffff  ;unknown opcode 
0032e2   ffff     dw	0xffff  ;unknown opcode 
0032e4   ffff     dw	0xffff  ;unknown opcode 
0032e6   ffff     dw	0xffff  ;unknown opcode 
0032e8   ffff     dw	0xffff  ;unknown opcode 
0032ea   ffff     dw	0xffff  ;unknown opcode 
0032ec   ffff     dw	0xffff  ;unknown opcode 
0032ee   ffff     dw	0xffff  ;unknown opcode 
0032f0   ffff     dw	0xffff  ;unknown opcode 
0032f2   ffff     dw	0xffff  ;unknown opcode 
0032f4   ffff     dw	0xffff  ;unknown opcode 
0032f6   ffff     dw	0xffff  ;unknown opcode 
0032f8   ffff     dw	0xffff  ;unknown opcode 
0032fa   ffff     dw	0xffff  ;unknown opcode 
0032fc   ffff     dw	0xffff  ;unknown opcode 
0032fe   ffff     dw	0xffff  ;unknown opcode 
                                           	ENDM
                                           
                                           	global	_MIOS_ENC_PIN_TABLE
                                           
                                           _MIOS_ENC_PIN_TABLE
                                           MIOS_ENC_PIN_TABLE
                                           	;; encoders 1-16
                                           	;;        SR  Pin  Mode
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           
                                           	;; encoders 17-32
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           
                                           	;; encoders 33-48
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           
                                           	;; encoders 49-64
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           	ENC_EOT
                                           
                                           	org	0x3300		; never change the origin!
                                           
                                           ;; ---[ Custom LCD driver ]---
                                           #include "app_lcd.inc"
                                           ;
                                           ; MIOS Custom LCD Driver Skeleton
                                           ;
                                           ; ==========================================================================
                                           ;
                                           ;  Copyright 1998-2006 Thorsten Klose (tk@midibox.org)
                                           ;  Licensed for personal non-commercial use only.
                                           ;  All other rights reserved.
                                           ; 
                                           ; ==========================================================================
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  Following system variables are given by MIOS and can be directly 
                                           ;;  accessed by the driver. The addresses are defined in mios.h and
                                           ;;  should not be changed
                                           ;; 
                                           ;;  MIOS_GLCD_BUFFER	     a 8 byte buffer for data transfers
                                           ;;  MIOS_LCD_OPTION1	     contains the first LCD option given by MIOS_LCD_TypeSet
                                           ;;  MIOS_LCD_OPTION2	     contains the second LCD option given by MIOS_LCD_TypeSet
                                           ;;  MIOS_LCD_CURSOR_POS	     the current cursor pos of characters (GLCD: multiplied by width)
                                           ;;  MIOS_GLCD_GCURSOR_X	     for GLCDs: the current X position of graphical cursor
                                           ;;  MIOS_GLCD_GCURSOR_Y	     for GLCDs: the current Y position of graphical cursor
                                           ;;  MIOS_GLCD_FONT_WIDTH     for GLCDs: the fontwidth given by MIOS_GLCD_FontInit
                                           ;;  MIOS_GLCD_FONT_HEIGHT    for GLCDs: the fontheight given by MIOS_GLCD_FontInit
                                           ;;  MIOS_GLCD_FONT_X0        for GLCDs: the first byte within a char entry
                                           ;;  MIOS_GLCD_FONT_OFFSET    for GLCDs: the byte offset between the characters
                                           ;;  MIOS_GLCD_FONT_PTRL      for GLCDs: pointer to the character table, low-byte
                                           ;;  MIOS_GLCD_FONT_PTRH      for GLCDs: pointer to the character table, high-byte
                                           ;;  MIOS_LCD_TIMEOUT0        can be used for timeout loops
                                           ;;  MIOS_LCD_TIMEOUT1        can be used for timeout loops
                                           ;;  MIOS_GLCD_TMP1           can be used as temporary buffer
                                           ;;  MIOS_GLCD_TMP2           can be used as temporary buffer
                                           ;;  MIOS_GLCD_TMP3           can be used as temporary buffer
                                           ;;  MIOS_GLCD_TMP4           can be used as temporary buffer
                                           ;;  MIOS_LCD_Y0_OFFSET       Y0 offset of LCD
                                           ;;  MIOS_LCD_Y1_OFFSET       Y1 offset of LCD
                                           ;;  MIOS_LCD_Y2_OFFSET       Y2 offset of LCD
                                           ;;  MIOS_LCD_Y3_OFFSET       Y3 offset of LCD
                                           ;;  MIOS_LCD_CURSOR_POS_REAL unmapped cursor position which has been set with MIOS_LCD_CursorSet
                                           ;; 
                                           ;;  Note: the addresses are located in an upper bank and therefore have to
                                           ;;        be accessed with the BANKED flag. Also the BSR has to be justified
                                           ;;        before using the registers
                                           ;;  Example:
                                           ;;	SET_BSR MIOS_LCD_OPTION1	; sets BSR to the bank where MIOS_LCD_*
                                           ;;					; has been located. You don't need to
                                           ;;					; change the BSR for the other LCD registers
                                           ;;      movf    MIOS_LCD_OPTION1, W, BANKED	; get LCD option #1
                                           ;; 
                                           ;;  Important: to allow a proper interaction with MIOS applications, you are
                                           ;;  only allowed to modify MIOS_PARAMETER[123], the mutliplication registers
                                           ;;  and FSR1. You are not allowed to change TMP[1-5] or FSR0
                                           ;;  if you need some temporary registers, use the given addresses above or
                                           ;;  locate them to addresses which are not used by the application
                                           ;; --------------------------------------------------------------------------
                                           	
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is called by MIOS when the custom LCD should be initialized
                                           ;;  In:  MIOS_LCD_OPTION1 - contains the first LCD option given by MIOS_LCD_TypeSet
                                           ;;       MIOS_LCD_OPTION2 - contains the second LCD option given by MIOS_LCD_TypeSet
                                           ;;  Out: -
                                           ;; --------------------------------------------------------------------------
                                           USER_LCD_Init
003300   0012     return	0                 	return
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is called by MIOS when the custom LCD should be cleared
                                           ;;  In:  MIOS_LCD_OPTION1 - contains the first LCD option given by MIOS_LCD_TypeSet
                                           ;;       MIOS_LCD_OPTION2 - contains the second LCD option given by MIOS_LCD_TypeSet
                                           ;;  Out: -
                                           ;; --------------------------------------------------------------------------
                                           USER_LCD_Clear
003302   0012     return	0                 	return
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is called by MIOS when the cursor should be changed
                                           ;;  In:  MIOS_LCD_OPTION1 - contains the first LCD option given by MIOS_LCD_TypeSet
                                           ;;       MIOS_LCD_OPTION2 - contains the second LCD option given by MIOS_LCD_TypeSet
                                           ;;       MIOS_GLCD_CURSOR_X - horizontal cursor position (for GLCDs)
                                           ;;       MIOS_GLCD_CURSOR_X - vertical cursor position   (for GLCDs)
                                           ;;       MIOS_LCD_CURSOR    - character cursor position  (for CLCDs)
                                           ;;  Out: -
                                           ;; --------------------------------------------------------------------------
                                           USER_LCD_CursorSet
003304   0012     return	0                 	return
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is called by MIOS when a character should be print
                                           ;;  In:  WREG - character
                                           ;;       all other MIOS_*LCD_* registers
                                           ;;  Out: GLCDs should justify the X/Y cursor position
                                           ;; --------------------------------------------------------------------------
                                           USER_LCD_PrintChar
003306   0012     return	0                 	return
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  FUNCTION: USER_LCD_Data
                                           ;;  DESCRIPTION: sends a data value to the LCD display.<BR>
                                           ;;  On CLCDs: branch directly to USER_LCD_PrintChar<BR>
                                           ;;  On GLCDs: ignore this function!
                                           ;;  IN:  data which should be sent
                                           ;;  OUT: -
                                           ;;  NOTE: see the custom_lcd_example for further details
                                           ;; --------------------------------------------------------------------------
                                           USER_LCD_Data
003308   0012     return	0                 	return
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  FUNCTION: USER_LCD_Cmd
                                           ;;  DESCRIPTION: sends a command to the LCD display.<BR>
                                           ;;  On CLCDs: use this function to decode the HD44780 commands if required<BR>
                                           ;;  On GLCDs: ignore this function!
                                           ;;  IN:  command which should be sent
                                           ;;  OUT: -
                                           ;;  NOTE: see the custom_lcd_example for further details
                                           ;; --------------------------------------------------------------------------
                                           USER_LCD_Cmd
00330a   0012     return	0                 	return
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  FUNCTION: USER_LCD_SpecialCharInit
                                           ;;  DESCRIPTION: see MIOS_CLCD_SpecialCharInit
                                           ;;  IN:  number of special character (0-7) in WREG
                                           ;;       pointer to special char pattern in TBLPTR (consists of 8
                                           ;;          entries for every character-line)
                                           ;;  OUT: TBLPTR has to be set to next table entry (TBLPTR+=8)
                                           ;;  NOTE: see the custom_lcd_example for further details
                                           ;; --------------------------------------------------------------------------
                                           USER_LCD_SpecialCharInit
00330c   0012     return	0                 	return
                                           
                                           ; Don't enable this --- its only used by a special testcase which checks 
                                           ; parameter passing on functions which are difficult to verify with
                                           ; directed tests
                                           #ifndef PARAMETER_PASSING_TEST
                                           #define PARAMETER_PASSING_TEST 0
                                           #endif
                                           
                                           ;; ==========================================================================
                                           ;;  Export MIOS variables
                                           ;; ==========================================================================
                                           	global	_MIOS_BOX_CFG0
                                           	global	_MIOS_BOX_CFG1
                                           	global	_MIOS_BOX_STAT
                                           	global	_MIOS_PARAMETER1
                                           	global	_MIOS_PARAMETER2
                                           	global	_MIOS_PARAMETER3
                                           
                                           MIOS_VARIABLES		udata	0x0000
                                           _MIOS_BOX_CFG0		res	1
                                           _MIOS_BOX_CFG1		res	1
                                           _MIOS_BOX_STAT		res	1
                                           _MIOS_PARAMETER1	res	1
                                           _MIOS_PARAMETER2	res	1
                                           _MIOS_PARAMETER3	res	1
                                           _TMP1			res	1
                                           _TMP2			res	1
                                           _TMP3			res	1
                                           _TMP4			res	1
                                           _TMP5			res	1
                                           _IRQ_TMP1		res	1
                                           _IRQ_TMP2		res	1
                                           _IRQ_TMP3		res	1
                                           _IRQ_TMP4		res	1
                                           _IRQ_TMP5		res	1
                                           
                                           ;; ==========================================================================
                                           ;;  All MIOS hooks in one file
                                           ;; ==========================================================================
                                           
                                           MIOS_WRAPPER_CODE	code
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is called by MIOS after startup to initialize the 
                                           ;;  application
                                           ;; --------------------------------------------------------------------------
                                           USER_Init
                                           	extern	_Init
                                           
0035c8   ee03     lfsr	0, 0x37f            	lfsr	FSR0, STACK_HEAD	; initialize stack
0035ca   f07f
0035cc   ee23     lfsr	0x2, 0x37f          	lfsr	FSR2, STACK_HEAD
0035ce   f07f
0035d0   efad     goto	0x395a              	goto	_Init	
0035d2   f01c
                                           
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is called by MIOS in the mainloop when nothing else is to do
                                           ;; --------------------------------------------------------------------------
                                           USER_Tick
                                           	extern	_Tick
                                           
0035d4   ee03     lfsr	0, 0x37f            	lfsr	FSR0, STACK_HEAD	; initialize stack
0035d6   f07f
0035d8   ee23     lfsr	0x2, 0x37f          	lfsr	FSR2, STACK_HEAD
0035da   f07f
0035dc   efd9     goto	0x3bb2              	goto	_Tick
0035de   f01d
                                           
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is periodically called by MIOS. The frequency has to be
                                           ;;  initialized with MIOS_Timer_Set
                                           ;;  Note that this is an interrupt service routine! Use FSR2 instead of FSR0
                                           ;;  and IRQ_TMPx instead of TMPx -- and make the routine as fast as possible!
                                           ;; --------------------------------------------------------------------------
                                           USER_Timer
                                           	extern	_Timer
                                           
0035e0   ee23     lfsr	0x2, 0x33f          	lfsr	FSR2, STACK_IRQ_HEAD	; initialize IRQ stack
0035e2   f03f
0035e4   cfe9     movff	0xfe9, 0xfdd       	movff	FSR0L, POSTDEC2		; save FSR0[LH] on IRQ stack
0035e6   ffdd
0035e8   cfea     movff	0xfea, 0xfdd       	movff	FSR0H, POSTDEC2
0035ea   ffdd
0035ec   ee03     lfsr	0, 0x33d            	lfsr	FSR0, STACK_IRQ_HEAD-2	; write stack pointer also to FSR0
0035ee   f03d
0035f0   ece2     call	0x3bc4, 0           	call	_Timer			; call C hook
0035f2   f01d
0035f4   c33f     movff	0x33f, 0xfe9       	movff	STACK_IRQ_HEAD-0, FSR0L	; restore FSR0[LH] directly from memory (more fail save)
0035f6   ffe9
0035f8   c33e     movff	0x33e, 0xfea       	movff	STACK_IRQ_HEAD-1, FSR0H	; restore FSR0[LH] directly from memory (more fail save)
0035fa   ffea
0035fc   0012     return	0                 	return
                                           
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is called by MIOS when a debug command has been received
                                           ;;  via SysEx
                                           ;;  Input:
                                           ;;     o WREG, MIOS_PARAMETER1, MIOS_PARAMETER2, MIOS_PARAMETER3 like
                                           ;;       specified in the debug command
                                           ;;  Output:
                                           ;;     o return values WREG, MIOS_PARAMETER1, MIOS_PARAMETER2, MIOS_PARAMETER3
                                           ;; --------------------------------------------------------------------------
                                           USER_MPROC_DebugTrigger
                                           	;; not really required for C programs
0035fe   0012     return	0                 	return
                                           
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is called by MIOS when the display content should be 
                                           ;;  initialized. Thats the case during startup and after a temporary message
                                           ;;  has been printed on the screen
                                           ;; --------------------------------------------------------------------------
                                           USER_DISPLAY_Init
                                           	extern	_DISPLAY_Init
                                           
003600   ee03     lfsr	0, 0x37f            	lfsr	FSR0, STACK_HEAD	; initialize stack
003602   f07f
003604   ee23     lfsr	0x2, 0x37f          	lfsr	FSR2, STACK_HEAD
003606   f07f
003608   ef76     goto	0x38ec              	goto	_DISPLAY_Init
00360a   f01c
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is called in the mainloop when no temporary message is shown
                                           ;;  on screen. Print the realtime messages here
                                           ;; --------------------------------------------------------------------------
                                           USER_DISPLAY_Tick
                                           	extern	_DISPLAY_Tick
                                           
00360c   ee03     lfsr	0, 0x37f            	lfsr	FSR0, STACK_HEAD	; initialize stack
00360e   f07f
003610   ee23     lfsr	0x2, 0x37f          	lfsr	FSR2, STACK_HEAD
003612   f07f
003614   ef7d     goto	0x3afa              	goto	_DISPLAY_Tick
003616   f01d
                                           
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is called by MIOS when a complete MIDI event has been received
                                           ;;  Input:
                                           ;;     o first  MIDI event byte in MIOS_PARAMETER1
                                           ;;     o second MIDI event byte in MIOS_PARAMETER2
                                           ;;     o third  MIDI event byte in MIOS_PARAMETER3
                                           ;; --------------------------------------------------------------------------
                                           USER_MPROC_NotifyReceivedEvent
                                           	extern	_MPROC_NotifyReceivedEvnt
                                           
003618   ee03     lfsr	0, 0x37f            	lfsr	FSR0, STACK_HEAD	; initialize stack
00361a   f07f
00361c   ee23     lfsr	0x2, 0x37f          	lfsr	FSR2, STACK_HEAD
00361e   f07f
                                           
003620   c005     movff	0x5, 0xfed         	movff	MIOS_PARAMETER3, POSTDEC0
003622   ffed
003624   c004     movff	0x4, 0xfed         	movff	MIOS_PARAMETER2, POSTDEC0
003626   ffed
003628   5003     movf	0x3, 0, 0           	movf	MIOS_PARAMETER1, W
00362a   ef76     goto	0x3aec              	goto	_MPROC_NotifyReceivedEvnt
00362c   f01d
                                           
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is called by MIOS when a MIDI event has been received
                                           ;;  which has been specified in the CONFIG_MIDI_IN table
                                           ;;  Input:
                                           ;;     o number of entry in WREG
                                           ;;     o first  MIDI event byte in MIOS_PARAMETER1
                                           ;;     o second MIDI event byte in MIOS_PARAMETER2
                                           ;;     o third  MIDI event byte in MIOS_PARAMETER3
                                           ;; --------------------------------------------------------------------------
                                           USER_MPROC_NotifyFoundEvent
                                           	extern	_MPROC_NotifyFoundEvent
                                           
00362e   ee03     lfsr	0, 0x37f            	lfsr	FSR0, STACK_HEAD	; initialize stack
003630   f07f
003632   ee23     lfsr	0x2, 0x37f          	lfsr	FSR2, STACK_HEAD
003634   f07f
                                           
003636   c005     movff	0x5, 0xfed         	movff	MIOS_PARAMETER3, POSTDEC0
003638   ffed
00363a   c004     movff	0x4, 0xfed         	movff	MIOS_PARAMETER2, POSTDEC0
00363c   ffed
00363e   c003     movff	0x3, 0xfed         	movff	MIOS_PARAMETER1, POSTDEC0
003640   ffed
003642   6eed     movwf	0xed, 0            	movwf	POSTDEC0		; TK: required for SDCC 2.5.0, don't know why...
                                           	;; entry number still in wreg
003644   ef6f     goto	0x3ade              	goto	_MPROC_NotifyFoundEvent
003646   f01d
                                           
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is called by MIOS when a MIDI event has not been completly
                                           ;;  received within 2 seconds
                                           ;; --------------------------------------------------------------------------
                                           USER_MPROC_NotifyTimeout
                                           	extern	_MPROC_NotifyTimeout
                                           
003648   ee03     lfsr	0, 0x37f            	lfsr	FSR0, STACK_HEAD	; initialize stack
00364a   f07f
00364c   ee23     lfsr	0x2, 0x37f          	lfsr	FSR2, STACK_HEAD
00364e   f07f
003650   efe1     goto	0x3bc2              	goto	_MPROC_NotifyTimeout
003652   f01d
                                           
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is called by MIOS when a MIDI byte has been received
                                           ;;  Input:
                                           ;;     o received MIDI byte in WREG and MIOS_PARAMETER1
                                           ;; --------------------------------------------------------------------------
                                           USER_MPROC_NotifyReceivedByte
                                           	extern	_MPROC_NotifyReceivedByte
                                           
003654   ee03     lfsr	0, 0x37f            	lfsr	FSR0, STACK_HEAD	; initialize stack
003656   f07f
003658   ee23     lfsr	0x2, 0x37f          	lfsr	FSR2, STACK_HEAD
00365a   f07f
                                           
                                           	;; MIDI byte still in WREG
00365c   ef68     goto	0x3ad0              	goto	_MPROC_NotifyReceivedByte
00365e   f01d
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is called by MIOS before the transfer of a MIDI byte. 
                                           ;;  It can be used to monitor the Tx activity or to do any other actions
                                           ;;  (e.g. to switch a pin for multiplexed MIDI Outs) before the byte will 
                                           ;;  be sent.
                                           ;;  Note that this is an interrupt service routine! Use FSR2 instead of FSR0
                                           ;;  and IRQ_TMPx instead of TMPx -- and make the routine as fast as possible!
                                           ;;  Input:
                                           ;;     o transmitted byte in WREG
                                           ;; --------------------------------------------------------------------------
                                           USER_MIDI_NotifyTx
                                           	;; too time consuming for C programs --- should be handled so fast as
                                           	;; possible and therefore serviced in assembler
003660   0012     return	0                 	return
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is called by MIOS when a MIDI byte has been received.
                                           ;;  It can be used to monitor the Rx activity or to do any action - e.g.
                                           ;;  to react on realtime events like MIDI clock (0xf8) with a minimum latency
                                           ;;  Note that this is an interrupt service routine! Use FSR2 instead of FSR0
                                           ;;  and IRQ_TMPx instead of TMPx -- and make the routine as fast as possible!
                                           ;;  Input:
                                           ;;     o received byte in WREG
                                           ;; --------------------------------------------------------------------------
                                           USER_MIDI_NotifyRx
                                           	;; too time consuming for C programs --- should be handled so fast as
                                           	;; possible and therefore serviced in assembler
003662   0012     return	0                 	return
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is called by MIOS when an button has been toggled
                                           ;;  Input:
                                           ;;     o Button number in WREG and MIOS_PARAMETER1
                                           ;;     o Button value MIOS_PARAMETER2:
                                           ;;       - 1 if button has been released (=5V)
                                           ;;       - 0 if button has been pressed (=0V)
                                           ;; --------------------------------------------------------------------------
                                           USER_DIN_NotifyToggle
                                           	extern	_DIN_NotifyToggle
                                           
003664   ee03     lfsr	0, 0x37f            	lfsr	FSR0, STACK_HEAD	; initialize stack
003666   f07f
003668   ee23     lfsr	0x2, 0x37f          	lfsr	FSR2, STACK_HEAD
00366a   f07f
                                           
00366c   c004     movff	0x4, 0xfed         	movff	MIOS_PARAMETER2, POSTDEC0
00366e   ffed
                                           	;; button number still in WREG
003670   ef61     goto	0x3ac2              	goto	_DIN_NotifyToggle
003672   f01d
                                           
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is called by MIOS when an encoder has been moved
                                           ;;  Input:
                                           ;;     o Encoder number in WREG and MIOS_PARAMETER1
                                           ;;     o signed incrementer value in MIOS_PARAMETER2:
                                           ;;       - is positive when encoder has been turned clockwise
                                           ;;       - is negative when encoder has been turned counter clockwise
                                           ;; --------------------------------------------------------------------------
                                           USER_ENC_NotifyChange
                                           	extern	_ENC_NotifyChange
                                           
003674   ee03     lfsr	0, 0x37f            	lfsr	FSR0, STACK_HEAD	; initialize stack
003676   f07f
003678   ee23     lfsr	0x2, 0x37f          	lfsr	FSR2, STACK_HEAD
00367a   f07f
                                           
00367c   c004     movff	0x4, 0xfed         	movff	MIOS_PARAMETER2, POSTDEC0
00367e   ffed
                                           	;; encoder number still in WREG
003680   ef5a     goto	0x3ab4              	goto	_ENC_NotifyChange
003682   f01d
                                           
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is called by MIOS before the shift register are loaded
                                           ;;  Note that this is an interrupt service routine! Use FSR2 instead of FSR0
                                           ;;  and IRQ_TMPx instead of TMPx -- and make the routine as fast as possible
                                           ;; --------------------------------------------------------------------------
                                           USER_SR_Service_Prepare
                                           	extern	_SR_Service_Prepare
                                           
003684   ee23     lfsr	0x2, 0x33f          	lfsr	FSR2, STACK_IRQ_HEAD	; initialize IRQ stack
003686   f03f
003688   cfe9     movff	0xfe9, 0xfdd       	movff	FSR0L, POSTDEC2		; save FSR0[LH] on IRQ stack
00368a   ffdd
00368c   cfea     movff	0xfea, 0xfdd       	movff	FSR0H, POSTDEC2
00368e   ffdd
003690   ee03     lfsr	0, 0x33d            	lfsr	FSR0, STACK_IRQ_HEAD-2	; write stack pointer also to FSR0
003692   f03d
003694   ecd6     call	0x3bac, 0           	call	_SR_Service_Prepare	; call C hook
003696   f01d
003698   c33f     movff	0x33f, 0xfe9       	movff	STACK_IRQ_HEAD-0, FSR0L	; restore FSR0[LH] directly from memory (more fail save)
00369a   ffe9
00369c   c33e     movff	0x33e, 0xfea       	movff	STACK_IRQ_HEAD-1, FSR0H	; restore FSR0[LH] directly from memory (more fail save)
00369e   ffea
0036a0   0012     return	0                 	return
                                           
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is called by MIOS after the shift register have been loaded
                                           ;;  Note that this is an interrupt service routine! Use FSR2 instead of FSR0
                                           ;;  and IRQ_TMPx instead of TMPx -- and make the routine as fast as possible
                                           ;; --------------------------------------------------------------------------
                                           USER_SR_Service_Finish
                                           	extern	_SR_Service_Finish
                                           
0036a2   ee23     lfsr	0x2, 0x33f          	lfsr	FSR2, STACK_IRQ_HEAD	; initialize IRQ stack
0036a4   f03f
0036a6   cfe9     movff	0xfe9, 0xfdd       	movff	FSR0L, POSTDEC2		; save FSR0[LH] on IRQ stack
0036a8   ffdd
0036aa   cfea     movff	0xfea, 0xfdd       	movff	FSR0H, POSTDEC2
0036ac   ffdd
0036ae   ee03     lfsr	0, 0x33d            	lfsr	FSR0, STACK_IRQ_HEAD-2	; write stack pointer also to FSR0
0036b0   f03d
0036b2   ecd3     call	0x3ba6, 0           	call	_SR_Service_Finish	; call C hook
0036b4   f01d
0036b6   c33f     movff	0x33f, 0xfe9       	movff	STACK_IRQ_HEAD-0, FSR0L	; restore FSR0[LH] directly from memory (more fail save)
0036b8   ffe9
0036ba   c33e     movff	0x33e, 0xfea       	movff	STACK_IRQ_HEAD-1, FSR0H	; restore FSR0[LH] directly from memory (more fail save)
0036bc   ffea
0036be   0012     return	0                 	return
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  This function is called by MIOS when a pot has been moved
                                           ;;  Input:
                                           ;;     o Pot number in WREG and MIOS_PARAMETER1
                                           ;;     o LSB value in MIOS_PARAMETER2
                                           ;;     o MSB value in MIOS_PARAMETER3
                                           ;; --------------------------------------------------------------------------
                                           USER_AIN_NotifyChange
                                           	extern	_AIN_NotifyChange
                                           
0036c0   ee03     lfsr	0, 0x37f            	lfsr	FSR0, STACK_HEAD	; initialize stack
0036c2   f07f
0036c4   ee23     lfsr	0x2, 0x37f          	lfsr	FSR2, STACK_HEAD
0036c6   f07f
                                           
0036c8   c005     movff	0x5, 0xfed         	movff	MIOS_PARAMETER3, POSTDEC0
0036ca   ffed
0036cc   c004     movff	0x4, 0xfed         	movff	MIOS_PARAMETER2, POSTDEC0
0036ce   ffed
                                           	;; pot number still in WREG
0036d0   ef53     goto	0x3aa6              	goto	_AIN_NotifyChange
0036d2   f01d
                                           
                                           
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;; ==========================================================================
                                           ;;  LINKS TO THE MIOS FUNCTIONS
                                           ;; ==========================================================================
                                           ;; --------------------------------------------------------------------------
                                           
                                           .MIOS_MIDI_BeginStream code MIOS_MIDI_BeginStream
                                           _MIOS_MIDI_BeginStream
                                           	global	_MIOS_MIDI_BeginStream
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MIDI_DeviceIDAutoSet code MIOS_MIDI_DeviceIDAutoSet
                                           _MIOS_MIDI_DeviceIDAutoSet
                                           	global	_MIOS_MIDI_DeviceIDAutoSet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MIDI_DeviceIDGet code MIOS_MIDI_DeviceIDGet
                                           _MIOS_MIDI_DeviceIDGet
                                           	global	_MIOS_MIDI_DeviceIDGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MIDI_DeviceIDSet code MIOS_MIDI_DeviceIDSet
                                           _MIOS_MIDI_DeviceIDSet
                                           	global	_MIOS_MIDI_DeviceIDSet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MIDI_EndStream code MIOS_MIDI_EndStream
                                           _MIOS_MIDI_EndStream
                                           	global	_MIOS_MIDI_EndStream
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MIDI_Init code MIOS_MIDI_Init
                                           _MIOS_MIDI_Init
                                           	global	_MIOS_MIDI_Init
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MIDI_InterfaceAutoSet code MIOS_MIDI_InterfaceAutoSet
                                           _MIOS_MIDI_InterfaceAutoSet
                                           	global	_MIOS_MIDI_InterfaceAutoSet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MIDI_InterfaceGet code MIOS_MIDI_InterfaceGet
                                           _MIOS_MIDI_InterfaceGet
                                           	global	_MIOS_MIDI_InterfaceGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MIDI_InterfaceSet code MIOS_MIDI_InterfaceSet
                                           _MIOS_MIDI_InterfaceSet
                                           	global	_MIOS_MIDI_InterfaceSet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MIDI_MergerGet code MIOS_MIDI_MergerGet
                                           _MIOS_MIDI_MergerGet
                                           	global	_MIOS_MIDI_MergerGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MIDI_MergerSet code MIOS_MIDI_MergerSet
                                           _MIOS_MIDI_MergerSet
                                           	global	_MIOS_MIDI_MergerSet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MIDI_RxBufferFree code MIOS_MIDI_RxBufferFree
                                           _MIOS_MIDI_RxBufferFree
                                           	global	_MIOS_MIDI_RxBufferFree
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MIDI_RxBufferGet code MIOS_MIDI_RxBufferGet
                                           _MIOS_MIDI_RxBufferGet
                                           	global	_MIOS_MIDI_RxBufferGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MIDI_RxBufferPut code MIOS_MIDI_RxBufferPut
                                           _MIOS_MIDI_RxBufferPut
                                           	global	_MIOS_MIDI_RxBufferPut
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MIDI_RxBufferUsed code MIOS_MIDI_RxBufferUsed
                                           _MIOS_MIDI_RxBufferUsed
                                           	global	_MIOS_MIDI_RxBufferUsed
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MIDI_TxBufferFlush code MIOS_MIDI_TxBufferFlush
                                           _MIOS_MIDI_TxBufferFlush
                                           	global	_MIOS_MIDI_TxBufferFlush
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MIDI_TxBufferFree code MIOS_MIDI_TxBufferFree
                                           _MIOS_MIDI_TxBufferFree
                                           	global	_MIOS_MIDI_TxBufferFree
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MIDI_TxBufferGet code MIOS_MIDI_TxBufferGet
                                           _MIOS_MIDI_TxBufferGet
                                           	global	_MIOS_MIDI_TxBufferGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MIDI_TxBufferPut code MIOS_MIDI_TxBufferPut
                                           _MIOS_MIDI_TxBufferPut
                                           	global	_MIOS_MIDI_TxBufferPut
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MIDI_TxBufferUsed code MIOS_MIDI_TxBufferUsed
                                           _MIOS_MIDI_TxBufferUsed
                                           	global	_MIOS_MIDI_TxBufferUsed
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MPROC_MergerDisable code MIOS_MPROC_MergerDisable
                                           _MIOS_MPROC_MergerDisable
                                           	global	_MIOS_MPROC_MergerDisable
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MPROC_MergerEnable code MIOS_MPROC_MergerEnable
                                           _MIOS_MPROC_MergerEnable
                                           	global	_MIOS_MPROC_MergerEnable
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MPROC_MergerGet code MIOS_MPROC_MergerGet
                                           _MIOS_MPROC_MergerGet
                                           	global	_MIOS_MPROC_MergerGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_AIN_DeadbandGet code MIOS_AIN_DeadbandGet
                                           _MIOS_AIN_DeadbandGet
                                           	global	_MIOS_AIN_DeadbandGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_AIN_DeadbandSet code MIOS_AIN_DeadbandSet
                                           _MIOS_AIN_DeadbandSet
                                           	global	_MIOS_AIN_DeadbandSet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_AIN_Muxed code MIOS_AIN_Muxed
                                           _MIOS_AIN_Muxed
                                           	global	_MIOS_AIN_Muxed
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_AIN_NumberGet code MIOS_AIN_NumberGet
                                           _MIOS_AIN_NumberGet
                                           	global	_MIOS_AIN_NumberGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_AIN_NumberSet code MIOS_AIN_NumberSet
                                           _MIOS_AIN_NumberSet
                                           	global	_MIOS_AIN_NumberSet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_AIN_Pin7bitGet code MIOS_AIN_Pin7bitGet
                                           _MIOS_AIN_Pin7bitGet
                                           	global	_MIOS_AIN_Pin7bitGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_AIN_PinGet code
                                           _MIOS_AIN_PinGet
                                           	global	_MIOS_AIN_PinGet
                                           
003b9c   ec3a     call	0x2c74, 0           	call	MIOS_AIN_PinGet
003b9e   f016
003ba0   c004     movff	0x4, 0xff3         	movff	MIOS_PARAMETER2, PRODL	; high byte -> PRODL
003ba2   fff3
003ba4   0012     return	0                 	return				; low byte already in WREG
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_AIN_PinLSBGet code MIOS_AIN_PinLSBGet
                                           _MIOS_AIN_PinLSBGet
                                           	global	_MIOS_AIN_PinLSBGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_AIN_PinMSBGet code MIOS_AIN_PinMSBGet
                                           _MIOS_AIN_PinMSBGet
                                           	global	_MIOS_AIN_PinMSBGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_AIN_UnMuxed code MIOS_AIN_UnMuxed
                                           _MIOS_AIN_UnMuxed
                                           	global	_MIOS_AIN_UnMuxed
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MF_PWM_DutyCycleDownGet code MIOS_MF_PWM_DutyCycleDownGet
                                           _MIOS_MF_PWM_DutyCycleDownGet
                                           	global	_MIOS_MF_PWM_DutyCycleDownGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MF_PWM_DutyCycleDownSet code MIOS_MF_PWM_DutyCycleDownSet
                                           _MIOS_MF_PWM_DutyCycleDownSet
                                           	global	_MIOS_MF_PWM_DutyCycleDownSet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MF_PWM_DutyCycleUpGet code MIOS_MF_PWM_DutyCycleUpGet
                                           _MIOS_MF_PWM_DutyCycleUpGet
                                           	global	_MIOS_MF_PWM_DutyCycleUpGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MF_PWM_DutyCycleUpSet code MIOS_MF_PWM_DutyCycleUpSet
                                           _MIOS_MF_PWM_DutyCycleUpSet
                                           	global	_MIOS_MF_PWM_DutyCycleUpSet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MF_DeadbandGet code MIOS_MF_DeadbandGet
                                           _MIOS_MF_DeadbandGet
                                           	global	_MIOS_MF_DeadbandGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MF_DeadbandSet code MIOS_MF_DeadbandSet
                                           _MIOS_MF_DeadbandSet
                                           	global	_MIOS_MF_DeadbandSet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MF_Disable code MIOS_MF_Disable
                                           _MIOS_MF_Disable
                                           	global	_MIOS_MF_Disable
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MF_Enable code MIOS_MF_Enable
                                           _MIOS_MF_Enable
                                           	global	_MIOS_MF_Enable
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MF_FaderMove code
                                           _MIOS_MF_FaderMove
                                           	global	_MIOS_MF_FaderMove
                                           
003a46   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003a48   ffd9
003a4a   cfdc     movff	0xfdc, 0x3          	movff	PREINC2, MIOS_PARAMETER1
003a4c   f003
003a4e   cfdc     movff	0xfdc, 0x4          	movff	PREINC2, MIOS_PARAMETER2
003a50   f004
003a52   ef52     goto	0x2ca4              	goto	MIOS_MF_FaderMove
003a54   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MF_SuspendDisable code MIOS_MF_SuspendDisable
                                           _MIOS_MF_SuspendDisable
                                           	global	_MIOS_MF_SuspendDisable
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MF_SuspendEnable code MIOS_MF_SuspendEnable
                                           _MIOS_MF_SuspendEnable
                                           	global	_MIOS_MF_SuspendEnable
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MF_SuspendGet code MIOS_MF_SuspendGet
                                           _MIOS_MF_SuspendGet
                                           	global	_MIOS_MF_SuspendGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MF_PWM_PeriodGet code MIOS_MF_PWM_PeriodGet
                                           _MIOS_MF_PWM_PeriodGet
                                           	global	_MIOS_MF_PWM_PeriodGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MF_PWM_PeriodSet code MIOS_MF_PWM_PeriodSet
                                           _MIOS_MF_PWM_PeriodSet
                                           	global	_MIOS_MF_PWM_PeriodSet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_MF_TouchDetectionReset code MIOS_MF_TouchDetectionReset
                                           _MIOS_MF_TouchDetectionReset
                                           	global	_MIOS_MF_TouchDetectionReset
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_DIN_PinGet code MIOS_DIN_PinGet
                                           _MIOS_DIN_PinGet
                                           	global	_MIOS_DIN_PinGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_DIN_SRGet code MIOS_DIN_SRGet
                                           _MIOS_DIN_SRGet
                                           	global	_MIOS_DIN_SRGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_DOUT_PinGet code MIOS_DOUT_PinGet
                                           _MIOS_DOUT_PinGet
                                           	global	_MIOS_DOUT_PinGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_DOUT_PinSet code
                                           _MIOS_DOUT_PinSet
                                           	global	_MIOS_DOUT_PinSet
                                           
003b24   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003b26   ffd9
003b28   cfdc     movff	0xfdc, 0x3          	movff	PREINC2, MIOS_PARAMETER1
003b2a   f003
003b2c   ef60     goto	0x2cc0              	goto	MIOS_DOUT_PinSet
003b2e   f016
                                           
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_DOUT_PinSet0 code MIOS_DOUT_PinSet0
                                           _MIOS_DOUT_PinSet0
                                           	global	_MIOS_DOUT_PinSet0
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_DOUT_PinSet1 code MIOS_DOUT_PinSet1
                                           _MIOS_DOUT_PinSet1
                                           	global	_MIOS_DOUT_PinSet1
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_DOUT_SRGet code MIOS_DOUT_SRGet
                                           _MIOS_DOUT_SRGet
                                           	global	_MIOS_DOUT_SRGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_DOUT_SRSet code
                                           _MIOS_DOUT_SRSet
                                           	global	_MIOS_DOUT_SRSet
                                           	
003b30   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003b32   ffd9
003b34   cfdc     movff	0xfdc, 0x3          	movff	PREINC2, MIOS_PARAMETER1
003b36   f003
003b38   ef68     goto	0x2cd0              	goto	MIOS_DOUT_SRSet
003b3a   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_ENC_Abs7bitAdd code
                                           _MIOS_ENC_Abs7bitAdd
                                           	global	_MIOS_ENC_Abs7bitAdd
                                           	
003b3c   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003b3e   ffd9
003b40   cfdc     movff	0xfdc, 0x3          	movff	PREINC2, MIOS_PARAMETER1
003b42   f003
003b44   ef6a     goto	0x2cd4              	goto	MIOS_ENC_Abs7bitAdd
003b46   f016
                                           	
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_ENC_Abs7bitGet code MIOS_ENC_Abs7bitGet
                                           _MIOS_ENC_Abs7bitGet
                                           	global	_MIOS_ENC_Abs7bitGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_ENC_Abs7bitSet code
                                           _MIOS_ENC_Abs7bitSet
                                           	global	_MIOS_ENC_Abs7bitSet
                                           
003b48   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003b4a   ffd9
003b4c   cfdc     movff	0xfdc, 0x3          	movff	PREINC2, MIOS_PARAMETER1
003b4e   f003
003b50   ef6e     goto	0x2cdc              	goto	MIOS_ENC_Abs7bitSet
003b52   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_ENC_NumberGet code MIOS_ENC_NumberGet
                                           _MIOS_ENC_NumberGet
                                           	global	_MIOS_ENC_NumberGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_ENC_SpeedGet code
                                           _MIOS_ENC_SpeedGet
                                           	global	_MIOS_ENC_SpeedGet
                                           
003b54   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003b56   ffd9
003b58   cfdc     movff	0xfdc, 0x3          	movff	PREINC2, MIOS_PARAMETER1
003b5a   f003
003b5c   ef72     goto	0x2ce4              	goto	MIOS_ENC_SpeedGet
003b5e   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_ENC_SpeedSet code
                                           _MIOS_ENC_SpeedSet
                                           	global	_MIOS_ENC_SpeedSet
                                           
003a56   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003a58   ffd9
003a5a   cfdc     movff	0xfdc, 0x3          	movff	PREINC2, MIOS_PARAMETER1
003a5c   f003
003a5e   cfdc     movff	0xfdc, 0x4          	movff	PREINC2, MIOS_PARAMETER2
003a60   f004
003a62   ef74     goto	0x2ce8              	goto	MIOS_ENC_SpeedSet
003a64   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_SRIO_NumberGet code MIOS_SRIO_NumberGet
                                           _MIOS_SRIO_NumberGet
                                           	global	_MIOS_SRIO_NumberGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_SRIO_NumberSet code MIOS_SRIO_NumberSet
                                           _MIOS_SRIO_NumberSet
                                           	global	_MIOS_SRIO_NumberSet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_SRIO_TS_SensitivityGet code MIOS_SRIO_TS_SensitivityGet
                                           _MIOS_SRIO_TS_SensitivityGet
                                           	global	_MIOS_SRIO_TS_SensitivityGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_SRIO_TS_SensitivitySet code MIOS_SRIO_TS_SensitivitySet
                                           _MIOS_SRIO_TS_SensitivitySet
                                           	global	_MIOS_SRIO_TS_SensitivitySet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_SRIO_UpdateFrqGet code MIOS_SRIO_UpdateFrqGet
                                           _MIOS_SRIO_UpdateFrqGet
                                           	global	_MIOS_SRIO_UpdateFrqGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_SRIO_UpdateFrqSet code MIOS_SRIO_UpdateFrqSet
                                           _MIOS_SRIO_UpdateFrqSet
                                           	global	_MIOS_SRIO_UpdateFrqSet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_SRIO_DebounceGet code MIOS_SRIO_DebounceGet
                                           _MIOS_SRIO_DebounceGet
                                           	global	_MIOS_SRIO_DebounceGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_SRIO_DebounceSet code MIOS_SRIO_DebounceSet
                                           _MIOS_SRIO_DebounceSet
                                           	global	_MIOS_SRIO_DebounceSet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_Clear code MIOS_LCD_Clear
                                           _MIOS_LCD_Clear
                                           	global	_MIOS_LCD_Clear
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_Cmd code MIOS_LCD_Cmd
                                           _MIOS_LCD_Cmd
                                           	global	_MIOS_LCD_Cmd
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_CursorGet code MIOS_LCD_CursorGet
                                           _MIOS_LCD_CursorGet
                                           	global	_MIOS_LCD_CursorGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_CursorSet code MIOS_LCD_CursorSet
                                           _MIOS_LCD_CursorSet
                                           	global	_MIOS_LCD_CursorSet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_Data code MIOS_LCD_Data
                                           _MIOS_LCD_Data
                                           	global	_MIOS_LCD_Data
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_Init code MIOS_LCD_Init
                                           _MIOS_LCD_Init
                                           	global	_MIOS_LCD_Init
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_PrintBCD1 code MIOS_LCD_PrintBCD1
                                           _MIOS_LCD_PrintBCD1
                                           	global	_MIOS_LCD_PrintBCD1
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_PrintBCD2 code MIOS_LCD_PrintBCD2
                                           _MIOS_LCD_PrintBCD2
                                           	global	_MIOS_LCD_PrintBCD2
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_PrintBCD3 code MIOS_LCD_PrintBCD3
                                           _MIOS_LCD_PrintBCD3
                                           	global	_MIOS_LCD_PrintBCD3
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_PrintBCD4 code
                                           _MIOS_LCD_PrintBCD4
                                           	global	_MIOS_LCD_PrintBCD4
                                           
003b60   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003b62   ffd9
003b64   cfdc     movff	0xfdc, 0x3         	movff	PREINC2, MIOS_PARAMETER1
003b66   f003
003b68   eff6     goto	0x2dec              	goto	MIOS_LCD_PrintBCD4
003b6a   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_PrintBCD5 code
                                           _MIOS_LCD_PrintBCD5
                                           	global	_MIOS_LCD_PrintBCD5
                                           
003b6c   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003b6e   ffd9
003b70   cfdc     movff	0xfdc, 0x3         	movff	PREINC2, MIOS_PARAMETER1
003b72   f003
003b74   eff8     goto	0x2df0              	goto	MIOS_LCD_PrintBCD5
003b76   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_PrintChar code MIOS_LCD_PrintChar
                                           _MIOS_LCD_PrintChar
                                           	global	_MIOS_LCD_PrintChar
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_PrintHex1 code MIOS_LCD_PrintHex1
                                           _MIOS_LCD_PrintHex1
                                           	global	_MIOS_LCD_PrintHex1
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_PrintHex2 code MIOS_LCD_PrintHex2
                                           _MIOS_LCD_PrintHex2
                                           	global	_MIOS_LCD_PrintHex2
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_PrintMessage code
                                           _MIOS_LCD_PrintMessage
                                           	global	_MIOS_LCD_PrintMessage
                                           
0039da   6ef6     movwf	0xf6, 0            	movwf	TBLPTRL
0039dc   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
0039de   ffd9
0039e0   cfdc     movff	0xfdc, 0xff7       	movff	PREINC2, TBLPTRH
0039e2   fff7
0039e4   cfdc     movff	0xfdc, 0xff8       	movff	PREINC2, TBLPTRU
0039e6   fff8
0039e8   ef9a     goto	0x2d34              	goto	MIOS_LCD_PrintMessage
0039ea   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_PrintPreconfString code
                                           _MIOS_LCD_PrintPreconfString
                                           	global	_MIOS_LCD_PrintPreconfString
                                           
00399e   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
0039a0   ffd9
0039a2   cfdc     movff	0xfdc, 0xff8       	movff	PREINC2, TBLPTRU
0039a4   fff8
0039a6   cfdc     movff	0xfdc, 0xff7       	movff	PREINC2, TBLPTRH
0039a8   fff7
0039aa   cfdc     movff	0xfdc, 0xff6       	movff	PREINC2, TBLPTRL
0039ac   fff6
0039ae   ef9c     goto	0x2d38              	goto	MIOS_LCD_PrintPreconfString
0039b0   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_PrintString code
                                           _MIOS_LCD_PrintString
                                           	global	_MIOS_LCD_PrintString
                                           
0039ec   6ef6     movwf	0xf6, 0            	movwf	TBLPTRL
0039ee   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
0039f0   ffd9
0039f2   cfdc     movff	0xfdc, 0xff7       	movff	PREINC2, TBLPTRH
0039f4   fff7
0039f6   cfdc     movff	0xfdc, 0xff8       	movff	PREINC2, TBLPTRU
0039f8   fff8
0039fa   ef9e     goto	0x2d3c              	goto	MIOS_LCD_PrintString
0039fc   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_TypeAutoSet code MIOS_LCD_TypeAutoSet
                                           _MIOS_LCD_TypeAutoSet
                                           	global	_MIOS_LCD_TypeAutoSet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_TypeGet code MIOS_LCD_TypeGet
                                           _MIOS_LCD_TypeGet
                                           	global	_MIOS_LCD_TypeGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_TypeSet code
                                           _MIOS_LCD_TypeSet
                                           	global	_MIOS_LCD_TypeSet
                                           
003a66   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003a68   ffd9
003a6a   cfdc     movff	0xfdc, 0x3          	movff	PREINC2, MIOS_PARAMETER1
003a6c   f003
003a6e   cfdc     movff	0xfdc, 0x4          	movff	PREINC2, MIOS_PARAMETER2
003a70   f004
003a72   efa4     goto	0x2d48              	goto	MIOS_LCD_TypeSet
003a74   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_YAddressGet code
                                           _MIOS_LCD_YAddressGet
                                           	global	_MIOS_LCD_YAddressGet
003bbe   efa6     goto	0x2d4c              	goto	MIOS_LCD_YAddressGet
003bc0   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_YAddressSet code
                                           _MIOS_LCD_YAddressSet
                                           	global	_MIOS_LCD_YAddressSet
                                           
0039b2   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
0039b4   ffd9
0039b6   6e03     movwf	0x3, 0             	movwf	MIOS_PARAMETER1
0039b8   cfdc     movff	0xfdc, 0x4          	movff	PREINC2, MIOS_PARAMETER2
0039ba   f004
0039bc   cfdc     movff	0xfdc, 0x5          	movff	PREINC2, MIOS_PARAMETER3
0039be   f005
0039c0   50dc     movf	0xdc, 0, 0          	movf	PREINC2, W
0039c2   efa8     goto	0x2d50              	goto	MIOS_LCD_YAddressSet
0039c4   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_MessageStart code MIOS_LCD_MessageStart
                                           _MIOS_LCD_MessageStart
                                           	global	_MIOS_LCD_MessageStart
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_MessageStop code MIOS_LCD_MessageStop
                                           _MIOS_LCD_MessageStop
                                           	global	_MIOS_LCD_MessageStop
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_CLCD_SpecialCharInit code
                                           _MIOS_CLCD_SpecialCharInit
                                           	global	_MIOS_CLCD_SpecialCharInit
                                           
0039c6   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
0039c8   ffd9
0039ca   cfdc     movff	0xfdc, 0xff6       	movff	PREINC2, TBLPTRL
0039cc   fff6
0039ce   cfdc     movff	0xfdc, 0xff7       	movff	PREINC2, TBLPTRH
0039d0   fff7
0039d2   cfdc     movff	0xfdc, 0xff8       	movff	PREINC2, TBLPTRU
0039d4   fff8
0039d6   efe4     goto	0x2dc8              	goto	MIOS_CLCD_SpecialCharInit
0039d8   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_CLCD_SpecialCharsInit code
                                           _MIOS_CLCD_SpecialCharsInit
                                           	global	_MIOS_CLCD_SpecialCharsInit
                                           
0039fe   6ef6     movwf	0xf6, 0            	movwf	TBLPTRL
003a00   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003a02   ffd9
003a04   cfdc     movff	0xfdc, 0xff7       	movff	PREINC2, TBLPTRH
003a06   fff7
003a08   cfdc     movff	0xfdc, 0xff8       	movff	PREINC2, TBLPTRU
003a0a   fff8
003a0c   efe6     goto	0x2dcc              	goto	MIOS_CLCD_SpecialCharsInit
003a0e   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_GLCD_FontInit code
                                           _MIOS_GLCD_FontInit
                                           	global	_MIOS_GLCD_FontInit
                                           
003a10   6ef6     movwf	0xf6, 0            	movwf	TBLPTRL
003a12   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003a14   ffd9
003a16   cfdc     movff	0xfdc, 0xff7       	movff	PREINC2, TBLPTRH
003a18   fff7
003a1a   cfdc     movff	0xfdc, 0xff8       	movff	PREINC2, TBLPTRU
003a1c   fff8
003a1e   efaa     goto	0x2d54              	goto	MIOS_GLCD_FontInit
003a20   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_GLCD_GCursorGet code MIOS_GLCD_GCursorGet
                                           _MIOS_GLCD_GCursorGet
                                           	global	_MIOS_GLCD_GCursorGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_GLCD_GCursorSet code
                                           _MIOS_GLCD_GCursorSet
                                           	global	_MIOS_GLCD_GCursorSet
                                           
003b78   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003b7a   ffd9
003b7c   cfdc     movff	0xfdc, 0x3          	movff	PREINC2, MIOS_PARAMETER1
003b7e   f003
003b80   efae     goto	0x2d5c              	goto	MIOS_GLCD_GCursorSet
003b82   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_EEPROM_Read code
                                           _MIOS_EEPROM_Read
                                           	global	_MIOS_EEPROM_Read
                                           
003bb8   6ea9     movwf	0xa9, 0            	movwf	EEADR
003bba   efb0     goto	0x2d60              	goto	MIOS_EEPROM_Read
003bbc   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_EEPROM_Write code
                                           _MIOS_EEPROM_Write
                                           	global	_MIOS_EEPROM_Write
                                           
003b84   6ea9     movwf	0xa9, 0            	movwf	EEADR
003b86   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003b88   ffd9
003b8a   50dc     movf	0xdc, 0, 0          	movf	PREINC2, W
003b8c   efb2     goto	0x2d64              	goto	MIOS_EEPROM_Write
003b8e   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_EEPROM_ReadPage code
                                           _MIOS_EEPROM_ReadPage
                                           	global	_MIOS_EEPROM_ReadPage
                                           
003a22   6ea9     movwf	0xa9, 0            	movwf	EEADR
003a24   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003a26   ffd9
003a28   cfdc     movff	0xfdc, 0xfe1       	movff	PREINC2, FSR1L
003a2a   ffe1
003a2c   cfdc     movff	0xfdc, 0xfe2       	movff	PREINC2, FSR1H
003a2e   ffe2
                                           
                                           #if PARAMETER_PASSING_TEST
                                           	movlw	0x56
                                           	cpfseq	EEADR, ACCESS
                                           	return
                                           
                                           	movlw	0x12
                                           	cpfseq	FSR1L, ACCESS
                                           	return
                                           
                                           	movlw	0x03
                                           	cpfseq	FSR1H, ACCESS
                                           	return
                                           
                                           	movlw	0x1a
                                           	movwf	MIOS_PARAMETER1
                                           	return
                                           #endif
                                           
003a30   ef1a     goto	0x2e34              	goto	MIOS_EEPROM_ReadPage
003a32   f017
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_EEPROM_WritePage code
                                           _MIOS_EEPROM_WritePage
                                           	global	_MIOS_EEPROM_WritePage
                                           
003a34   6ea9     movwf	0xa9, 0            	movwf	EEADR
003a36   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003a38   ffd9
003a3a   cfdc     movff	0xfdc, 0xfe1       	movff	PREINC2, FSR1L
003a3c   ffe1
003a3e   cfdc     movff	0xfdc, 0xfe2       	movff	PREINC2, FSR1H
003a40   ffe2
                                           
                                           #if PARAMETER_PASSING_TEST
                                           	movlw	0x56
                                           	cpfseq	EEADR, ACCESS
                                           	return
                                           
                                           	movlw	0x12
                                           	cpfseq	FSR1L, ACCESS
                                           	return
                                           
                                           	movlw	0x03
                                           	cpfseq	FSR1H, ACCESS
                                           	return
                                           
                                           	movlw	0x1a
                                           	movwf	MIOS_PARAMETER1
                                           	return
                                           #endif
                                           
003a42   ef1c     goto	0x2e38              	goto	MIOS_EEPROM_WritePage
003a44   f017
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_FLASH_Read code
                                           _MIOS_FLASH_Read
                                           	global	_MIOS_FLASH_Read
                                           
003926   6ef6     movwf	0xf6, 0            	movwf	TBLPTRL
003928   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
00392a   ffd9
00392c   cfdc     movff	0xfdc, 0xff7       	movff	PREINC2, TBLPTRH
00392e   fff7
003930   cfdc     movff	0xfdc, 0xff8       	movff	PREINC2, TBLPTRU
003932   fff8
003934   cfdc     movff	0xfdc, 0xfe1       	movff	PREINC2, FSR1L
003936   ffe1
003938   cfdc     movff	0xfdc, 0xfe2       	movff	PREINC2, FSR1H
00393a   ffe2
                                           
                                           #if PARAMETER_PASSING_TEST
                                           	movlw	0x56
                                           	cpfseq	TBLPTRL, ACCESS
                                           	return
                                           
                                           	movlw	0x78
                                           	cpfseq	TBLPTRH, ACCESS
                                           	return
                                           
                                           	movlw	0x00
                                           	cpfseq	TBLPTRU, ACCESS
                                           	return
                                           
                                           	movlw	0x12
                                           	cpfseq	FSR1L, ACCESS
                                           	return
                                           
                                           	movlw	0x03
                                           	cpfseq	FSR1H, ACCESS
                                           	return
                                           
                                           	movlw	0x1a
                                           	movwf	MIOS_PARAMETER1
                                           	return
                                           #endif
                                           
00393c   efb4     goto	0x2d68              	goto	MIOS_FLASH_Read
00393e   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_FLASH_Write code
                                           _MIOS_FLASH_Write
                                           	global	_MIOS_FLASH_Write
                                           
003940   6ef6     movwf	0xf6, 0            	movwf	TBLPTRL
003942   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003944   ffd9
003946   cfdc     movff	0xfdc, 0xff7       	movff	PREINC2, TBLPTRH
003948   fff7
00394a   cfdc     movff	0xfdc, 0xff8       	movff	PREINC2, TBLPTRU
00394c   fff8
00394e   cfdc     movff	0xfdc, 0xfe1       	movff	PREINC2, FSR1L
003950   ffe1
003952   cfdc     movff	0xfdc, 0xfe2       	movff	PREINC2, FSR1H
003954   ffe2
                                           
                                           #if PARAMETER_PASSING_TEST
                                           	movlw	0x56
                                           	cpfseq	TBLPTRL, ACCESS
                                           	return
                                           
                                           	movlw	0x78
                                           	cpfseq	TBLPTRH, ACCESS
                                           	return
                                           
                                           	movlw	0x00
                                           	cpfseq	TBLPTRU, ACCESS
                                           	return
                                           
                                           	movlw	0x12
                                           	cpfseq	FSR1L, ACCESS
                                           	return
                                           
                                           	movlw	0x03
                                           	cpfseq	FSR1H, ACCESS
                                           	return
                                           
                                           	movlw	0x1a
                                           	movwf	MIOS_PARAMETER1
                                           	return
                                           #endif
                                           
003956   efb6     goto	0x2d6c              	goto	MIOS_FLASH_Write
003958   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_BANKSTICK_Read code
                                           _MIOS_BANKSTICK_Read
                                           	global	_MIOS_BANKSTICK_Read
                                           
003b16   6e03     movwf	0x3, 0             	movwf	MIOS_PARAMETER1
003b18   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003b1a   ffd9
003b1c   cfdc     movff	0xfdc, 0x4         	movff	PREINC2, MIOS_PARAMETER2
003b1e   f004
                                           
                                           #if PARAMETER_PASSING_TEST
                                           	movlw	0x12
                                           	cpfseq	MIOS_PARAMETER1, ACCESS
                                           	return
                                           
                                           	movlw	0x34
                                           	cpfseq	MIOS_PARAMETER2, ACCESS
                                           	return
                                           
                                           	movlw	0x1a
                                           	movwf	MIOS_PARAMETER1
                                           	return
                                           #endif
003b20   efb8     goto	0x2d70              	goto	MIOS_BANKSTICK_Read
003b22   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_BANKSTICK_Write code
                                           _MIOS_BANKSTICK_Write
                                           	global	_MIOS_BANKSTICK_Write
                                           
003a76   6e03     movwf	0x3, 0             	movwf	MIOS_PARAMETER1
003a78   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003a7a   ffd9
003a7c   cfdc     movff	0xfdc, 0x4         	movff	PREINC2, MIOS_PARAMETER2
003a7e   f004
003a80   50dc     movf	0xdc, 0, 0          	movf	PREINC2, W
                                           
                                           #if PARAMETER_PASSING_TEST
                                           	movwf	TMP1
                                           	movlw	0x56
                                           	cpfseq	TMP1, ACCESS
                                           	return
                                           
                                           	movlw	0x12
                                           	cpfseq	MIOS_PARAMETER1, ACCESS
                                           	return
                                           
                                           	movlw	0x34
                                           	cpfseq	MIOS_PARAMETER2, ACCESS
                                           	return
                                           
                                           	movlw	0x1a
                                           	movwf	MIOS_PARAMETER1
                                           	return
                                           #endif
                                           
003a82   efba     goto	0x2d74              	goto	MIOS_BANKSTICK_Write
003a84   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_BANKSTICK_CtrlSet code MIOS_BANKSTICK_CtrlSet
                                           _MIOS_BANKSTICK_CtrlSet
                                           	global	_MIOS_BANKSTICK_CtrlSet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_BANKSTICK_CtrlGet code MIOS_BANKSTICK_CtrlGet
                                           _MIOS_BANKSTICK_CtrlGet
                                           	global	_MIOS_BANKSTICK_CtrlGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_BANKSTICK_WritePage code
                                           _MIOS_BANKSTICK_WritePage
                                           	global	_MIOS_BANKSTICK_WritePage
                                           
003972   6e03     movwf	0x3, 0             	movwf	MIOS_PARAMETER1
003974   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003976   ffd9
003978   cfdc     movff	0xfdc, 0x4         	movff	PREINC2, MIOS_PARAMETER2
00397a   f004
00397c   cfdc     movff	0xfdc, 0xfe1       	movff	PREINC2, FSR1L
00397e   ffe1
003980   cfdc     movff	0xfdc, 0xfe2       	movff	PREINC2, FSR1H
003982   ffe2
                                           
                                           #if PARAMETER_PASSING_TEST
                                           	movlw	0x56
                                           	cpfseq	MIOS_PARAMETER1, ACCESS
                                           	return
                                           
                                           	movlw	0x78
                                           	cpfseq	MIOS_PARAMETER2, ACCESS
                                           	return
                                           
                                           	movlw	0x12
                                           	cpfseq	FSR1L, ACCESS
                                           	return
                                           
                                           	movlw	0x03
                                           	cpfseq	FSR1H, ACCESS
                                           	return
                                           
                                           	movlw	0x1a
                                           	movwf	MIOS_PARAMETER1
                                           	return
                                           #endif
                                           
003984   eff2     goto	0x2de4              	goto	MIOS_BANKSTICK_WritePage
003986   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_BANKSTICK_ReadPage code
                                           _MIOS_BANKSTICK_ReadPage
                                           	global	_MIOS_BANKSTICK_ReadPage
                                           	
003988   6e03     movwf	0x3, 0             	movwf	MIOS_PARAMETER1
00398a   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
00398c   ffd9
00398e   cfdc     movff	0xfdc, 0x4         	movff	PREINC2, MIOS_PARAMETER2
003990   f004
003992   cfdc     movff	0xfdc, 0xfe1       	movff	PREINC2, FSR1L
003994   ffe1
003996   cfdc     movff	0xfdc, 0xfe2       	movff	PREINC2, FSR1H
003998   ffe2
                                           
                                           #if PARAMETER_PASSING_TEST
                                           	movlw	0x56
                                           	cpfseq	MIOS_PARAMETER1, ACCESS
                                           	return
                                           
                                           	movlw	0x78
                                           	cpfseq	MIOS_PARAMETER2, ACCESS
                                           	return
                                           
                                           	movlw	0x12
                                           	cpfseq	FSR1L, ACCESS
                                           	return
                                           
                                           	movlw	0x03
                                           	cpfseq	FSR1H, ACCESS
                                           	return
                                           
                                           	movlw	0x1a
                                           	movwf	MIOS_PARAMETER1
                                           	return
                                           #endif
                                           
00399a   ef18     goto	0x2e30              	goto	MIOS_BANKSTICK_ReadPage
00399c   f017
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_TIMER_Init code
                                           _MIOS_TIMER_Init
                                           	global	_MIOS_TIMER_Init
                                           
003a86   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003a88   ffd9
003a8a   cfdc     movff	0xfdc, 0x3         	movff	PREINC2, MIOS_PARAMETER1
003a8c   f003
003a8e   cfdc     movff	0xfdc, 0x4         	movff	PREINC2, MIOS_PARAMETER2
003a90   f004
                                           
                                           #if PARAMETER_PASSING_TEST
                                           	movwf	TMP1
                                           	movlw	0x56
                                           	cpfseq	TMP1, ACCESS
                                           	return
                                           
                                           	movlw	0x12
                                           	cpfseq	MIOS_PARAMETER1, ACCESS
                                           	return
                                           
                                           	movlw	0x34
                                           	cpfseq	MIOS_PARAMETER2, ACCESS
                                           	return
                                           
                                           	movlw	0x1a
                                           	movwf	MIOS_PARAMETER1
                                           	return
                                           #endif
                                           
003a92   efbc     goto	0x2d78              	goto	MIOS_TIMER_Init
003a94   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_TIMER_Start code MIOS_TIMER_Start
                                           _MIOS_TIMER_Start
                                           	global	_MIOS_TIMER_Start
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_TIMER_Stop code MIOS_TIMER_Stop
                                           _MIOS_TIMER_Stop
                                           	global	_MIOS_TIMER_Stop
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_TIMER_ReInit code
                                           _MIOS_TIMER_ReInit
                                           	global	_MIOS_TIMER_ReInit
                                           
003a96   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003a98   ffd9
003a9a   cfdc     movff	0xfdc, 0x3         	movff	PREINC2, MIOS_PARAMETER1
003a9c   f003
003a9e   cfdc     movff	0xfdc, 0x4         	movff	PREINC2, MIOS_PARAMETER2
003aa0   f004
                                           
                                           #if PARAMETER_PASSING_TEST
                                           	movwf	TMP1
                                           	movlw	0x56
                                           	cpfseq	TMP1, ACCESS
                                           	return
                                           
                                           	movlw	0x12
                                           	cpfseq	MIOS_PARAMETER1, ACCESS
                                           	return
                                           
                                           	movlw	0x34
                                           	cpfseq	MIOS_PARAMETER2, ACCESS
                                           	return
                                           
                                           	movlw	0x1a
                                           	movwf	MIOS_PARAMETER1
                                           	return
                                           #endif
                                           
003aa2   ef1e     goto	0x2e3c              	goto	MIOS_TIMER_ReInit
003aa4   f017
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_HLP_GetBitANDMask code MIOS_HLP_GetBitANDMask
                                           _MIOS_HLP_GetBitANDMask
                                           	global	_MIOS_HLP_GetBitANDMask
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_HLP_GetBitORMask code MIOS_HLP_GetBitORMask
                                           _MIOS_HLP_GetBitORMask
                                           	global	_MIOS_HLP_GetBitORMask
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_HLP_16bitAddSaturate code
                                           _MIOS_HLP_16bitAddSaturate
                                           	global	_MIOS_HLP_16bitAddSaturate
                                           
003876   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003878   ffd9
00387a   6e0a     movwf	0xa, 0             	movwf	TMP5
                                           
00387c   cfdc     movff	0xfdc, 0xfe1       	movff	PREINC2, FSR1L
00387e   ffe1
003880   cfdc     movff	0xfdc, 0xfe2       	movff	PREINC2, FSR1H
003882   ffe2
003884   52dc     movf	0xdc, 0x1, 0        	movf	PREINC2, F
003886   cfdc     movff	0xfdc, 0x3         	movff	PREINC2, MIOS_PARAMETER1
003888   f003
00388a   cfdc     movff	0xfdc, 0x4         	movff	PREINC2, MIOS_PARAMETER2
00388c   f004
                                           
00388e   cfe6     movff	0xfe6, 0x6         	movff	POSTINC1, TMP1	; due to requirement that FSR1 is aligned to 16bit address
003890   f006
003892   cfe6     movff	0xfe6, 0x7         	movff	POSTINC1, TMP2
003894   f007
003896   ee10     lfsr	0x1, 0x6            	lfsr	FSR1, TMP1
003898   f006
                                           
00389a   500a     movf	0xa, 0, 0           	movf	TMP5, W
00389c   ecdc     call	0x2db8, 0           	call	MIOS_HLP_16bitAddSaturate
00389e   f016
0038a0   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
0038a2   ffd9
0038a4   cfdc     movff	0xfdc, 0xfe1       	movff	PREINC2, FSR1L
0038a6   ffe1
0038a8   cfdc     movff	0xfdc, 0xfe2       	movff	PREINC2, FSR1H
0038aa   ffe2
0038ac   c006     movff	0x6, 0xfe6         	movff	TMP1, POSTINC1
0038ae   ffe6
0038b0   c007     movff	0x7, 0xfe6         	movff	TMP2, POSTINC1
0038b2   ffe6
0038b4   0012     return	0                 	return
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_HLP_Dec2BCD code
                                           _MIOS_HLP_Dec2BCD
                                           	global	_MIOS_HLP_Dec2BCD
                                           
003b90   6e03     movwf	0x3, 0             	movwf	MIOS_PARAMETER1
003b92   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
003b94   ffd9
003b96   50dc     movf	0xdc, 0, 0          	movf	PREINC2, W
003b98   eff4     goto	0x2de8              	goto	MIOS_HLP_Dec2BCD
003b9a   f016
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_Delay code MIOS_Delay
                                           _MIOS_Delay
                                           	global	_MIOS_Delay
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_GPCounterGet code MIOS_GPCounterGet
                                           _MIOS_GPCounterGet
                                           	global	_MIOS_GPCounterGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_Reset code MIOS_Reset
                                           _MIOS_Reset
                                           	global	_MIOS_Reset
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_SystemResume code MIOS_SystemResume
                                           _MIOS_SystemResume
                                           	global	_MIOS_SystemResume
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_SystemSuspend code MIOS_SystemSuspend
                                           _MIOS_SystemSuspend
                                           	global	_MIOS_SystemSuspend
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_UserResume code MIOS_UserResume
                                           _MIOS_UserResume
                                           	global	_MIOS_UserResume
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_UserSuspend code MIOS_UserSuspend
                                           _MIOS_UserSuspend
                                           	global	_MIOS_UserSuspend
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_DIN_PinAutoRepeatEnable code MIOS_DIN_PinAutoRepeatEnable
                                           _MIOS_DIN_PinAutoRepeatEnable
                                           	global	_MIOS_DIN_PinAutoRepeatEnable
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_DIN_PinAutoRepeatDisable code MIOS_DIN_PinAutoRepeatDisable
                                           _MIOS_DIN_PinAutoRepeatDisable
                                           	global	_MIOS_DIN_PinAutoRepeatDisable
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_DIN_PinAutoRepeatGet code MIOS_DIN_PinAutoRepeatGet
                                           _MIOS_DIN_PinAutoRepeatGet
                                           	global	_MIOS_DIN_PinAutoRepeatGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_AIN_DynamicPrioSet code MIOS_AIN_DynamicPrioSet
                                           _MIOS_AIN_DynamicPrioSet
                                           	global	_MIOS_AIN_DynamicPrioSet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_AIN_DynamicPrioGet code MIOS_AIN_DynamicPrioGet
                                           _MIOS_AIN_DynamicPrioGet
                                           	global	_MIOS_AIN_DynamicPrioGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_AIN_LastPinsGet code MIOS_AIN_LastPinsGet
                                           _MIOS_AIN_LastPinsGet
                                           	global	_MIOS_AIN_LastPinsGet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_IIC_Start code MIOS_IIC_Start
                                           _MIOS_IIC_Start
                                           	global	_MIOS_IIC_Start
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_IIC_Stop code MIOS_IIC_Stop
                                           _MIOS_IIC_Stop
                                           	global	_MIOS_IIC_Stop
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_IIC_ByteSend code MIOS_IIC_ByteSend
                                           _MIOS_IIC_ByteSend
                                           	global	_MIOS_IIC_ByteSend
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_IIC_ByteReceive code MIOS_IIC_ByteReceive
                                           _MIOS_IIC_ByteReceive
                                           	global	_MIOS_IIC_ByteReceive
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_IIC_AckSend code MIOS_IIC_AckSend
                                           _MIOS_IIC_AckSend
                                           	global	_MIOS_IIC_AckSend
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_IIC_NakSend code MIOS_IIC_NakSend
                                           _MIOS_IIC_NakSend
                                           	global	_MIOS_IIC_NakSend
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_IIC_CtrlSet code MIOS_IIC_CtrlSet
                                           _MIOS_IIC_CtrlSet
                                           	global	_MIOS_IIC_CtrlSet
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_IIC_CtrlGet code MIOS_IIC_CtrlGet
                                           _MIOS_IIC_CtrlGet
                                           	global	_MIOS_IIC_CtrlGet
                                           
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;; ==========================================================================
                                           ;;  Special functions supported by the wrapper
                                           ;; ==========================================================================
                                           ;; --------------------------------------------------------------------------
                                           
                                           ;; --------------------------------------------------------------------------
                                           .MIOS_LCD_PrintCString code
                                           _MIOS_LCD_PrintCString
                                           	global	_MIOS_LCD_PrintCString
                                           
00390a   6ef6     movwf	0xf6, 0            	movwf	TBLPTRL
00390c   cfe9     movff	0xfe9, 0xfd9       	movff	FSR0L, FSR2L
00390e   ffd9
003910   cfdc     movff	0xfdc, 0xff7       	movff	PREINC2, TBLPTRH
003912   fff7
003914   cfdc     movff	0xfdc, 0xff8       	movff	PREINC2, TBLPTRU
003916   fff8
                                           _MIOS_LCD_PrintCStringLoop
003918   0009     tblrd	*+                 	tblrd*+
00391a   50f5     movf	0xf5, 0, 0          	movf	TABLAT, W
00391c   e003     bz	0x3924                	bz	_MIOS_LCD_PrintCString_End
00391e   ec94     call	0x2d28, 0           	call	MIOS_LCD_PrintChar
003920   f016
003922   d7fa     bra	0x3918               	bra	_MIOS_LCD_PrintCStringLoop
                                           _MIOS_LCD_PrintCString_End
003924   0012     return	0                 	return
                                           
                                           	END
                                           ;; BEGIN inserted by fixasm.pl
                                           ;; MPASM workarounds:
                                           BANKED  EQU 1
                                           ;; END inserted by fixasm.pl
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.5.0 #1020 (May  8 2005)
                                           ; This file generated Thu Jan 18 20:44:27 2007
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f452
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _PORTAbits
                                           	global _PORTBbits
                                           	global _PORTCbits
                                           	global _PORTDbits
                                           	global _PORTEbits
                                           	global _LATAbits
                                           	global _LATBbits
                                           	global _LATCbits
                                           	global _LATDbits
                                           	global _LATEbits
                                           	global _TRISAbits
                                           	global _TRISBbits
                                           	global _TRISCbits
                                           	global _TRISDbits
                                           	global _TRISEbits
                                           	global _PIE1bits
                                           	global _PIR1bits
                                           	global _IPR1bits
                                           	global _PIE2bits
                                           	global _PIR2bits
                                           	global _IPR2bits
                                           	global _EECON1bits
                                           	global _RCSTAbits
                                           	global _TXSTAbits
                                           	global _T3CONbits
                                           	global _CCP2CONbits
                                           	global _CCP1CONbits
                                           	global _ADCON1bits
                                           	global _ADCON0bits
                                           	global _SSPCON2bits
                                           	global _SSPCON1bits
                                           	global _SSPSTATbits
                                           	global _T2CONbits
                                           	global _T1CONbits
                                           	global _RCONbits
                                           	global _WDTCONbits
                                           	global _LVDCONbits
                                           	global _OSCCONbits
                                           	global _T0CONbits
                                           	global _STATUSbits
                                           	global _INTCON3bits
                                           	global _INTCON2bits
                                           	global _INTCONbits
                                           	global _STKPTRbits
                                           	global _PORTA
                                           	global _PORTB
                                           	global _PORTC
                                           	global _PORTD
                                           	global _PORTE
                                           	global _LATA
                                           	global _LATB
                                           	global _LATC
                                           	global _LATD
                                           	global _LATE
                                           	global _TRISA
                                           	global _TRISB
                                           	global _TRISC
                                           	global _TRISD
                                           	global _TRISE
                                           	global _PIE1
                                           	global _PIR1
                                           	global _IPR1
                                           	global _PIE2
                                           	global _PIR2
                                           	global _IPR2
                                           	global _EECON1
                                           	global _EECON2
                                           	global _EEDATA
                                           	global _EEADR
                                           	global _RCSTA
                                           	global _TXSTA
                                           	global _TXREG
                                           	global _RCREG
                                           	global _SPBRG
                                           	global _T3CON
                                           	global _TMR3L
                                           	global _TMR3H
                                           	global _CCP2CON
                                           	global _CCPR2L
                                           	global _CCPR2H
                                           	global _CCP1CON
                                           	global _CCPR1L
                                           	global _CCPR1H
                                           	global _ADCON1
                                           	global _ADCON0
                                           	global _ADRESL
                                           	global _ADRESH
                                           	global _SSPCON2
                                           	global _SSPCON1
                                           	global _SSPSTAT
                                           	global _SSPADD
                                           	global _SSPBUF
                                           	global _T2CON
                                           	global _PR2
                                           	global _TMR2
                                           	global _T1CON
                                           	global _TMR1L
                                           	global _TMR1H
                                           	global _RCON
                                           	global _WDTCON
                                           	global _LVDCON
                                           	global _OSCCON
                                           	global _T0CON
                                           	global _TMR0L
                                           	global _TMR0H
                                           	global _STATUS
                                           	global _FSR2L
                                           	global _FSR2H
                                           	global _PLUSW2
                                           	global _PREINC2
                                           	global _POSTDEC2
                                           	global _POSTINC2
                                           	global _INDF2
                                           	global _BSR
                                           	global _FSR1L
                                           	global _FSR1H
                                           	global _PLUSW1
                                           	global _PREINC1
                                           	global _POSTDEC1
                                           	global _POSTINC1
                                           	global _INDF1
                                           	global _WREG
                                           	global _FSR0L
                                           	global _FSR0H
                                           	global _PLUSW0
                                           	global _PREINC0
                                           	global _POSTDEC0
                                           	global _POSTINC0
                                           	global _INDF0
                                           	global _INTCON3
                                           	global _INTCON2
                                           	global _INTCON
                                           	global _PRODL
                                           	global _PRODH
                                           	global _TABLAT
                                           	global _TBLPTRL
                                           	global _TBLPTRH
                                           	global _TBLPTRU
                                           	global _PCL
                                           	global _PCLATH
                                           	global _PCLATU
                                           	global _STKPTR
                                           	global _TOSL
                                           	global _TOSH
                                           	global _TOSU
                                           
                                           
                                           ustat_pic18f452_00	udata	0X0F80
                                           
                                           _PORTA	res	0
                                           _PORTAbits	res	1
                                           
                                           _PORTB	res	0
                                           _PORTBbits	res	1
                                           
                                           _PORTC	res	0
                                           _PORTCbits	res	1
                                           
                                           _PORTD	res	0
                                           _PORTDbits	res	1
                                           
                                           _PORTE	res	0
                                           _PORTEbits	res	1
                                           
                                           
                                           ustat_pic18f452_01	udata	0X0F89
                                           
                                           _LATA	res	0
                                           _LATAbits	res	1
                                           
                                           _LATB	res	0
                                           _LATBbits	res	1
                                           
                                           _LATC	res	0
                                           _LATCbits	res	1
                                           
                                           _LATD	res	0
                                           _LATDbits	res	1
                                           
                                           _LATE	res	0
                                           _LATEbits	res	1
                                           
                                           
                                           ustat_pic18f452_02	udata	0X0F92
                                           
                                           _TRISA	res	0
                                           _TRISAbits	res	1
                                           
                                           _TRISB	res	0
                                           _TRISBbits	res	1
                                           
                                           _TRISC	res	0
                                           _TRISCbits	res	1
                                           
                                           _TRISD	res	0
                                           _TRISDbits	res	1
                                           
                                           _TRISE	res	0
                                           _TRISEbits	res	1
                                           
                                           
                                           ustat_pic18f452_03	udata	0X0F9D
                                           
                                           _PIE1	res	0
                                           _PIE1bits	res	1
                                           
                                           _PIR1	res	0
                                           _PIR1bits	res	1
                                           
                                           _IPR1	res	0
                                           _IPR1bits	res	1
                                           
                                           _PIE2	res	0
                                           _PIE2bits	res	1
                                           
                                           _PIR2	res	0
                                           _PIR2bits	res	1
                                           
                                           _IPR2	res	0
                                           _IPR2bits	res	1
                                           
                                           
                                           ustat_pic18f452_04	udata	0X0FA6
                                           
                                           _EECON1	res	0
                                           _EECON1bits	res	1
                                           _EECON2	res	1
                                           _EEDATA	res	1
                                           _EEADR	res	1
                                           
                                           
                                           ustat_pic18f452_05	udata	0X0FAB
                                           
                                           _RCSTA	res	0
                                           _RCSTAbits	res	1
                                           
                                           _TXSTA	res	0
                                           _TXSTAbits	res	1
                                           _TXREG	res	1
                                           _RCREG	res	1
                                           _SPBRG	res	1
                                           
                                           
                                           ustat_pic18f452_06	udata	0X0FB1
                                           
                                           _T3CON	res	0
                                           _T3CONbits	res	1
                                           _TMR3L	res	1
                                           _TMR3H	res	1
                                           
                                           
                                           ustat_pic18f452_07	udata	0X0FBA
                                           
                                           _CCP2CON	res	0
                                           _CCP2CONbits	res	1
                                           _CCPR2L	res	1
                                           _CCPR2H	res	1
                                           
                                           _CCP1CON	res	0
                                           _CCP1CONbits	res	1
                                           _CCPR1L	res	1
                                           _CCPR1H	res	1
                                           
                                           
                                           ustat_pic18f452_08	udata	0X0FC1
                                           
                                           _ADCON1	res	0
                                           _ADCON1bits	res	1
                                           
                                           _ADCON0	res	0
                                           _ADCON0bits	res	1
                                           _ADRESL	res	1
                                           _ADRESH	res	1
                                           
                                           _SSPCON2	res	0
                                           _SSPCON2bits	res	1
                                           
                                           _SSPCON1	res	0
                                           _SSPCON1bits	res	1
                                           
                                           _SSPSTAT	res	0
                                           _SSPSTATbits	res	1
                                           _SSPADD	res	1
                                           _SSPBUF	res	1
                                           
                                           _T2CON	res	0
                                           _T2CONbits	res	1
                                           _PR2	res	1
                                           _TMR2	res	1
                                           
                                           _T1CON	res	0
                                           _T1CONbits	res	1
                                           _TMR1L	res	1
                                           _TMR1H	res	1
                                           
                                           _RCON	res	0
                                           _RCONbits	res	1
                                           
                                           _WDTCON	res	0
                                           _WDTCONbits	res	1
                                           
                                           _LVDCON	res	0
                                           _LVDCONbits	res	1
                                           
                                           _OSCCON	res	0
                                           _OSCCONbits	res	1
                                           
                                           
                                           ustat_pic18f452_09	udata	0X0FD5
                                           
                                           _T0CON	res	0
                                           _T0CONbits	res	1
                                           _TMR0L	res	1
                                           _TMR0H	res	1
                                           
                                           _STATUS	res	0
                                           _STATUSbits	res	1
                                           _FSR2L	res	1
                                           _FSR2H	res	1
                                           _PLUSW2	res	1
                                           _PREINC2	res	1
                                           _POSTDEC2	res	1
                                           _POSTINC2	res	1
                                           _INDF2	res	1
                                           _BSR	res	1
                                           _FSR0L	res	1
                                           _FSR0H	res	1
                                           _PLUSW0	res	1
                                           _PREINC0	res	1
                                           _POSTDEC0	res	1
                                           _POSTINC0	res	1
                                           _INDF0	res	1
                                           _WREG	res	1
                                           _FSR1L	res	1
                                           _FSR1H	res	1
                                           _PLUSW1	res	1
                                           _PREINC1	res	1
                                           _POSTDEC1	res	1
                                           _POSTINC1	res	1
                                           _INDF1	res	1
                                           
                                           _INTCON3	res	0
                                           _INTCON3bits	res	1
                                           
                                           _INTCON2	res	0
                                           _INTCON2bits	res	1
                                           
                                           _INTCON	res	0
                                           _INTCONbits	res	1
                                           _PRODL	res	1
                                           _PRODH	res	1
                                           _TABLAT	res	1
                                           _TBLPTRL	res	1
                                           _TBLPTRH	res	1
                                           _TBLPTRU	res	1
                                           _PCL	res	1
                                           _PCLATH	res	1
                                           _PCLATU	res	1
                                           
                                           _STKPTR	res	0
                                           _STKPTRbits	res	1
                                           _TOSL	res	1
                                           _TOSH	res	1
                                           _TOSU	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           
                                           
                                           ; Statistics:
                                           ; code size:	   -1 (0xffffffff) bytes (3276800.00%)
                                           ;           	2147483647 (0x7fffffff) words
                                           ; udata size:	  101 (0x0065) bytes (7.89%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
                                           ;
                                           ; Scan Matrix Driver, simple version
                                           ; 
                                           ; This driver demonstrates how to scan a matrix of up to 8x8 buttons/keys
                                           ; by using one DOUT and one DIN shift register
                                           ; 
                                           ; This include file provides following functions:
                                           ;
                                           ;    o SM_Init:         initializes the scan matrix
                                           ;                       should be called from USER_Init
                                           ;
                                           ;    o SM_PrepareCol:   prepares the DOUT register to drive a column
                                           ;                       should be called from USER_SR_Service_Prepare
                                           ;
                                           ;    o SM_GetRow:       gets the DIN values of the selected column
                                           ;                       should be called from USER_SR_Service_Finish
                                           ;
                                           ;    o SM_ButtonHandler: to be called from USER_Tick
                                           ;
                                           ;
                                           ;    Following function is located in main.c:
                                           ;    o SM_NotifyToggle: called from SM_ButtonHandler on button changes
                                           ;
                                           ;
                                           ; Define the shift register which drives the column here
                                           ; we are counting from zero! The first DOUT register is 0x00, the second 0x01, etc...
                                           #define SM_COLUMN_DOUT	0x00
                                           ;
                                           ; Define the shift register which gets the row values here
                                           ; we are counting from zero! The first DIN register is 0x00, the second 0x01, etc...
                                           #define SM_ROW_DIN	0x00
                                           ;
                                           ; set this constant to 1 if the colums/rows are swapped (means: the cathodes and
                                           ; not the anodes of the diodes are connected together)
                                           #define SM_SWAP_CR	0
                                           ;
                                           ; ==========================================================================
                                           ;
                                           ;  Copyright 2006 Thorsten Klose (tk@midibox.org)
                                           ;  Licensed for personal non-commercial use only.
                                           ;  All other rights reserved.
                                           ; 
                                           ; ==========================================================================
                                           
                                           	list	p=18f452
                                           	radix	dec
                                           #include "mios_wrapper/mios.h"
                                           ;
                                           ; MIOS Definitions file
                                           ;
                                           ; ==========================================================================
                                           ;
                                           ;  Copyright 1998-2006 Thorsten Klose (tk@midibox.org)
                                           ;  Licensed for personal non-commercial use only.
                                           ;  All other rights reserved.
                                           ; 
                                           ; ==========================================================================
                                           
                                            
                                           ;; ==========================================================================
                                           ;;  Select the device here
                                           ;;     0: PIC18F452   (writable range: 0x0400-0x7fff)
                                           ;;     1: PIC18F4620  (writable range: 0x0400-0xffff)
                                           ;;     2: PIC18F4520  (writable range: 0x0400-0x7fff)
                                           ;; ==========================================================================
                                           
                                           #define PIC_DERIVATIVE_TYPE	0
                                           
                                           ;; ==========================================================================
                                           ;;  Assembler directives & device specific include file
                                           ;; ==========================================================================
                                           
                                           #if PIC_DERIVATIVE_TYPE == 0
                                           	LIST P=PIC18F452, R=DEC
                                           #include <p18f452.inc>
                                                   LIST
                                           ; P18F452.INC  Standard Header File, Version 1.4   Microchip Technology, Inc.
                                                   NOLIST
                                           #endif
                                           
                                           #if PIC_DERIVATIVE_TYPE == 1
                                           	LIST P=PIC18F4620, R=DEC
                                           #include <p18f4620.inc>
                                           #endif
                                           	
                                           #if PIC_DERIVATIVE_TYPE == 2
                                           	LIST P=PIC18F4520, R=DEC
                                           #include <p18f4520.inc>
                                           #endif
                                           
                                           ;; ==========================================================================
                                           ;;  General constants
                                           ;; ==========================================================================
                                           
                                           ;; used by MIOS_MIDI_Interface*
                                           MIOS_MIDI_INTERFACE_COMMON	EQU	0x00
                                           MIOS_MIDI_INTERFACE_TO_HOST	EQU	0x01
                                           
                                           ;; used by MIOS_MIDI_Merger*
                                           MIOS_MIDI_MERGER_DISABLED	EQU	0x00
                                           MIOS_MIDI_MERGER_ENABLED	EQU	0x01
                                           MIOS_MIDI_MERGER_MBLINK_EP	EQU	0x02
                                           MIOS_MIDI_MERGER_MBLINK_FP	EQU	0x03
                                           
                                           ;; used by MIOS_ENC_PIN_TABLE
                                           MIOS_ENC_MODE_NON_DETENTED	EQU	0x00
                                           MIOS_ENC_MODE_DETENTED		EQU	0x80
                                           MIOS_ENC_MODE_DETENTED2		EQU	0x81
                                           
                                           ;; used by MIOS_ENC_Speed*
                                           MIOS_ENC_SPEED_SLOW		EQU	0
                                           MIOS_ENC_SPEED_NORMAL		EQU	1
                                           MIOS_ENC_SPEED_FAST		EQU	2
                                           
                                           ;; used by MIOS_LCD_Type*
                                           MIOS_LCD_TYPE_CLCD		EQU	0x00
                                           MIOS_LCD_TYPE_GLCD0		EQU	0x01
                                           MIOS_LCD_TYPE_GLCD1		EQU	0x02
                                           MIOS_LCD_TYPE_GLCD2		EQU	0x03
                                           MIOS_LCD_TYPE_GLCD3		EQU	0x04
                                           MIOS_LCD_TYPE_GLCD4		EQU	0x05
                                           MIOS_LCD_TYPE_MLCD		EQU	0x06
                                           MIOS_LCD_TYPE_GLCD_CUSTOM	EQU	0x07
                                           
                                           ;; location of default 5x8 font for graphical displays
                                           MIOS_GLCD_FONT			EQU	0x7cfc
                                           
                                           ;; general config flags (never overwrite this flags directly!!!)
                                           MIOS_BOX_CFG0_LCD_TYPE0		EQU 0	; selects LCD type, bit 0
                                           MIOS_BOX_CFG0_LCD_TYPE1		EQU 1	; selects LCD type, bit 1
                                           MIOS_BOX_CFG0_LCD_TYPE2		EQU 2	; selects LCD type, bit 2
                                           MIOS_BOX_CFG0_USE_GLCD		EQU 3	; if 1, graphical LCD is connected
                                           MIOS_BOX_CFG0_MERGER		EQU 4	; if 1, MIDI merger is enabled
                                           MIOS_BOX_CFG0_MBLINK		EQU 5	; if 1, MIDIbox Link is enabled
                                           MIOS_BOX_CFG0_TO_HOST		EQU 6	; if 1, MIDI interface will run with 38400 baud instead of 31250
                                           MIOS_BOX_CFG0_20MHz		EQU 7	; if 1, it is assumed that box is running with 20 MHz, else with 40 MHz
                                           
                                           MIOS_BOX_CFG1_BS_A0		EQU 0	; A0 of BankStick (never change the bit position)
                                           MIOS_BOX_CFG1_BS_A1		EQU 1	; A1 of BankStick (never change the bit position)
                                           MIOS_BOX_CFG1_BS_A2		EQU 2	; A2 of BankStick (never change the bit position)
                                           MIOS_BOX_CFG1_BS_DIS_VERIFY	EQU 3	; if 1, writes to the BankStick will not be verified
                                           MIOS_BOX_CFG1_IIC_STRETCH_CLK	EQU 4	; if 1, IIC clock stretching enabled
                                           
                                           ;; general status flags (never overwrite this flags directly!!!)
                                           MIOS_BOX_STAT_BS_AVAILABLE	EQU 0	; if 1, BankStick is available
                                           MIOS_BOX_STAT_MBLINK_TUNNEL_PASS EQU 1  ; if 1, a MBLinked event will be tunnled
                                           MIOS_BOX_STAT_SUSPEND_ALL       EQU 2   ; if 1, all system and user tasks are suspended
                                           MIOS_BOX_STAT_SUSPEND_USER      EQU 3   ; if 1, all user tasks are suspended
                                           MIOS_BOX_STAT_AUTOREPEAT	EQU 4	; if 1, start the auto-repeat handler
                                           MIOS_BOX_STAT_MLCD_TRANSFER	EQU 5	; if 1, a transfer to the MLCD has been started
                                           MIOS_BOX_STAT_FERR		EQU 6	; if 1, a frame error happened during MIDI receive
                                           
                                           ;; ==========================================================================
                                           ;;  MIOS Special Function Registers
                                           ;; ==========================================================================
                                           
                                           MIOS_BOX_CFG0	EQU	0x000
                                           MIOS_BOX_CFG1	EQU	0x001
                                           MIOS_BOX_STAT	EQU	0x002
                                           MIOS_PARAMETER1	EQU	0x003
                                           MIOS_PARAMETER2	EQU	0x004
                                           MIOS_PARAMETER3	EQU	0x005
                                           
                                           ;; ==========================================================================
                                           ;;  temporary registers for main programs
                                           ;; ==========================================================================
                                           TMP1		EQU	0x006
                                           TMP2		EQU	0x007
                                           TMP3		EQU	0x008
                                           TMP4		EQU	0x009
                                           TMP5		EQU	0x00a
                                           
                                           ;; ==========================================================================
                                           ;;  temporary registers for IRQs
                                           ;; ==========================================================================
                                           IRQ_TMP1	EQU	0x00b
                                           IRQ_TMP2	EQU	0x00c
                                           IRQ_TMP3	EQU	0x00d
                                           IRQ_TMP4	EQU	0x00e
                                           IRQ_TMP5	EQU	0x00f
                                           
                                           ;; ==========================================================================
                                           ;;  free memory space for user application:
                                           ;; ==========================================================================
                                           	;; 0x010-0x37f
                                           
                                           ;; ==========================================================================
                                           ;;  MIOS System Registers -- not defined here -- 
                                           ;;  never use these memory locations!
                                           ;; ==========================================================================
                                           	;; 0x380-0x6ff
                                           
                                           ;; ==========================================================================
                                           ;;  MIOS System Registers for custom LCD driver
                                           ;; ==========================================================================
                                           MIOS_GLCD_BUFFER	EQU	0x570	; note: the buffer must be located at ...0-...7
                                           MIOS_LCD_OPTION1	EQU	0x578	; contains the first LCD option given by MIOS_LCD_TypeSet
                                           MIOS_LCD_OPTION2	EQU	0x579	; contains the second LCD option given by MIOS_LCD_TypeSet
                                           MIOS_LCD_CURSOR_POS	EQU	0x57a	; the current cursor pos of characters (GLCD: multiplied by width)
                                           MIOS_GLCD_GCURSOR_X	EQU	0x57b	; for GLCDs: the current X position of graphical cursor
                                           MIOS_GLCD_GCURSOR_Y	EQU	0x57c	; for GLCDs: the current Y position of graphical cursor
                                           MIOS_GLCD_FONT_WIDTH	EQU	0x57d	; for GLCDs: the fontwidth given by MIOS_GLCD_FontInit
                                           MIOS_GLCD_FONT_HEIGHT	EQU	0x57e	; for GLCDs: the fontheight given by MIOS_GLCD_FontInit
                                           MIOS_GLCD_FONT_X0	EQU	0x57f	; for GLCDs: the first byte within a char entry
                                           MIOS_GLCD_FONT_OFFSET	EQU	0x580	; for GLCDs: the byte offset between the characters
                                           MIOS_GLCD_FONT_PTRL	EQU	0x581	; for GLCDs: pointer to the character table, low-byte
                                           MIOS_GLCD_FONT_PTRH	EQU	0x582	; for GLCDs: pointer to the character table, high-byte
                                           MIOS_LCD_TIMEOUT0	EQU	0x583   ; can be used for timeout loops
                                           MIOS_LCD_TIMEOUT1	EQU	0x584   ; can be used for timeout loops
                                           MIOS_GLCD_TMP1		EQU	0x585   ; can be used as temporary buffer
                                           MIOS_GLCD_TMP2		EQU	0x586   ; can be used as temporary buffer
                                           MIOS_GLCD_TMP3		EQU	0x587   ; can be used as temporary buffer
                                           MIOS_GLCD_TMP4		EQU	0x588   ; can be used as temporary buffer
                                           MIOS_LCD_Y0_OFFSET	EQU	0x589   ; Y0 offset of LCD
                                           MIOS_LCD_Y1_OFFSET	EQU	0x58a   ; Y1 offset of LCD
                                           MIOS_LCD_Y2_OFFSET	EQU	0x58b   ; Y2 offset of LCD
                                           MIOS_LCD_Y3_OFFSET	EQU	0x58c   ; Y3 offset of LCD
                                           MIOS_LCD_CURSOR_POS_REAL EQU	0x58d	; unmapped cursor position which has been set with MIOS_LCD_CursorSet
                                           #include "mios_wrapper/mios_vectors.inc"
                                           MIOS_MIDI_BeginStream                   EQU	0x2c00
                                           MIOS_MIDI_DeviceIDAutoSet               EQU	0x2c04
                                           MIOS_MIDI_DeviceIDGet                   EQU	0x2c08
                                           MIOS_MIDI_DeviceIDSet                   EQU	0x2c0c
                                           MIOS_MIDI_EndStream                     EQU	0x2c10
                                           MIOS_MIDI_Init                          EQU	0x2c14
                                           MIOS_MIDI_InterfaceAutoSet              EQU	0x2c18
                                           MIOS_MIDI_InterfaceGet                  EQU	0x2c1c
                                           MIOS_MIDI_InterfaceSet                  EQU	0x2c20
                                           MIOS_MIDI_MergerGet                     EQU	0x2c24
                                           MIOS_MIDI_MergerSet                     EQU	0x2c28
                                           MIOS_MIDI_RxBufferFree                  EQU	0x2c2c
                                           MIOS_MIDI_RxBufferGet                   EQU	0x2c30
                                           MIOS_MIDI_RxBufferPut                   EQU	0x2c34
                                           MIOS_MIDI_RxBufferUsed                  EQU	0x2c38
                                           MIOS_MIDI_TxBufferFlush                 EQU	0x2c3c
                                           MIOS_MIDI_TxBufferFree                  EQU	0x2c40
                                           MIOS_MIDI_TxBufferGet                   EQU	0x2c44
                                           MIOS_MIDI_TxBufferPut                   EQU	0x2c48
                                           MIOS_MIDI_TxBufferUsed                  EQU	0x2c4c
                                           MIOS_MPROC_MergerDisable                EQU	0x2c50
                                           MIOS_MPROC_MergerEnable                 EQU	0x2c54
                                           MIOS_MPROC_MergerGet                    EQU	0x2c58
                                           MIOS_AIN_DeadbandGet                    EQU	0x2c5c
                                           MIOS_AIN_DeadbandSet                    EQU	0x2c60
                                           MIOS_AIN_Muxed                          EQU	0x2c64
                                           MIOS_AIN_NumberGet                      EQU	0x2c68
                                           MIOS_AIN_NumberSet                      EQU	0x2c6c
                                           MIOS_AIN_Pin7bitGet                     EQU	0x2c70
                                           MIOS_AIN_PinGet                         EQU	0x2c74
                                           MIOS_AIN_PinLSBGet                      EQU	0x2c78
                                           MIOS_AIN_PinMSBGet                      EQU	0x2c7c
                                           MIOS_AIN_UnMuxed                        EQU	0x2c80
                                           MIOS_MF_PWM_DutyCycleDownGet            EQU	0x2c84
                                           MIOS_MF_PWM_DutyCycleDownSet            EQU	0x2c88
                                           MIOS_MF_PWM_DutyCycleUpGet              EQU	0x2c8c
                                           MIOS_MF_PWM_DutyCycleUpSet              EQU	0x2c90
                                           MIOS_MF_DeadbandGet                     EQU	0x2c94
                                           MIOS_MF_DeadbandSet                     EQU	0x2c98
                                           MIOS_MF_Disable                         EQU	0x2c9c
                                           MIOS_MF_Enable                          EQU	0x2ca0
                                           MIOS_MF_FaderMove                       EQU	0x2ca4
                                           MIOS_MF_SuspendDisable                  EQU	0x2ca8
                                           MIOS_MF_SuspendEnable                   EQU	0x2cac
                                           MIOS_MF_SuspendGet                      EQU	0x2cb0
                                           MIOS_DIN_PinGet                         EQU	0x2cb4
                                           MIOS_DIN_SRGet                          EQU	0x2cb8
                                           MIOS_DOUT_PinGet                        EQU	0x2cbc
                                           MIOS_DOUT_PinSet                        EQU	0x2cc0
                                           MIOS_DOUT_PinSet0                       EQU	0x2cc4
                                           MIOS_DOUT_PinSet1                       EQU	0x2cc8
                                           MIOS_DOUT_SRGet                         EQU	0x2ccc
                                           MIOS_DOUT_SRSet                         EQU	0x2cd0
                                           MIOS_ENC_Abs7bitAdd                     EQU	0x2cd4
                                           MIOS_ENC_Abs7bitGet                     EQU	0x2cd8
                                           MIOS_ENC_Abs7bitSet                     EQU	0x2cdc
                                           MIOS_ENC_NumberGet                      EQU	0x2ce0
                                           MIOS_ENC_SpeedGet                       EQU	0x2ce4
                                           MIOS_ENC_SpeedSet                       EQU	0x2ce8
                                           MIOS_SRIO_NumberGet                     EQU	0x2cec
                                           MIOS_SRIO_NumberSet                     EQU	0x2cf0
                                           MIOS_SRIO_TS_SensitivityGet             EQU	0x2cf4
                                           MIOS_SRIO_TS_SensitivitySet             EQU	0x2cf8
                                           MIOS_SRIO_UpdateFrqGet                  EQU	0x2cfc
                                           MIOS_SRIO_UpdateFrqSet                  EQU	0x2d00
                                           MIOS_LCD_Clear                          EQU	0x2d04
                                           MIOS_LCD_Cmd                            EQU	0x2d08
                                           MIOS_LCD_CursorGet                      EQU	0x2d0c
                                           MIOS_LCD_CursorSet                      EQU	0x2d10
                                           MIOS_LCD_Data                           EQU	0x2d14
                                           MIOS_LCD_Init                           EQU	0x2d18
                                           MIOS_LCD_PrintBCD1	                EQU	0x2d1c
                                           MIOS_LCD_PrintBCD2                      EQU	0x2d20
                                           MIOS_LCD_PrintBCD3                      EQU	0x2d24
                                           MIOS_LCD_PrintChar	                EQU	0x2d28
                                           MIOS_LCD_PrintHex1	                EQU	0x2d2c
                                           MIOS_LCD_PrintHex2                      EQU	0x2d30
                                           MIOS_LCD_PrintMessage                   EQU	0x2d34
                                           MIOS_LCD_PrintPreconfString             EQU	0x2d38
                                           MIOS_LCD_PrintString                    EQU	0x2d3c
                                           MIOS_LCD_TypeAutoSet                    EQU	0x2d40
                                           MIOS_LCD_TypeGet                        EQU	0x2d44
                                           MIOS_LCD_TypeSet                        EQU	0x2d48
                                           MIOS_LCD_YAddressGet                    EQU	0x2d4c
                                           MIOS_LCD_YAddressSet                    EQU	0x2d50
                                           MIOS_GLCD_FontInit                      EQU	0x2d54
                                           MIOS_GLCD_GCursorGet                    EQU	0x2d58
                                           MIOS_GLCD_GCursorSet                    EQU	0x2d5c
                                           MIOS_EEPROM_Read                        EQU	0x2d60
                                           MIOS_EEPROM_Write                       EQU	0x2d64
                                           MIOS_FLASH_Read                         EQU	0x2d68
                                           MIOS_FLASH_Write                        EQU	0x2d6c
                                           MIOS_BANKSTICK_Read                     EQU	0x2d70
                                           MIOS_BANKSTICK_Write                    EQU	0x2d74
                                           MIOS_TIMER_Init                         EQU	0x2d78
                                           MIOS_TIMER_Start                        EQU	0x2d7c
                                           MIOS_TIMER_Stop                         EQU	0x2d80
                                           MIOS_HLP_AddressFromTable               EQU	0x2d84
                                           MIOS_HLP_GetBitANDMask                  EQU	0x2d88
                                           MIOS_HLP_GetBitORMask                   EQU	0x2d8c
                                           MIOS_HLP_GetIndex_2bytes                EQU	0x2d90
                                           MIOS_HLP_GetIndex_4bytes                EQU	0x2d94
                                           MIOS_HLP_IndirectJump                   EQU	0x2d98
                                           MIOS_Delay                              EQU	0x2d9c
                                           MIOS_GPCounterGet                       EQU	0x2da0
                                           MIOS_Reset                              EQU	0x2da4
                                           MIOS_SystemResume                       EQU	0x2da8
                                           MIOS_SystemSuspend                      EQU	0x2dac
                                           MIOS_UserResume                         EQU	0x2db0
                                           MIOS_UserSuspend                        EQU	0x2db4
                                           MIOS_HLP_16bitAddSaturate		EQU	0x2db8
                                           MIOS_DIN_PinAutoRepeatEnable		EQU	0x2dbc
                                           MIOS_DIN_PinAutoRepeatDisable		EQU	0x2dc0
                                           MIOS_DIN_PinAutoRepeatGet		EQU	0x2dc4
                                           MIOS_CLCD_SpecialCharInit		EQU	0x2dc8
                                           MIOS_CLCD_SpecialCharsInit		EQU	0x2dcc
                                           MIOS_AIN_DynamicPrioSet			EQU	0x2dd0
                                           MIOS_AIN_DynamicPrioGet			EQU	0x2dd4
                                           MIOS_AIN_LastPinsGet			EQU	0x2dd8
                                           MIOS_BANKSTICK_CtrlSet			EQU	0x2ddc
                                           MIOS_BANKSTICK_CtrlGet			EQU	0x2de0
                                           MIOS_BANKSTICK_WritePage		EQU	0x2de4
                                           MIOS_HLP_Dec2BCD			EQU	0x2de8
                                           MIOS_LCD_PrintBCD4			EQU	0x2dec
                                           MIOS_LCD_PrintBCD5                      EQU	0x2df0
                                           MIOS_LCD_MessageStart			EQU	0x2df4
                                           MIOS_LCD_MessageStop			EQU	0x2df8
                                           MIOS_MF_PWM_PeriodGet                   EQU	0x2dfc
                                           MIOS_MF_PWM_PeriodSet                   EQU	0x2e00
                                           MIOS_IIC_Start				EQU	0x2e04
                                           MIOS_IIC_Stop				EQU	0x2e08
                                           MIOS_IIC_ByteSend			EQU	0x2e0c
                                           MIOS_IIC_ByteReceive			EQU	0x2e10
                                           MIOS_IIC_AckSend			EQU	0x2e14
                                           MIOS_IIC_NakSend			EQU	0x2e18
                                           MIOS_IIC_CtrlSet			EQU	0x2e1c
                                           MIOS_IIC_CtrlGet			EQU	0x2e20
                                           MIOS_SRIO_DebounceSet			EQU	0x2e24
                                           MIOS_SRIO_DebounceGet			EQU	0x2e28
                                           MIOS_MF_TouchDetectionReset		EQU	0x2e2c
                                           MIOS_BANKSTICK_ReadPage			EQU	0x2e30
                                           MIOS_EEPROM_ReadPage			EQU	0x2e34
                                           MIOS_EEPROM_WritePage			EQU	0x2e38
                                           MIOS_TIMER_ReInit			EQU	0x2e3c
                                           MIOS_RESERVED_144                       EQU	0x2e40
                                           MIOS_RESERVED_145                       EQU	0x2e44
                                           MIOS_RESERVED_146                       EQU	0x2e48
                                           MIOS_RESERVED_147                       EQU	0x2e4c
                                           MIOS_RESERVED_148                       EQU	0x2e50
                                           MIOS_RESERVED_149                       EQU	0x2e54
                                           MIOS_RESERVED_150                       EQU	0x2e58
                                           MIOS_RESERVED_151                       EQU	0x2e5c
                                           MIOS_RESERVED_152                       EQU	0x2e60
                                           MIOS_RESERVED_153                       EQU	0x2e64
                                           MIOS_RESERVED_154                       EQU	0x2e68
                                           MIOS_RESERVED_155                       EQU	0x2e6c
                                           MIOS_RESERVED_156                       EQU	0x2e70
                                           MIOS_RESERVED_157                       EQU	0x2e74
                                           MIOS_RESERVED_158                       EQU	0x2e78
                                           MIOS_RESERVED_159                       EQU	0x2e7c
                                           MIOS_RESERVED_160                       EQU	0x2e80
                                           MIOS_RESERVED_161                       EQU	0x2e84
                                           MIOS_RESERVED_162                       EQU	0x2e88
                                           MIOS_RESERVED_163                       EQU	0x2e8c
                                           MIOS_RESERVED_164                       EQU	0x2e90
                                           MIOS_RESERVED_165                       EQU	0x2e94
                                           MIOS_RESERVED_166                       EQU	0x2e98
                                           MIOS_RESERVED_167                       EQU	0x2e9c
                                           MIOS_RESERVED_168                       EQU	0x2ea0
                                           MIOS_RESERVED_169                       EQU	0x2ea4
                                           MIOS_RESERVED_170                       EQU	0x2ea8
                                           MIOS_RESERVED_171                       EQU	0x2eac
                                           MIOS_RESERVED_172                       EQU	0x2eb0
                                           MIOS_RESERVED_173                       EQU	0x2eb4
                                           MIOS_RESERVED_174                       EQU	0x2eb8
                                           MIOS_RESERVED_175                       EQU	0x2ebc
                                           MIOS_RESERVED_176                       EQU	0x2ec0
                                           MIOS_RESERVED_177                       EQU	0x2ec4
                                           MIOS_RESERVED_178                       EQU	0x2ec8
                                           MIOS_RESERVED_179                       EQU	0x2ecc
                                           MIOS_RESERVED_180                       EQU	0x2ed0
                                           MIOS_RESERVED_181                       EQU	0x2ed4
                                           MIOS_RESERVED_182                       EQU	0x2ed8
                                           MIOS_RESERVED_183                       EQU	0x2edc
                                           MIOS_RESERVED_184                       EQU	0x2ee0
                                           MIOS_RESERVED_185                       EQU	0x2ee4
                                           MIOS_RESERVED_186                       EQU	0x2ee8
                                           MIOS_RESERVED_187                       EQU	0x2eec
                                           MIOS_RESERVED_188                       EQU	0x2ef0
                                           MIOS_RESERVED_189                       EQU	0x2ef4
                                           MIOS_RESERVED_190                       EQU	0x2ef8
                                           MIOS_RESERVED_191                       EQU	0x2efc
                                           MIOS_RESERVED_192                       EQU	0x2f00
                                           MIOS_RESERVED_193                       EQU	0x2f04
                                           MIOS_RESERVED_194                       EQU	0x2f08
                                           MIOS_RESERVED_195                       EQU	0x2f0c
                                           MIOS_RESERVED_196                       EQU	0x2f10
                                           MIOS_RESERVED_197                       EQU	0x2f14
                                           MIOS_RESERVED_198                       EQU	0x2f18
                                           MIOS_RESERVED_199                       EQU	0x2f1c
                                           MIOS_RESERVED_200                       EQU	0x2f20
                                           MIOS_RESERVED_201                       EQU	0x2f24
                                           MIOS_RESERVED_202                       EQU	0x2f28
                                           MIOS_RESERVED_203                       EQU	0x2f2c
                                           MIOS_RESERVED_204                       EQU	0x2f30
                                           MIOS_RESERVED_205                       EQU	0x2f34
                                           MIOS_RESERVED_206                       EQU	0x2f38
                                           MIOS_RESERVED_207                       EQU	0x2f3c
                                           MIOS_RESERVED_208                       EQU	0x2f40
                                           MIOS_RESERVED_209                       EQU	0x2f44
                                           MIOS_RESERVED_210                       EQU	0x2f48
                                           MIOS_RESERVED_211                       EQU	0x2f4c
                                           MIOS_RESERVED_212                       EQU	0x2f50
                                           MIOS_RESERVED_213                       EQU	0x2f54
                                           MIOS_RESERVED_214                       EQU	0x2f58
                                           MIOS_RESERVED_215                       EQU	0x2f5c
                                           MIOS_RESERVED_216                       EQU	0x2f60
                                           MIOS_RESERVED_217                       EQU	0x2f64
                                           MIOS_RESERVED_218                       EQU	0x2f68
                                           MIOS_RESERVED_219                       EQU	0x2f6c
                                           MIOS_RESERVED_220                       EQU	0x2f70
                                           MIOS_RESERVED_221                       EQU	0x2f74
                                           MIOS_RESERVED_222                       EQU	0x2f78
                                           MIOS_RESERVED_223                       EQU	0x2f7c
                                           MIOS_RESERVED_224                       EQU	0x2f80
                                           MIOS_RESERVED_225                       EQU	0x2f84
                                           MIOS_RESERVED_226                       EQU	0x2f88
                                           MIOS_RESERVED_227                       EQU	0x2f8c
                                           MIOS_RESERVED_228                       EQU	0x2f90
                                           MIOS_RESERVED_229                       EQU	0x2f94
                                           MIOS_RESERVED_230                       EQU	0x2f98
                                           MIOS_RESERVED_231                       EQU	0x2f9c
                                           MIOS_RESERVED_232                       EQU	0x2fa0
                                           MIOS_RESERVED_233                       EQU	0x2fa4
                                           MIOS_RESERVED_234                       EQU	0x2fa8
                                           MIOS_RESERVED_235                       EQU	0x2fac
                                           MIOS_RESERVED_236                       EQU	0x2fb0
                                           MIOS_RESERVED_237                       EQU	0x2fb4
                                           MIOS_RESERVED_238                       EQU	0x2fb8
                                           MIOS_RESERVED_239                       EQU	0x2fbc
                                           MIOS_RESERVED_240                       EQU	0x2fc0
                                           MIOS_RESERVED_241                       EQU	0x2fc4
                                           MIOS_RESERVED_242                       EQU	0x2fc8
                                           MIOS_RESERVED_243                       EQU	0x2fcc
                                           MIOS_RESERVED_244                       EQU	0x2fd0
                                           MIOS_RESERVED_245                       EQU	0x2fd4
                                           MIOS_RESERVED_246                       EQU	0x2fd8
                                           MIOS_RESERVED_247                       EQU	0x2fdc
                                           MIOS_RESERVED_248                       EQU	0x2fe0
                                           MIOS_RESERVED_249                       EQU	0x2fe4
                                           MIOS_RESERVED_250                       EQU	0x2fe8
                                           MIOS_RESERVED_251                       EQU	0x2fec
                                           MIOS_RESERVED_252                       EQU	0x2ff0
                                           MIOS_RESERVED_253                       EQU	0x2ff4
                                           MIOS_RESERVED_254                       EQU	0x2ff8
                                           MIOS_RESERVED_255                       EQU	0x2ffc
                                           #include "macros.inc"
                                           ;
                                           ; Macro Definitions
                                           ;
                                           ; ==========================================================================
                                           ;
                                           ;  Copyright 2006 Thorsten Klose (tk@midibox.org)
                                           ;  Licensed for personal non-commercial use only.
                                           ;  All other rights reserved.
                                           ; 
                                           ; ==========================================================================
                                           
                                           IFSET	MACRO	reg, bit, instr
                                           	btfsc	reg, bit
                                           	instr
                                           	ENDM
                                           
                                           
                                           IFCLR	MACRO	reg, bit, instr
                                           	btfss	reg, bit
                                           	instr
                                           	ENDM
                                           
                                           BIFSET	MACRO	reg, bit, reg_a, instr
                                           	btfsc	reg, bit, reg_a
                                           	instr
                                           	ENDM
                                           
                                           
                                           BIFCLR	MACRO	reg, bit, reg_a, instr
                                           	btfss	reg, bit, reg_a
                                           	instr
                                           	ENDM
                                           
                                           ;; ==========================================================================
                                           
                                           IFNEQ   MACRO   reg, reg_a, instr
                                                   cpfseq  reg, reg_a
                                                   instr
                                                   ENDM
                                           
                                           IFLEQ   MACRO   reg, reg_a, instr
                                                   cpfsgt  reg, reg_a
                                                   instr
                                                   ENDM
                                           
                                           IFGEQ   MACRO   reg, reg_a, instr
                                                   cpfslt  reg, reg_a
                                                   instr
                                                   ENDM
                                           
                                           	
                                           ;; ==========================================================================
                                           
                                           IRQ_DISABLE MACRO
                                                   bcf     INTCON, GIE
                                                   ENDM
                                           
                                           IRQ_ENABLE MACRO
                                                   bsf     INTCON, GIE
                                                   ENDM
                                           
                                           ;; ==========================================================================
                                           
                                           TABLE_ADDR_FULL MACRO addr
                                                   movlw   LOW(addr)
                                                   movwf   TBLPTRL
                                                   movlw   HIGH(addr)
                                                   movwf   TBLPTRH
                                                   movlw   (((addr) >> 16) & 0xff) ; store upper Byte
                                                   movwf   TBLPTRU
                                                   ENDM
                                                   
                                           TABLE_ADDR MACRO addr
                                                   movlw   LOW(addr)
                                                   movwf   TBLPTRL
                                                   movlw   HIGH(addr)
                                                   movwf   TBLPTRH
                                                   ENDM
                                           
                                           TABLE_ADD_W MACRO
                                           	addwf	TBLPTRL, F
                                           	movlw	0x00
                                           	addwfc	TBLPTRH, F
                                                   ENDM
                                           
                                           ;; ==========================================================================
                                           
                                           JUMPTABLE_2BYTES MACRO max_value
                                           	addlw	-max_value	; ensure that jump index is not greater than (max_value-1)
                                           	skpnc
                                           	movlw	-max_value
                                           	addlw	max_value
                                           	call	MIOS_HLP_GetIndex_2bytes
                                           	ENDM
                                           
                                           JUMPTABLE_2BYTES_UNSECURE MACRO
                                           	call	MIOS_HLP_GetIndex_2bytes
                                           	ENDM
                                           
                                           JUMPTABLE_4BYTES MACRO max_value
                                           	addlw	-max_value	; ensure that jump index is not greater than (max_value-1)
                                           	skpnc
                                           	return
                                           	addlw	max_value
                                           	call	MIOS_HLP_GetIndex_4bytes
                                           	ENDM
                                           
                                           JUMPTABLE_4BYTES_UNSECURE MACRO
                                           	call	MIOS_HLP_GetIndex_4bytes
                                           	ENDM
                                           
                                           ;; ==========================================================================
                                           
                                           TWOBYTE_ENTRY MACRO low_byte, high_byte
                                                   dw      (high_byte << 8) | (low_byte)
                                                   ENDM
                                           
                                           ;; ==========================================================================
                                           
                                           #define skpnz	btfsc	STATUS, Z 
                                           #define skpz	btfss	STATUS, Z 
                                           #define skpndc	btfsc	STATUS, DC 
                                           #define skpdc	btfss	STATUS, DC
                                           #define skpnc	btfsc	STATUS, C
                                           #define skpc	btfss	STATUS, C
                                           #define clrc	bcf	STATUS, C
                                           #define setc	bsf	STATUS, C
                                           #define clrz	bcf	STATUS, Z
                                           #define setz	bsf	STATUS, Z
                                           #define rrf	rrcf	
                                           #define rlf	rlcf
                                           
                                           rgoto   MACRO   label
0034c0   d7fd     bra	0x34bc                       bra     label
                                                   ENDM
                                           
                                           SET_BSR MACRO   reg
0034de   0100     movlb	0                          movlb   HIGH(reg)
                                                   ENDM
                                           
                                           ;; ==========================================================================
                                           
                                           FONT_ENTRY MACRO width, height, x0, char_offset
                                           	dw	((height) << 8) | (width), ((char_offset) << 8) | (x0)
                                           	ENDM
                                           
                                           ;; ==========================================================================
                                           
                                           STRING MACRO length, pos, str
                                           	da	((length) << 8) | (pos), str
                                           	ENDM
                                           
                                           ;; ==========================================================================
                                           
                                           ; ==========================================================================
                                           
                                           	;; export lables
                                           	global	_SM_Init		; (compiler removes the "_", see sm_simple.h)
                                           	global	_SM_PrepareCol
                                           	global	_SM_GetRow
                                           	global	_SM_ButtonHandler
                                           
                                           	global	_sm_button_column
                                           	global	_sm_button_row
                                           	global	_sm_button_value
                                           
                                           	;; import lables
                                           	extern	_SM_NotifyToggle
                                           
                                           ; ==========================================================================
                                           
                                           accessram		udata		; (no access ram required, these variables can be located anywhere)
                                           
                                           _sm_button_column	res	1	; exported to C, therefore an "_" has been added
                                           _sm_button_row		res	1
                                           _sm_button_value	res	1
                                           
                                           sm_selected_column	res	1
                                           sm_button_column_ctr	res	1
                                           
                                           sm_row_values		res	8
                                           sm_row_changed		res	8
                                           
                                           ; ==========================================================================
                                           SM_SIMPLE code
                                           ; ==========================================================================
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  FUNCTION: SM_Init
                                           ;;  DESCRIPTION: This function initializes the scan matrix.
                                           ;;  It should be called from USER_Init
                                           ;;  IN:   -
                                           ;;  OUT:  -
                                           ;;  USES: BSR
                                           ;; --------------------------------------------------------------------------
                                           _SM_Init ; (for C)
                                           SM_Init
                                           	;; set button value to initial value (1) of all 64 buttons
0034b4   ee10     lfsr	0x1, 0x85           	lfsr	FSR1, sm_row_values
0034b6   f085
0034b8   0e08     movlw	0x8                	movlw	0x08
0034ba   6ef3     movwf	0xf3, 0            	movwf	PRODL
                                           SM_Init_Loop1
0034bc   68e6     setf	0xe6, 0             	setf	POSTINC1
0034be   2ef3     decfsz	0xf3, 0x1, 0      	decfsz	PRODL, F
                                           	rgoto	SM_Init_Loop1
                                           
                                           	;; clear "changed" status of all 64 buttons
0034c2   ee10     lfsr	0x1, 0x8d           	lfsr	FSR1, sm_row_changed
0034c4   f08d
0034c6   0e08     movlw	0x8                	movlw	0x08
0034c8   6ef3     movwf	0xf3, 0            	movwf	PRODL
                                           SM_Init_Loop2
0034ca   6ae6     clrf	0xe6, 0             	clrf	POSTINC1
0034cc   2ef3     decfsz	0xf3, 0x1, 0      	decfsz	PRODL, F
                                           	rgoto	SM_Init_Loop2
                                           
                                           	;; select first column
0034d0   0e00     movlw	0                  	movlw	0x00
0034d2   ecc4     call	0x2d88, 0           	call	MIOS_HLP_GetBitANDMask	; (inverted 1 of 8 code)
0034d4   f016
0034d6   6e03     movwf	0x3, 0             	movwf	MIOS_PARAMETER1
0034d8   0e00     movlw	0                  	movlw	SM_COLUMN_DOUT
0034da   ec68     call	0x2cd0, 0           	call	MIOS_DOUT_SRSet
0034dc   f016
                                           
                                           	;; remember that this column has been selected
                                           	SET_BSR	sm_selected_column
0034e0   6b83     clrf	0x83, 0x1           	clrf	sm_selected_column, BANKED
                                           
0034e2   0012     return	0                 	return
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  FUNCTION: SM_PrepareCol
                                           ;;  DESCRIPTION: This function prepares the DOUT register to drive a column
                                           ;;  It should be called from USER_SR_Service_Prepare
                                           ;;  IN:   -
                                           ;;  OUT:  -
                                           ;;  USES: BSR
                                           ;; --------------------------------------------------------------------------
                                           ;;  Note that this is an interrupt service routine! Use FSR2 instead of FSR0
                                           ;;  and IRQ_TMPx instead of TMPx -- and make the routine as fast as possible
                                           ;; --------------------------------------------------------------------------
                                           _SM_PrepareCol ; (for C)
                                           SM_PrepareCol
                                           	;; select next DOUT register
                                           
                                           	;; (current column + 1) & 0x07
                                           	SET_BSR	sm_selected_column
0034e6   2983     incf	0x83, 0, 0x1        	incf	sm_selected_column, W, BANKED	; (* see note below)
0034e8   0b07     andlw	0x7                	andlw	0x07
0034ea   ecc4     call	0x2d88, 0           	call	MIOS_HLP_GetBitANDMask	; (inverted 1 of 8 code)
0034ec   f016
0034ee   6e03     movwf	0x3, 0             	movwf	MIOS_PARAMETER1
0034f0   0e00     movlw	0                  	movlw	SM_COLUMN_DOUT
0034f2   ec68     call	0x2cd0, 0           	call	MIOS_DOUT_SRSet
0034f4   f016
                                           
                                           	;; (*) note: the incremented "selected column" value won't be saved here, but
                                           	;; after SM_GetRow has been executed. 
                                           	;; Why?
                                           	;; because the new DOUT value will be "visible" after the DIN chain has
                                           	;; been captured by the SRIO driver, therefore the column which has been
                                           	;; selected here will be visible during the upper next scan
0034f6   0012     return	0                 	return
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  FUNCTION: SM_GetRow
                                           ;;  DESCRIPTION: This function gets the DIN values of the selected column
                                           ;;  It should be called from USER_SR_Service_Finish
                                           ;;  IN:   -
                                           ;;  OUT:  -
                                           ;;  USES: -
                                           ;; --------------------------------------------------------------------------
                                           ;;  Note that this is an interrupt service routine! Use FSR2 instead of FSR0
                                           ;;  and IRQ_TMPx instead of TMPx -- and make the routine as fast as possible
                                           ;; --------------------------------------------------------------------------
                                           _SM_GetRow ; (for C)
                                           SM_GetRow
                                           	;; determine changes and save new value in SW_ROWx_VALUE depending on selected column
0034f8   0e00     movlw	0                  	movlw	SM_ROW_DIN
0034fa   ec5c     call	0x2cb8, 0           	call	MIOS_DIN_SRGet
0034fc   f016
0034fe   ee10     lfsr	0x1, 0x85           	lfsr	FSR1, sm_row_values
003500   f085
                                           	SET_BSR	sm_selected_column
003504   5183     movf	0x83, 0, 0x1        	movf	sm_selected_column, W, BANKED
003506   cfe3     movff	0xfe3, 0xb         	movff	PLUSW1, IRQ_TMP1
003508   f00b
00350a   c003     movff	0x3, 0xfe3         	movff	MIOS_PARAMETER1, PLUSW1
00350c   ffe3
                                           
                                           	;; old value in IRQ_TMP1
                                           	;; new value in MIOS_PARAMETER1
                                           	;; select SM_ROWx_CHANGED register
00350e   ee10     lfsr	0x1, 0x8d           	lfsr	FSR1, sm_row_changed
003510   f08d
003512   5183     movf	0x83, 0, 0x1        	movf	sm_selected_column, W, BANKED
003514   26e1     addwf	0xe1, 0x1, 0       	addwf	FSR1L, F
                                           
                                           	;; changes are: IRQ_TMP1 xor MIOS_PARAMETER1
003516   500b     movf	0xb, 0, 0           	movf	IRQ_TMP1, W
003518   1803     xorwf	0x3, 0, 0          	xorwf	MIOS_PARAMETER1, W
                                           
                                           	;; OR the result to the already notified changes (if they has not been zeroed by the ButtonHandler)
00351a   12e7     iorwf	0xe7, 0x1, 0       	iorwf	INDF1, F
                                           
                                           	;; increment column, wrap at 8
00351c   2983     incf	0x83, 0, 0x1        	incf	sm_selected_column, W, BANKED
00351e   0b07     andlw	0x7                	andlw	0x07
003520   6f83     movwf	0x83, 0x1          	movwf	sm_selected_column, BANKED
                                           	
003522   0012     return	0                 	return
                                           
                                           ;; --------------------------------------------------------------------------
                                           ;;  FUNCTION: SM_ButtonHandler
                                           ;;  DESCRIPTION: This function should be called from USER_Tick (in the
                                           ;;  mainprogram) to ask for button changes. Events (change from 0->1 or
                                           ;;  from 1->0) will be notified via the SM_NotifyToggle hook
                                           ;;  which behaves similar to the USER_DIN_NotifyToggle hook provided by
                                           ;;  MIOS itself
                                           ;; 
                                           ;;  IN:   -
                                           ;;  OUT:  -
                                           ;;  USES: -
                                           ;; --------------------------------------------------------------------------
                                           _SM_ButtonHandler ; (for C)
                                           SM_ButtonHandler
                                           	SET_BSR	sm_button_column_ctr
003526   6b84     clrf	0x84, 0x1           	clrf	sm_button_column_ctr, BANKED
                                           SM_ButtonHandler_Loop
003528   ee10     lfsr	0x1, 0x8d           	lfsr	FSR1, sm_row_changed
00352a   f08d
00352c   5184     movf	0x84, 0, 0x1        	movf	sm_button_column_ctr, W, BANKED
00352e   26e1     addwf	0xe1, 0x1, 0       	addwf	FSR1L, F
003530   50e7     movf	0xe7, 0, 0          	movf	INDF1, W
003532   e010     bz	0x3554                	bz	SM_ButtonHandler_Loop_Next
003534   b0e7     btfsc	0xe7, 0, 0         	btfsc	INDF1, 0		; fastest solution...
003536   d813     rcall	0x355e             	rcall	SM_NotifyToggle_Pin0
003538   b2e7     btfsc	0xe7, 0x1, 0       	btfsc	INDF1, 1
00353a   d814     rcall	0x3564             	rcall	SM_NotifyToggle_Pin1
00353c   b4e7     btfsc	0xe7, 0x2, 0       	btfsc	INDF1, 2
00353e   d815     rcall	0x356a             	rcall	SM_NotifyToggle_Pin2
003540   b6e7     btfsc	0xe7, 0x3, 0       	btfsc	INDF1, 3
003542   d816     rcall	0x3570             	rcall	SM_NotifyToggle_Pin3
003544   b8e7     btfsc	0xe7, 0x4, 0       	btfsc	INDF1, 4
003546   d817     rcall	0x3576             	rcall	SM_NotifyToggle_Pin4
003548   bae7     btfsc	0xe7, 0x5, 0       	btfsc	INDF1, 5
00354a   d818     rcall	0x357c             	rcall	SM_NotifyToggle_Pin5
00354c   bce7     btfsc	0xe7, 0x6, 0       	btfsc	INDF1, 6
00354e   d819     rcall	0x3582             	rcall	SM_NotifyToggle_Pin6
003550   bee7     btfsc	0xe7, 0x7, 0       	btfsc	INDF1, 7
003552   d81a     rcall	0x3588             	rcall	SM_NotifyToggle_Pin7
                                           SM_ButtonHandler_Loop_Next
003554   2b84     incf	0x84, 0x1, 0x1      	incf	sm_button_column_ctr, F, BANKED
003556   0e07     movlw	0x7                	movlw	0x08-1		; (8 columns)
003558   6584     cpfsgt	0x84, 0x1         	cpfsgt	sm_button_column_ctr, BANKED
                                           	rgoto	SM_ButtonHandler_Loop
00355c   0012     return	0                 	return
                                           
                                           	;; ---
                                           
                                           SM_NotifyToggle_Pin0
00355e   90e7     bcf	0xe7, 0, 0           	bcf	INDF1, 0			; clear "changed" flag
003560   0e00     movlw	0                  	movlw	0x00
                                           	rgoto	SM_NotifyToggle_Pin_Cont
                                           SM_NotifyToggle_Pin1
003564   92e7     bcf	0xe7, 0x1, 0         	bcf	INDF1, 1			; clear "changed" flag
003566   0e01     movlw	0x1                	movlw	0x01
                                           	rgoto	SM_NotifyToggle_Pin_Cont
                                           SM_NotifyToggle_Pin2
00356a   94e7     bcf	0xe7, 0x2, 0         	bcf	INDF1, 2			; clear "changed" flag
00356c   0e02     movlw	0x2                	movlw	0x02
                                           	rgoto	SM_NotifyToggle_Pin_Cont
                                           SM_NotifyToggle_Pin3
003570   96e7     bcf	0xe7, 0x3, 0         	bcf	INDF1, 3			; clear "changed" flag
003572   0e03     movlw	0x3                	movlw	0x03
                                           	rgoto	SM_NotifyToggle_Pin_Cont
                                           SM_NotifyToggle_Pin4
003576   98e7     bcf	0xe7, 0x4, 0         	bcf	INDF1, 4			; clear "changed" flag
003578   0e04     movlw	0x4                	movlw	0x04
                                           	rgoto	SM_NotifyToggle_Pin_Cont
                                           SM_NotifyToggle_Pin5
00357c   9ae7     bcf	0xe7, 0x5, 0         	bcf	INDF1, 5			; clear "changed" flag
00357e   0e05     movlw	0x5                	movlw	0x05
                                           	rgoto	SM_NotifyToggle_Pin_Cont
                                           SM_NotifyToggle_Pin6
003582   9ce7     bcf	0xe7, 0x6, 0         	bcf	INDF1, 6			; clear "changed" flag
003584   0e06     movlw	0x6                	movlw	0x06
                                           	rgoto	SM_NotifyToggle_Pin_Cont
                                           SM_NotifyToggle_Pin7
003588   9ee7     bcf	0xe7, 0x7, 0         	bcf	INDF1, 7			; clear "changed" flag
00358a   0e07     movlw	0x7                	movlw	0x07
                                           	;; 	rgoto	SM_NotifyToggle_Pin_Cont
                                           SM_NotifyToggle_Pin_Cont
00358c   6f81     movwf	0x81, 0x1          	movwf	_sm_button_row, BANKED
                                           
                                           	;; store pin value in SM_BUTTON_VALUE
00358e   ee10     lfsr	0x1, 0x85           	lfsr	FSR1, sm_row_values
003590   f085
003592   5184     movf	0x84, 0, 0x1        	movf	sm_button_column_ctr, W, BANKED
003594   26e1     addwf	0xe1, 0x1, 0       	addwf	FSR1L, F
003596   5181     movf	0x81, 0, 0x1        	movf	_sm_button_row, W, BANKED
003598   ecc6     call	0x2d8c, 0           	call	MIOS_HLP_GetBitORMask
00359a   f016
00359c   14e7     andwf	0xe7, 0, 0         	andwf	INDF1, W
00359e   a4d8     btfss	0xd8, 0x2, 0       	skpz
0035a0   0e01     movlw	0x1                	movlw	0x01
0035a2   6f82     movwf	0x82, 0x1          	movwf	_sm_button_value
                                           
                                           	;; for compatibility with USER_DIN_NotifyToggle:
                                           	;; save button value in MIOS_PARAMETER2
0035a4   6e04     movwf	0x4, 0             	movwf	MIOS_PARAMETER2
                                           	;; save button number (0x00-0xff) in MIOS_PARAMETER1
                                           	;; if more than 256 buttons are connected, use SM_BUTTON_COLUMN and SM_BUTTON_ROW to determine the number
                                           #if SM_SWAP_CR
                                           	movf	sm_button_column_ctr, W, BANKED
                                           	movwf	_sm_button_column, BANKED
                                           	movf	_sm_button_row, W, BANKED
                                           	mullw	0x08
                                           	movf	PRODL, W
                                           	addwf	_sm_button_column, W, BANKED	
                                           #else
0035a6   5184     movf	0x84, 0, 0x1        	movf	sm_button_column_ctr, W, BANKED
0035a8   6f80     movwf	0x80, 0x1          	movwf	_sm_button_column, BANKED
0035aa   0d08     mullw	0x8                	mullw	0x08
0035ac   50f3     movf	0xf3, 0, 0          	movf	PRODL, W
0035ae   2581     addwf	0x81, 0, 0x1       	addwf	_sm_button_row, W, BANKED
                                           #endif
                                           
                                           	;; call C hook
0035b0   6e03     movwf	0x3, 0             	movwf	MIOS_PARAMETER1			; button number still in WREG
0035b2   c082     movff	0x82, 0xfed        	movff	_sm_button_value, POSTDEC0	; pin value
0035b4   ffed
0035b6   ec87     call	0x330e, 0           	call	_SM_NotifyToggle
0035b8   f019
0035ba   2ae9     incf	0xe9, 0x1, 0        	incf	FSR0L, F			; restore stack pointer
                                           
0035bc   ee10     lfsr	0x1, 0x8d           	lfsr	FSR1, sm_row_changed	; fix FSR1 if it has been overwritten
0035be   f08d
                                           	SET_BSR	sm_button_column_ctr
0035c2   5184     movf	0x84, 0, 0x1        	movf	sm_button_column_ctr, W, BANKED
0035c4   26e1     addwf	0xe1, 0x1, 0       	addwf	FSR1L, F
0035c6   0012     return	0                 	return
                                           
                                           ; ==========================================================================
                                           	END
